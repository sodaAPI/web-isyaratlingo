{
  "name": "docxtemplater",
  "version": "3.34.2",
  "author": "Edgar Hipp",
  "description": "Generate docx, pptx, and xlsx from templates (Word, Powerpoint and Excel documents), from Node.js, the Browser and the command line",
  "contributors": [
    {
      "name": "Edgar Hipp"
    }
  ],
  "main": "js/docxtemplater.js",
  "keywords": [
    "docx",
    "pptx",
    "templates",
    "template",
    "templater",
    "templating",
    "report",
    "xlsx",
    "generation",
    "generate",
    "generator",
    "microsoft office",
    "microsoft word",
    "microsoft powerpoint",
    "microsoft excel",
    "create",
    "make",
    "Office Open XML",
    "creator"
  ],
  "types": "./js/docxtemplater.d.ts",
  "repository": {
    "type": "git",
    "url": "https://github.com/open-xml-templating/docxtemplater"
  },
  "dependencies": {
    "@xmldom/xmldom": "^0.8.6"
  },
  "devDependencies": {
    "@babel/cli": "^7.21.0",
    "@babel/core": "^7.21.0",
    "@babel/eslint-parser": "^7.19.1",
    "@babel/plugin-proposal-object-rest-spread": "^7.20.7",
    "@babel/preset-env": "^7.20.2",
    "@stryker-mutator/core": "^6.4.1",
    "@stryker-mutator/mocha-runner": "^6.4.1",
    "@wdio/cli": "^8.3.10",
    "angular-expressions": "^1.1.8",
    "babel-loader": "^9.1.2",
    "chai": "^4.3.7",
    "chalk": "^5.2.0",
    "diff": "^5.1.0",
    "envify": "^4.1.0",
    "es6-promise": "^4.2.8",
    "eslint": "^8.34.0",
    "eslint_d": "^12.2.1",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-sort-class-members": "^1.16.0",
    "eslint-plugin-specific-sort": "file:.eslint-rules",
    "finalhandler": "^1.2.0",
    "lodash": "^4.17.21",
    "mkdirp": "^2.1.3",
    "mocha": "^10.2.0",
    "nyc": "^15.1.0",
    "pizzip": "^3.1.4",
    "prettier": "^2.8.4",
    "request": "^2.88.2",
    "rimraf": "^4.1.2",
    "selenium-standalone": "^8.3.0",
    "serve-static": "^1.15.0",
    "stryker-cli": "^1.0.2",
    "tsd": "^0.25.0",
    "webdriverio": "^8.3.10",
    "webpack": "^5.75.0",
    "webpack-cli": "^5.0.1"
  },
  "license": "MIT",
  "engines": {
    "node": ">=0.10"
  },
  "scripts": {
    "generate:doc": "cd docs; rm build/ -rf ; make html",
    "profile": "./profile.bash",
    "preversion": "npm run test:es6 && npm run lint && FAST= npm test && rimraf build && mkdirp build && npm run browserify && npm run test:typings && npm run verifypublishsize && npm run test:browser && cp es6/expressions.js es6/expressions-ie11.js .",
    "check-casing": "./check-casing.bash",
    "compile": "npm run convertto:es5",
    "browserify:test": "FILE=test webpack",
    "browserify:lib": "webpack",
    "browserify:min": "MIN=true webpack",
    "updtr": "updtr",
    "browserify": "npm run browserify:test && npm run browserify:lib && npm run browserify:min",
    "convertto:es5": "rimraf js -rf && mkdirp js && npm run babel && cp es6/*.ts js",
    "convertto:es5:watch": "npm run babel -- --watch",
    "test:coverage": "nyc --reporter=html --reporter=text mocha --  es6/tests/index.js",
    "prettier": "prettier --cache --list-different 'es6/**/!(filenames).js' '*.js' '*.mjs' 'es6/*.ts' '.eslint-rules/*.js' README.md CHANGELOG.md",
    "prettier:fix": "prettier --cache --write 'es6/**/!(filenames).js' '*.js' '*.mjs' 'es6/*.ts' '.eslint-rules/*.js' README.md CHANGELOG.md",
    "lint": "eslint_d . --cache && ./check-casing.bash && npm run prettier",
    "lint:fix": "npm run prettier:fix && ./check-casing.bash && eslint_d . --cache",
    "test:chrome": "BROWSER=CHROME ./webdriver.bash",
    "test:firefox": "BROWSER=FIREFOX ./webdriver.bash",
    "test:browser": "./webdriver.bash",
    "babel": "babel es6 --out-dir js",
    "mocha": "mocha --full-trace --check-leaks js/tests/index.js",
    "test:es6": "mocha --full-trace --check-leaks es6/tests/index.js",
    "test:es6:update-fixtures": "UPDATE=true mocha --full-trace --check-leaks es6/tests/index.js",
    "test:es6:fast": "FAST=true mocha --full-trace --check-leaks es6/tests/index.js",
    "test:watch": "FAST=true mocha --watch --full-trace --check-leaks es6/tests/index.js",
    "test:es6:slow": "FAST= mocha --full-trace --check-leaks es6/tests/index.js",
    "test": "npm run convertto:es5 && npm run mocha",
    "test:es5": "npm test",
    "test:typings": "cp es6/*.ts js && tsd .",
    "test:mutations": "SPEED_TEST=no stryker run",
    "memorytest": "node --max-old-space-size=8000 es6/memory-test.js",
    "verifypublishsize": "./verifypublishsize.bash"
  },
  "tsd": {
    "compilerOptions": {
      "lib": [
        "DOM"
      ]
    }
  }
}
