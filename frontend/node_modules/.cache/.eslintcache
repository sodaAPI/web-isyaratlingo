[{"C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\index.js":"1","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\App.js":"3","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\app\\store.js":"4","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\ForgotPassword.jsx":"5","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\Register.jsx":"6","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\Home.jsx":"7","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\PageNotFound.jsx":"8","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\Login.jsx":"9","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\Users.jsx":"10","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\Dictionary.jsx":"11","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\AdminDashboard.jsx":"12","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\Shop.jsx":"13","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\LearningHome.jsx":"14","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\users\\editUser.jsx":"15","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\users\\addUser.jsx":"16","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\auth\\authSlice.js":"17","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\components\\NavbarLogin.jsx":"18","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\components\\Navbar.jsx":"19","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\components\\Footer.jsx":"20","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\components\\SidebarLearning.jsx":"21","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\components\\Pagination.jsx":"22","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\users\\listUsers.jsx":"23","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\dictionary\\listDictionary.jsx":"24","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\shop\\listShop.jsx":"25","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\dictionary\\editDictionary.jsx":"26","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\dictionary\\addDictionary.jsx":"27","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\shop\\editShop.jsx":"28","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\shop\\addShop.jsx":"29","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\ResetPassword.jsx":"30","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\Leaderboard.jsx":"31","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\Profile.jsx":"32","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\Shop.jsx":"33","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\Dictionary.jsx":"34","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\components\\RightDetail.jsx":"35","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\ChangePassword.jsx":"36","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\EditProfile.jsx":"37","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\LearningInstruction.jsx":"38","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\LearningPage.jsx":"39","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\components\\ChartsUser.jsx":"40","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\MigrateLearn.jsx":"41","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\MigrateLesson.jsx":"42","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\LearningTemp.jsx":"43","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\LessonTemp.jsx":"44"},{"size":726,"mtime":1697196967000,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":1697196967000,"results":"47","hashOfConfig":"46"},{"size":4104,"mtime":1698635400901,"results":"48","hashOfConfig":"46"},{"size":180,"mtime":1697196967000,"results":"49","hashOfConfig":"46"},{"size":4448,"mtime":1698635074316,"results":"50","hashOfConfig":"46"},{"size":7066,"mtime":1698591769799,"results":"51","hashOfConfig":"46"},{"size":7438,"mtime":1697196967000,"results":"52","hashOfConfig":"46"},{"size":1045,"mtime":1697196967000,"results":"53","hashOfConfig":"46"},{"size":7241,"mtime":1697196967000,"results":"54","hashOfConfig":"46"},{"size":3822,"mtime":1698591769838,"results":"55","hashOfConfig":"46"},{"size":3656,"mtime":1698591769838,"results":"56","hashOfConfig":"46"},{"size":5900,"mtime":1698591769844,"results":"57","hashOfConfig":"46"},{"size":4184,"mtime":1698591769838,"results":"58","hashOfConfig":"46"},{"size":4828,"mtime":1698591769834,"results":"59","hashOfConfig":"46"},{"size":15883,"mtime":1698591769881,"results":"60","hashOfConfig":"46"},{"size":12691,"mtime":1698591770062,"results":"61","hashOfConfig":"46"},{"size":2215,"mtime":1698591958590,"results":"62","hashOfConfig":"46"},{"size":382,"mtime":1697196967000,"results":"63","hashOfConfig":"46"},{"size":2797,"mtime":1697196967000,"results":"64","hashOfConfig":"46"},{"size":488,"mtime":1697196967000,"results":"65","hashOfConfig":"46"},{"size":17605,"mtime":1698507977529,"results":"66","hashOfConfig":"46"},{"size":978,"mtime":1697196967000,"results":"67","hashOfConfig":"46"},{"size":7349,"mtime":1698591770079,"results":"68","hashOfConfig":"46"},{"size":6301,"mtime":1698591769927,"results":"69","hashOfConfig":"46"},{"size":4897,"mtime":1698591769867,"results":"70","hashOfConfig":"46"},{"size":10918,"mtime":1698591769867,"results":"71","hashOfConfig":"46"},{"size":8607,"mtime":1698591770080,"results":"72","hashOfConfig":"46"},{"size":6281,"mtime":1698591770102,"results":"73","hashOfConfig":"46"},{"size":3417,"mtime":1698591769867,"results":"74","hashOfConfig":"46"},{"size":3474,"mtime":1698591971789,"results":"75","hashOfConfig":"46"},{"size":3582,"mtime":1698591769835,"results":"76","hashOfConfig":"46"},{"size":7044,"mtime":1698591769803,"results":"77","hashOfConfig":"46"},{"size":4421,"mtime":1698592055298,"results":"78","hashOfConfig":"46"},{"size":19748,"mtime":1698591769838,"results":"79","hashOfConfig":"46"},{"size":5051,"mtime":1698591966309,"results":"80","hashOfConfig":"46"},{"size":5202,"mtime":1698591769838,"results":"81","hashOfConfig":"46"},{"size":6096,"mtime":1698591769842,"results":"82","hashOfConfig":"46"},{"size":5032,"mtime":1698591769835,"results":"83","hashOfConfig":"46"},{"size":7100,"mtime":1698591769835,"results":"84","hashOfConfig":"46"},{"size":2173,"mtime":1698591963832,"results":"85","hashOfConfig":"46"},{"size":2918,"mtime":1698591769835,"results":"86","hashOfConfig":"46"},{"size":1517,"mtime":1698591769803,"results":"87","hashOfConfig":"46"},{"size":4354,"mtime":1698635863724,"results":"88","hashOfConfig":"46"},{"size":6305,"mtime":1698635797594,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"1osv1vm",{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"93"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"93"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"93"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"93"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"93"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"93"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":18,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"93"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":13,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"93"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"93"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"93"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"93"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"93"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"93"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":5,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"93"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":5,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"93"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":9,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"93"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"93"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":9,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"93"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"93"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"93"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"93"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"93"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"93"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"93"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"93"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"93"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"93"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"93"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"93"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":1,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\index.js",[],[],[],"C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\App.js",[],[],"C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\app\\store.js",[],[],"C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\ForgotPassword.jsx",["252","253"],[],"C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\Register.jsx",["254"],[],"import Navbar from \"../components/NavbarLogin\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\n\nexport default function Register() {\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n  const navigate = useNavigate();\n\n  const Register = async (e) => {\n    e.preventDefault();\n    try {\n      if (password === confirmpassword) {\n        const response = await axios.post(\"http://localhost:5000/user\", {\n          name: name,\n          age: age,\n          email: email,\n          password: password,\n          confirmpassword: confirmpassword,\n        });\n        setMsg(\"Registration Successful\");\n        setTimeout(() => {\n          navigate(\"/login\");\n        }, 1000); // Delay navigation to /login for 5 seconds\n        if (response.data.success) {\n          // Registration successful, show success message\n        } else {\n          // Registration failed, show error message\n          setMsg(response.data.msg);\n        }\n      } else {\n        setMsg(\"Passwords do not match!\");\n      }\n    } catch (error) {\n      if (error.response) {\n        setMsg(error.response.data.msg);\n      }\n    }\n  };\n\n  useEffect(() => {\n    AOS.init();\n  }, []);\n\n  const gotoLogin = async () => {\n    let path = \"/login\";\n    navigate(path);\n  };\n  return (\n    <>\n      <div className=\"min-h-screen\">\n        <Navbar />\n        {/* Home Button */}\n        <div className=\"flex items-center mx-10 mt-5\">\n          <a\n            data-tip=\"Home\"\n            href=\"/home\"\n            className=\"flex flex-row items-center pointer-events-none group tooltip tooltip-right\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              strokeWidth=\"2\"\n              stroke=\"#B7B6B8\"\n              className=\"w-12 h-12 border-[3px] border-[#B7B6B8] rounded-full mr-2 hover:border-[#205AFC] pointer-events-auto group-hover:stroke-[#205AFC]\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                d=\"M15.75 19.5L8.25 12l7.5-7.5\"\n              />\n            </svg>\n          </a>\n        </div>\n        {msg && ( // Check if msg is not empty before rendering the message\n          <div className=\"toast toast-end\">\n            <div className=\"alert alert-info\">\n              <span>{msg}</span>\n            </div>\n          </div>\n        )}\n\n        <h1\n          data-aos=\"fade-down\"\n          data-aos-offset=\"200\"\n          data-aos-delay=\"50\"\n          data-aos-duration=\"1000\"\n          className=\"text-black font-bold text-3xl py-10\">\n          Create your account\n        </h1>\n        <form\n          data-aos=\"zoom-in\"\n          data-aos-offset=\"200\"\n          data-aos-delay=\"50\"\n          data-aos-duration=\"1000\"\n          onSubmit={Register}>\n          <div className=\"flex flex-col justify-center items-center gap-2\">\n            {/* Name */}\n            <div className=\"flex flex-row justify-right items-center gap-3\">\n              <input\n                id=\"name\"\n                value={name}\n                className=\"py-2 [width:400px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                placeholder=\"Name\"\n                type=\"text\"\n                onChange={(event) => setName(event.target.value)}\n                required\n                autoFocus\n              />\n            </div>\n\n            {/* Age */}\n            <div className=\"flex flex-row justify-right items-center gap-3\">\n              <input\n                id=\"age\"\n                value={age}\n                className=\"py-2 [width:400px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                placeholder=\"Age\"\n                type=\"number\"\n                onChange={(event) => setAge(event.target.value)}\n                required\n                autoFocus\n              />\n            </div>\n\n            {/* Email */}\n            <div className=\"flex flex-row justify-right items-center gap-3\">\n              <input\n                id=\"email\"\n                value={email}\n                className=\"py-2 [width:400px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                placeholder=\"Email\"\n                type=\"email\"\n                onChange={(event) => setEmail(event.target.value)}\n                required\n                autoFocus\n              />\n            </div>\n\n            {/* Password */}\n            <div className=\"flex flex-row justify-right items-center gap-3\">\n              <input\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                value={password}\n                className=\"py-2 [width:400px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                onChange={(event) => setPassword(event.target.value)}\n                required\n                autoComplete=\"current-password\"\n              />\n            </div>\n\n            {/* Confirm Passowrd */}\n            <div className=\"flex flex-row justify-right items-center gap-3\">\n              <input\n                id=\"confirmpassword\"\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                value={confirmpassword}\n                className=\"py-2 [width:400px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                onChange={(event) => setConfirmPassword(event.target.value)}\n                required\n                autoComplete=\"current-password\"\n              />\n            </div>\n          </div>\n          <div className=\"mt-10\">\n            <button className=\"btn-register [width:400px] py-3 rounded-full font-bold normal-case text-lg text-white hover:text-green-100\">\n              CREATE ACCOUNT\n            </button>\n          </div>\n        </form>\n\n        {/* Buttons */}\n        <div\n          data-aos=\"zoom-in\"\n          data-aos-offset=\"150\"\n          data-aos-delay=\"50\"\n          data-aos-duration=\"1000\"\n          className=\"pb-10\">\n          <div className=\"flex divider justify-center items-center [padding-left:575px] [padding-right:575px] text-[#B7B6B8] font-semibold\">\n            OR\n          </div>\n          <button\n            onClick={gotoLogin}\n            className=\"btn-login [width:400px] py-3 rounded-full font-bold normal-case text-lg text-white hover:text-blue-100\">\n            LOGIN\n          </button>\n        </div>\n        <a\n          data-aos=\"zoom-in\"\n          data-aos-offset=\"50\"\n          data-aos-delay=\"50\"\n          data-aos-duration=\"1000\"\n          className=\"text-[#B5BECA] text-sm\">\n          By registering to <b>Isyaratlingo</b>, you agree to our{\" \"}\n          <b>Terms and Privacy Policy</b>.\n        </a>\n      </div>\n    </>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\Home.jsx",["255","256","257","258","259"],[],"import React from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport HeroImage from \"../images/hero.png\";\nimport Logo from \"../images/logo-white.png\";\nimport AboutImage from \"../images/about-ilustration.png\";\nimport BisindoImage from \"../images/bisindo.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport Footer from \"../components/Footer\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\n\nexport default function () {\n  const navigate = useNavigate();\n  const gotoLogin = async () => {\n    let path = \"/login\";\n    navigate(path);\n  };\n  AOS.init();\n\n  return (\n    <>\n      <head>\n        <title>Isyaratlingo</title>\n        <meta\n          name=\"description\"\n          content=\"Isyaratlingo is a BISINDO sign language learning web with gamification\"\n        />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <link rel=\"stylesheet\" href=\"/css/style.min.css\" />\n        <script src=\"/js/app.js\"></script>\n        <noscript>You need to enable JavaScript to run this app.</noscript>\n      </head>\n      <div>\n        <div\n          className=\"bg-[#205AFC] sticky top-0 z-10\">\n          <Navbar />\n        </div>\n        <div id=\"hero\" className=\"min-h-screen bg-[#205AFC]\">\n          {/* Hero Section */}\n          <section\n            data-aos=\"fade-down\"\n            data-aos-offset=\"200\"\n            data-aos-delay=\"50\"\n            data-aos-duration=\"1000\"\n            data-aos-easing=\"ease-in-out\"\n            className=\"flex flex-col items-center justify-center\">\n            {/* Image */}\n            <img\n              className=\"mt-8 mb-5 w-4/6 animation-hovering\"\n              src={HeroImage}\n              alt=\"Hero Image\"\n            />\n            <button\n              onClick={gotoLogin}\n              className=\"flex flex-row items-center justify-center gap-2 absolute btn-getstarted px-8 py-4 rounded-full font-bold normal-case text-2xl text-white hover:text-[#daff49] mt-5\">\n              GET STARTED\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke-width=\"1.5\"\n                stroke=\"currentColor\"\n                class=\"w-6 h-6\">\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  d=\"M8.25 4.5l7.5 7.5-7.5 7.5\"\n                />\n              </svg>\n            </button>\n\n            {/* Description */}\n            <div>\n              <h1 className=\"text-5xl text-white font-serif\">\n                Communicate With <b className=\"text-[#daff49]\">Deaf</b> And\n                <br /> <b className=\"text-[#daff49]\">Hard Of Hearing </b> People\n              </h1>\n              <h2 className=\"mr-80 ml-80 mt-5 text-center text-white text-lg font-light\">\n                Belajar Bahasa Isyarat Indonesia (BISINDO) memiliki manfaat\n                penting, termasuk memfasilitasi komunikasi yang lebih baik\n                dengan komunitas tunarungu dan meningkatkan kesadaran tentang\n                inklusivitas sosial.\n              </h2>\n            </div>\n          </section>\n        </div>\n\n        {/* About */}\n        <div id=\"about\" className=\"min-h-screen my-5\">\n          <div\n            data-aos=\"zoom-in-left\"\n            data-aos-offset=\"200\"\n            data-aos-delay=\"50\"\n            data-aos-duration=\"750\"\n            data-aos-easing=\"ease-in-out\"\n            className=\"flex flex-row px-52 gap-20 \">\n            <div className=\"flex flex-col gap-10 py-5\">\n              <h1 className=\"text-5xl font-bold text-[#205AFC] underline-title mx-52\">\n                About\n              </h1>\n              <h2 className=\" text-justify font-medium\">\n                <b className=\"text-[#205AFC]\">Isyaratlingo</b> adalah sebuah\n                website pembelajaran bahasa isyarat BISINDO yang inovatif dan\n                menarik, dikembangkan dengan konsep gamifikasi. Website ini\n                terinspirasi oleh metode gamifikasi yang digunakan oleh{\" \"}\n                <a\n                  href=\"https://www.duolingo.com/\"\n                  className=\"font-bold text-[#58C706]\">\n                  Duolingo{\" \"}\n                </a>\n                bertujuan untuk membantu pengguna dalam mempelajari bahasa\n                isyarat dengan cara yang menyenangkan dan interaktif.\n                <br />\n                <br />\n                Dengan menggunakan metodologi gamifikasi, Isyaratlingo\n                menyajikan pembelajaran bahasa isyarat sebagai sebuah permainan\n                yang menantang, di mana pengguna akan meraih poin, mencapai\n                level, dan mendapatkan hadiah sebagai penghargaan atas prestasi\n                mereka dalam belajar bahasa isyarat. Fitur ini akan meningkatkan\n                motivasi pengguna untuk aktif berpartisipasi dan berinteraksi\n                dengan konten pembelajaran.\n              </h2>\n            </div>\n            <img\n              className=\" w-2/5\"\n              src={AboutImage}\n              alt=\"Image by vectorjuice on Freepik\"\n            />\n          </div>\n\n          <div\n            data-aos=\"zoom-in\"\n            data-aos-offset=\"200\"\n            data-aos-delay=\"50\"\n            data-aos-duration=\"750\"\n            data-aos-easing=\"ease-in-out\"\n            className=\"divider mx-80 my-10\"\n          />\n\n          {/* What is BISINDO */}\n          <div\n            data-aos=\"zoom-in-right\"\n            data-aos-offset=\"200\"\n            data-aos-delay=\"50\"\n            data-aos-duration=\"750\"\n            data-aos-easing=\"ease-in-out\"\n            className=\"my-10\">\n            <div className=\"flex flex-row px-52 gap-20 \">\n              <img\n                className=\"w-2/5\"\n                src={BisindoImage}\n                alt=\"Image by vectorjuice on Freepik\"\n              />\n              <div className=\"flex flex-col gap-10 py-5\">\n                <h1 className=\"text-5xl font-bold text-[#205AFC] underline-title mx-12\">\n                  What is BISINDO ?\n                </h1>\n                <h2 className=\" text-justify font-medium\">\n                  <b className=\"text-[#205AFC]\">BISINDO</b> adalah singkatan\n                  dari Bahasa Isyarat Indonesia. Ini adalah bahasa isyarat yang\n                  digunakan oleh komunitas tunarungu di Indonesia sebagai sarana\n                  komunikasi mereka. BISINDO bukanlah bahasa verbal, melainkan\n                  sebuah sistem bahasa isyarat yang menggunakan gerakan tangan,\n                  ekspresi wajah, dan tubuh untuk menyampaikan makna dan\n                  komunikasi.\n                  <br />\n                  <br />\n                  Setiap gerakan tangan dan ekspresi wajah dalam BISINDO\n                  memiliki arti dan makna tertentu, sehingga membentuk kalimat\n                  dan komunikasi yang lengkap dan bermakna. BISINDO juga\n                  memiliki struktur tata bahasa sendiri, yang berbeda dengan\n                  bahasa verbal seperti bahasa Indonesia, Inggris, atau\n                  bahasa-bahasa lainnya.\n                </h2>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* How it works */}\n        {/* <div className=\"min-h-screen\">\n          <div className=\"bg-[#205AFC] mx-20 rounded-lg text-white\">\n            Hello World !\n          </div>\n        </div> */}\n\n        {/* Footer */}\n        <Footer />\n      </div>\n    </>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\PageNotFound.jsx",[],["260"],"C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\Login.jsx",["261","262"],[],"import Navbar from \"../components/NavbarLogin\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport { LoginUser, reset, getMe } from \"../auth/authSlice\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { user, isError, isSuccess, message } = useSelector(\n    (state) => state.auth\n  );\n\n  useEffect(() => {\n    if (user || isSuccess) {\n      navigate(\"/learning\");\n    }\n    dispatch(reset());\n  }, [user, isSuccess, dispatch, navigate]);\n\n  const Auth = async (e) => {\n    e.preventDefault();\n    dispatch(LoginUser({ email, password }));\n  };\n\n  useEffect(() => {\n    dispatch(getMe());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isError) {\n      navigate(\"/login\");\n    }\n  }, [isError, navigate]);\n\n  const [passwordVisible, setPasswordVisible] = useState(false);\n\n  useEffect(() => {\n    AOS.init();\n  }, []);\n\n  const gotoRegister = async () => {\n    let path = \"/register\";\n    navigate(path);\n  };\n\n  return (\n    <>\n      <div className=\"min-h-screen\">\n        <Navbar />\n        {/* Home Button */}\n        <div className=\"flex items-center mx-10 mt-5\">\n          <a\n            data-tip=\"Home\"\n            href=\"/home\"\n            className=\"flex flex-row items-center pointer-events-none group tooltip tooltip-right\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              strokeWidth=\"2\"\n              stroke=\"#B7B6B8\"\n              className=\"w-12 h-12 border-[3px] border-[#B7B6B8] rounded-full mr-2 hover:border-[#205AFC] pointer-events-auto group-hover:stroke-[#205AFC]\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                d=\"M15.75 19.5L8.25 12l7.5-7.5\"\n              />\n            </svg>\n          </a>\n        </div>\n        {isError ? (\n          <div className=\"toast toast-end\">\n            <div className=\"alert alert-info\">\n              <span>{message}</span>\n            </div>\n          </div>\n        ) : (\n          <></>\n        )}\n        <h1\n          data-aos=\"fade-down\"\n          data-aos-offset=\"200\"\n          data-aos-delay=\"50\"\n          data-aos-duration=\"1000\"\n          className=\"text-black font-bold text-3xl py-10\">\n          Login\n        </h1>\n        <form\n          data-aos=\"zoom-in\"\n          data-aos-offset=\"200\"\n          data-aos-delay=\"50\"\n          data-aos-duration=\"1000\"\n          onSubmit={Auth}>\n          <div className=\"flex flex-col justify-center items-center pr-10 gap-2\">\n            {/* Email */}\n            <div className=\"flex flex-row justify-right items-center gap-3\">\n              <label>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"#B7B6B8\"\n                  class=\"w-6 h-6\">\n                  <path d=\"M1.5 8.67v8.58a3 3 0 003 3h15a3 3 0 003-3V8.67l-8.928 5.493a3 3 0 01-3.144 0L1.5 8.67z\" />\n                  <path d=\"M22.5 6.908V6.75a3 3 0 00-3-3h-15a3 3 0 00-3 3v.158l9.714 5.978a1.5 1.5 0 001.572 0L22.5 6.908z\" />\n                </svg>\n              </label>\n              <input\n                id=\"email\"\n                value={email}\n                className=\"py-2 [width:400px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                placeholder=\"Email\"\n                type=\"email\"\n                onChange={(event) => setEmail(event.target.value)}\n                required\n                autoFocus\n              />\n            </div>\n\n            {/* Password */}\n            <div className=\"flex flex-row justify-right items-center gap-3\">\n              <label>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"#B7B6B8\"\n                  class=\"w-6 h-6\">\n                  <path\n                    fill-rule=\"evenodd\"\n                    d=\"M12 1.5a5.25 5.25 0 00-5.25 5.25v3a3 3 0 00-3 3v6.75a3 3 0 003 3h10.5a3 3 0 003-3v-6.75a3 3 0 00-3-3v-3c0-2.9-2.35-5.25-5.25-5.25zm3.75 8.25v-3a3.75 3.75 0 10-7.5 0v3h7.5z\"\n                    clip-rule=\"evenodd\"\n                  />\n                </svg>\n              </label>\n              <input\n                id=\"password\"\n                type={passwordVisible ? \"text\" : \"password\"}\n                placeholder={passwordVisible ? \"Password\" : \"********\"}\n                value={password}\n                className=\"py-2 [width:400px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                onChange={(event) => setPassword(event.target.value)}\n                required\n                autoComplete=\"current-password\"\n              />\n            </div>\n\n            {/* Forgot Password */}\n            <a\n              href=\"/forgot-password\"\n              htmlFor=\"toggle-password-visibility\"\n              className=\"flex flex-row gap-2 pr-[220px] items-center justify-center cursor-pointer select-none text-gray-700\">\n              <span className=\"font-semibold text-[#B7B6B8] hover:text-[#D2D2D2] text-sm\">\n                Forgot Password?\n              </span>\n            </a>\n\n            {/* Show Password */}\n            <label\n              htmlFor=\"toggle-password-visibility\"\n              className=\"flex flex-row gap-2 pr-[220px] items-center justify-center cursor-pointer select-none text-gray-700\">\n              <input\n                type=\"checkbox\"\n                id=\"toggle-password-visibility\"\n                onChange={() => setPasswordVisible(!passwordVisible)}\n                className=\"bg-white\"\n              />\n              <span className=\"font-semibold text-[#B7B6B8] text-sm\">\n                Show password\n              </span>\n            </label>\n          </div>\n          <div className=\"mt-10\">\n            <button className=\"btn-login [width:400px] py-3 rounded-full font-bold normal-case text-lg text-white hover:text-blue-100\">\n              LOGIN\n            </button>\n          </div>\n        </form>\n\n        {/* Buttons */}\n        <div\n          data-aos=\"zoom-in\"\n          data-aos-offset=\"200\"\n          data-aos-delay=\"50\"\n          data-aos-duration=\"1000\"\n          className=\"pb-10\">\n          <div className=\"flex divider justify-center items-center [padding-left:575px] [padding-right:575px] text-[#B7B6B8] font-semibold\">\n            OR\n          </div>\n          <button\n            onClick={gotoRegister}\n            className=\"btn-register [width:400px] py-3 rounded-full font-bold normal-case text-lg text-white hover:text-green-100\">\n            CREATE ACCOUNT\n          </button>\n        </div>\n        <a\n          data-aos=\"zoom-in\"\n          data-aos-offset=\"100\"\n          data-aos-delay=\"50\"\n          data-aos-duration=\"1000\"\n          className=\"text-[#B5BECA] text-sm\">\n          By signing in to <b>Isyaratlingo</b>, you agree to our{\" \"}\n          <b>Terms and Privacy Policy</b>.\n        </a>\n      </div>\n    </>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\Users.jsx",[],[],"C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\Dictionary.jsx",[],[],"C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\AdminDashboard.jsx",["263"],[],"import { useState, useEffect, useRef } from \"react\";\nimport Sidebar from \"../../components/SidebarLearning\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getMe } from \"../../auth/authSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Pagination from \"../../components/Pagination\";\nimport ChartsUser from \"../../components/ChartsUser\";\nimport axios from \"axios\";\n\nexport default function AdminDashboard() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { isError } = useSelector((state) => state.auth);\n  const { user } = useSelector((state) => state.auth);\n  const [users, setUsers] = useState([]);\n  const [adminUsers, setAdminUsers] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n\n  const getUsers = async () => {\n    const response = await axios.get(`http://localhost:5000/user`);\n    setUsers(response.data);\n  };\n\n  const formatTimestamp = (timestamp) => {\n    const options = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      timeZone: \"Asia/Jakarta\",\n    };\n    return new Intl.DateTimeFormat(\"en-US\", options).format(\n      new Date(timestamp)\n    );\n  };\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  useEffect(() => {\n    const adminUsers = users.filter((user) => user.roles === \"admin\");\n    setAdminUsers(adminUsers);\n  }, [users]);\n\n  useEffect(() => {\n    dispatch(getMe());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isError) {\n      navigate(\"/login\");\n    }\n  }, [isError, navigate]);\n\n  return (\n    <div className=\"flex flex-col\">\n      <Sidebar />\n      <div className=\" text-start p-2 mt-7 ml-[275px]\">\n        <div className=\"flex flex-col gap-2\">\n          <span className=\"text-4xl font-bold\">Dashboard</span>\n          <span className=\"font-semibold text-[#777777]\">\n            Welcome back, {user && user.name}{\" \"}\n          </span>\n        </div>\n        <div className=\"flex flex-row py-10 gap-7\">\n          <div className=\"flex flex-col gap-3 text-white btn-register rounded-xl w-80 px-10 py-3\">\n            <span className=\"flex flex-row text-left items-start gap-2 font-bold\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"currentColor\"\n                class=\"w-6 h-6\">\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M18.685 19.097A9.723 9.723 0 0021.75 12c0-5.385-4.365-9.75-9.75-9.75S2.25 6.615 2.25 12a9.723 9.723 0 003.065 7.097A9.716 9.716 0 0012 21.75a9.716 9.716 0 006.685-2.653zm-12.54-1.285A7.486 7.486 0 0112 15a7.486 7.486 0 015.855 2.812A8.224 8.224 0 0112 20.25a8.224 8.224 0 01-5.855-2.438zM15.75 9a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z\"\n                  clip-rule=\"evenodd\"\n                />\n              </svg>\n              Total User\n            </span>\n            <span className=\"flex items-center justify-center text-2xl\">\n              {users.length}\n            </span>\n            <span className=\"text-sm text-center\">Registered user</span>\n          </div>\n          <div className=\"flex flex-col gap-3 text-white  btn-login rounded-xl w-80 px-10 py-3\">\n            <span className=\"flex flex-row text-left items-start gap-2 font-bold\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"currentColor\"\n                class=\"w-6 h-6\">\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M12.516 2.17a.75.75 0 00-1.032 0 11.209 11.209 0 01-7.877 3.08.75.75 0 00-.722.515A12.74 12.74 0 002.25 9.75c0 5.942 4.064 10.933 9.563 12.348a.749.749 0 00.374 0c5.499-1.415 9.563-6.406 9.563-12.348 0-1.39-.223-2.73-.635-3.985a.75.75 0 00-.722-.516l-.143.001c-2.996 0-5.717-1.17-7.734-3.08zm3.094 8.016a.75.75 0 10-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.14-.094l3.75-5.25z\"\n                  clip-rule=\"evenodd\"\n                />\n              </svg>\n              Total Admin\n            </span>\n            <span className=\"flex items-center justify-center text-2xl\">\n              {adminUsers.length}\n            </span>\n            <span className=\"text-sm text-center\">Registered admin</span>\n          </div>\n        </div>\n\n        <div className=\"w-[650px]\">\n          <ChartsUser />\n        </div>\n\n        <div className=\"py-3\">\n          <span className=\"text-2xl font-bold\">User List</span>\n        </div>\n        <table className=\"table py-2 w-1/2 bg-[#007bff] rounded-lg text-white\">\n          <thead className=\"text-white text-center\">\n            <tr>\n              <th>No</th>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Roles</th>\n              <th>Registered At</th>\n            </tr>\n          </thead>\n          <tbody className=\"text-center\">\n            {users\n              .filter(\n                (user) =>\n                  user.id ||\n                  user.name ||\n                  user.email ||\n                  user.roles ||\n                  user.createdAt\n              )\n              .slice(\n                (currentPage - 1) * itemsPerPage,\n                currentPage * itemsPerPage\n              )\n              .map((user, index) => (\n                <tr key={user.id}>\n                  <td>{index + 1}</td>\n                  <td>{user.name}</td>\n                  <td>{user.email}</td>\n                  <td>{user.roles}</td>\n                  <td>{formatTimestamp(user.createdAt)}</td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n        <Pagination\n          currentPage={currentPage}\n          itemsPerPage={itemsPerPage}\n          totalItems={users.length}\n          handlePageChange={handlePageChange}\n        />\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\Shop.jsx",["264"],[],"import { useState, useEffect } from \"react\";\nimport Sidebar from \"../../components/SidebarLearning\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getMe } from \"../../auth/authSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ListShop from \"./shop/listShop\";\nimport axios from \"axios\";\n\nexport default function Shop() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { isError } = useSelector((state) => state.auth);\n  const [shops, setShops] = useState([]);\n\n  useEffect(() => {\n    getShops();\n  }, []);\n\n  const getShops = async () => {\n    const response = await axios.get(`http://localhost:5000/shop`);\n    setShops(response.data);\n  };\n\n  useEffect(() => {\n    dispatch(getMe());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isError) {\n      navigate(\"/login\");\n    }\n  }, [isError, navigate]);\n\n  const addItem = async () => {\n    let path = \"/admin/dashboard/shop/add\";\n    navigate(path);\n  };\n\n  return (\n    <div className=\"flex flex-col\">\n      <Sidebar />\n      <div className=\" text-start p-2 mt-7 ml-[275px]\">\n        <div className=\"flex flex-col gap-2\">\n          <span className=\"flex flex-row gap-2 items-center text-4xl font-bold\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"currentColor\"\n              class=\"w-10 h-10\">\n              <path d=\"M5.223 2.25c-.497 0-.974.198-1.325.55l-1.3 1.298A3.75 3.75 0 007.5 9.75c.627.47 1.406.75 2.25.75.844 0 1.624-.28 2.25-.75.626.47 1.406.75 2.25.75.844 0 1.623-.28 2.25-.75a3.75 3.75 0 004.902-5.652l-1.3-1.299a1.875 1.875 0 00-1.325-.549H5.223z\" />\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M3 20.25v-8.755c1.42.674 3.08.673 4.5 0A5.234 5.234 0 009.75 12c.804 0 1.568-.182 2.25-.506a5.234 5.234 0 002.25.506c.804 0 1.567-.182 2.25-.506 1.42.674 3.08.675 4.5.001v8.755h.75a.75.75 0 010 1.5H2.25a.75.75 0 010-1.5H3zm3-6a.75.75 0 01.75-.75h3a.75.75 0 01.75.75v3a.75.75 0 01-.75.75h-3a.75.75 0 01-.75-.75v-3zm8.25-.75a.75.75 0 00-.75.75v5.25c0 .414.336.75.75.75h3a.75.75 0 00.75-.75v-5.25a.75.75 0 00-.75-.75h-3z\"\n                clip-rule=\"evenodd\"\n              />\n            </svg>\n            Shop\n          </span>\n          <span className=\"font-semibold text-[#777777]\">Configure Shop</span>\n        </div>\n        <div className=\"flex flex-row py-10 gap-7\">\n          <div className=\"flex flex-col gap-3 text-white btn-login rounded-xl w-80 px-10 py-3\">\n            <span className=\"flex flex-row text-left items-start gap-2 font-bold\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"currentColor\"\n                class=\"w-6 h-6\">\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M7.5 6v.75H5.513c-.96 0-1.764.724-1.865 1.679l-1.263 12A1.875 1.875 0 004.25 22.5h15.5a1.875 1.875 0 001.865-2.071l-1.263-12a1.875 1.875 0 00-1.865-1.679H16.5V6a4.5 4.5 0 10-9 0zM12 3a3 3 0 00-3 3v.75h6V6a3 3 0 00-3-3zm-3 8.25a3 3 0 106 0v-.75a.75.75 0 011.5 0v.75a4.5 4.5 0 11-9 0v-.75a.75.75 0 011.5 0v.75z\"\n                  clip-rule=\"evenodd\"\n                />\n              </svg>\n              Total Items\n            </span>\n            <span className=\"flex items-center justify-center text-2xl\">\n              {shops.length}\n            </span>\n            <span className=\"text-sm text-center\">\n              Registered items at shop\n            </span>\n          </div>\n        </div>\n        {/* <button\n          onClick={addItem}\n          className=\"btn-register flex flex-row gap-2 text-white font-bold rounded-full py-3 px-5\">\n          Add New Item{\" \"}\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"1.5\"\n            stroke=\"currentColor\"\n            class=\"w-6 h-6\">\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              d=\"M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n        </button> */}\n        <ListShop />\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\LearningHome.jsx",["265"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Sidebar from \"../../components/SidebarLearning\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport RightDetail from \"../../components/RightDetail\";\n\nexport default function LearningHome() {\n  const navigate = useNavigate();\n  const { user } = useSelector((state) => state.auth);\n  const [level, setLevel] = useState([]);\n\n  useEffect(() => {\n    getLevels();\n  }, []);\n\n  const getLevels = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/level`);\n      // Check if the retrieved data is an array before setting the state\n      if (Array.isArray(response.data)) {\n        setLevel(response.data);\n      } else {\n        setLevel([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching levels:\", error);\n      // Handle errors: Show a message or retry logic\n    }\n  };\n\n  const [clicked, setClicked] = useState(false);\n\n  const handleLevelClick = (lvl) => {\n    if (lvl.level !== user.levels[0].level) {\n      // Add logic for unclickable levels (if needed)\n      return;\n    }\n\n    setClicked(true);\n    // Perform any other actions as needed when a level is clicked\n    navigate(`/learn-instruction/${user.learns[0].uuid}`);\n  };\n\n  return (\n    <div>\n      <Sidebar />\n      <div className=\" flex flex-row gap-10 text-start p-2 mt-7 ml-[275px]\">\n        <section>\n          <div className=\"flex flex-col text-white btn-login rounded-3xl px-7 py-4 mb-5 h-[110px] w-[750px]\">\n            <h1 className=\"flex flex-row items-center gap-2 font-bold text-3xl\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"yellow\"\n                class=\"w-6 h-6\">\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z\"\n                  clip-rule=\"evenodd\"\n                />\n              </svg>\n              Level {user && user.levels[0].level}\n            </h1>\n            <h2 className=\"font-bold text-2xl\">\n              {user && user.levels[0].name}\n            </h2>\n          </div>\n\n          {/* Levels */}\n          <div className=\"flex flex-col gap-[100px] items-center justify-center py-5\">\n            {level\n              .filter((lvl) => lvl.level >= user.levels[0].level)\n              .sort((a, b) => a.level - b.level)\n              .map((lvl) => (\n                <div key={lvl.id} onClick={() => handleLevelClick(lvl)}>\n                  <div\n                    data-tip={`Level ${lvl.level} : ${lvl.name}`}\n                    className={`tooltip tooltip-left flex items-center justify-center rounded-full btn-level w-[70px] h-[65px] ${\n                      lvl.level === user.levels[0].level ? \"\" : \"btn-unlevel\"\n                    }`}>\n                    {lvl.level === user.levels[0].level ? (\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        strokeWidth=\"1.5\"\n                        stroke=\"white\"\n                        className=\"w-9 h-9\">\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          d=\"M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z\"\n                        />\n                      </svg>\n                    ) : (\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"#AFAFAF\"\n                        className=\"w-9 h-9\">\n                        <path\n                          fillRule=\"evenodd\"\n                          d=\"M12 1.5a5.25 5.25 0 00-5.25 5.25v3a3 3 0 00-3 3v6.75a3 3 0 003 3h10.5a3 3 0 003-3v-6.75a3 3 0 00-3-3v-3c0-2.9-2.35-5.25-5.25-5.25zm3.75 8.25v-3a3.75 3.75 0 10-7.5 0v3h7.5z\"\n                          clipRule=\"evenodd\"></path>\n                      </svg>\n                    )}\n                  </div>\n                </div>\n              ))}\n          </div>\n        </section>\n\n        <RightDetail />\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\users\\editUser.jsx",["266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Listbox, Transition } from \"@headlessui/react\";\nimport Sidebar from \"../../../components/SidebarLearning\";\n\nconst rolesList = [\"user\", \"admin\"];\n\nexport default function editUser() {\n  const [uid, setUID] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(null); // Use null as initial state for image\n  const [email, setEmail] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [roles, setRoles] = useState(rolesList[0]);\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [score, setScore] = useState(\"\");\n  const [point, setPoint] = useState(\"\");\n  const [progresslevel, setProgressLevel] = useState(\"\");\n  const [guard, setGuard] = useState(\"\");\n  const [createdAt, setCreatedAt] = useState(\"\");\n  const [updatedAt, setUpdatedAt] = useState(\"\");\n  const { uuid } = useParams();\n  const navigate = useNavigate();\n\n  const formatTimestamp = (timestamp) => {\n    if (!timestamp) {\n      return \"\"; // Return an empty string for undefined or empty timestamps\n    }\n    try {\n      const options = {\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\",\n        timeZone: \"Asia/Jakarta\",\n      };\n      // Use a console.log to inspect the timestamp before passing it to the Date constructor\n      console.log(\"Input timestamp:\", timestamp);\n\n      return new Intl.DateTimeFormat(\"en-US\", options).format(\n        new Date(timestamp)\n      );\n    } catch (error) {\n      console.error(\"Error formatting timestamp:\", error);\n      return \"\"; // Return an empty string for invalid timestamps\n    }\n  };\n\n  const updateUser = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"email\", email);\n    formData.append(\"age\", age);\n    formData.append(\"roles\", roles);\n    formData.append(\"password\", password);\n    formData.append(\"confirmpassword\", confirmpassword);\n    formData.append(\"score\", score);\n    formData.append(\"point\", point);\n    formData.append(\"progresslevel\", progresslevel);\n    formData.append(\"guard\", guard);\n    formData.append(\"createdAt\", createdAt);\n    formData.append(\"updatedAt\", updatedAt);\n    if (image) {\n      formData.append(\"image\", image);\n    }\n\n    try {\n      await axios.patch(\n        `https://api2.isyaratlingo.cloud/user/${uuid}`,\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\", // Set the correct content type\n          },\n        }\n      );\n\n      let path = \"/admin/dashboard/user\";\n      navigate(path);\n      window.alert(\"Profile Updated Successfully\");\n    } catch (error) {\n      console.error(\"Error Updated Profile:\", error);\n      window.alert(\"Error Updated Profile.\");\n    }\n  };\n\n  useEffect(() => {\n    getUserById();\n  }, []);\n\n  const getUserById = async () => {\n    const response = await axios.get(\n      `https://api2.isyaratlingo.cloud/user/${uuid}`\n    );\n    setUID(response.data.uuid);\n    setName(response.data.name);\n    setEmail(response.data.email);\n    setAge(response.data.age);\n    setRoles(response.data.roles);\n    setPassword(response.data.password);\n    setScore(response.data.score);\n    setPoint(response.data.point);\n    setProgressLevel(response.data.progresslevel);\n    setGuard(response.data.guard);\n    setCreatedAt(response.data.createdAt);\n    setUpdatedAt(response.data.updatedAt);\n  };\n\n  const [passwordVisible, setPasswordVisible] = useState(false);\n\n  return (\n    <div className=\"flex flex-col\">\n      <Sidebar />\n      <div className=\"flex flex-col items-center  justify-center min-w-max mt-7\">\n        <div className=\"py-5\">\n          <span className=\"text-xl font-bold\">Edit User</span>\n        </div>\n        <form onSubmit={updateUser}>\n          <div>\n            <section className=\"grid grid-cols-2 gap-6\">\n              {/* UUID */}\n\n              <div>\n                <label className=\"label font-bold\">UUID</label>\n                <input\n                  className=\"py-2 [width:300px] text-slate-500 font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"text\"\n                  placeholder=\"UUID\"\n                  value={uid}\n                  disabled\n                  onChange={(e) => setUID(e.target.value)}\n                />\n              </div>\n\n              {/* Roles */}\n\n              <div className=\"pt-2\">\n                <Listbox\n                  as=\"div\"\n                  className=\"space-y-1\"\n                  value={roles}\n                  onChange={setRoles}>\n                  {({ open }) => (\n                    <>\n                      <Listbox.Label className=\"block font-bold text-start\">\n                        Roles\n                      </Listbox.Label>\n                      <div className=\"flex\">\n                        <span className=\"inline-block [width:300px]  rounded-md shadow-sm\">\n                          <Listbox.Button className=\"cursor-default h-11 relative w-full rounded-md border border-gray-300 bg-white pl-3 pr-10 py-2 text-left focus:outline-none focus:shadow-outline-blue focus:border-blue-300 transition ease-in-out duration-150 sm:text-sm sm:leading-5\">\n                            <span className=\"block truncate text-gray-900\">\n                              {roles}\n                            </span>\n                            <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                              <svg\n                                className=\"h-5 w-5 text-gray-700\"\n                                viewBox=\"0 0 20 20\"\n                                fill=\"none\"\n                                stroke=\"currentColor\">\n                                <path\n                                  d=\"M7 7l3-3 3 3m0 6l-3 3-3-3\"\n                                  strokeWidth=\"1.5\"\n                                  strokeLinecap=\"round\"\n                                  strokeLinejoin=\"round\"\n                                />\n                              </svg>\n                            </span>\n                          </Listbox.Button>\n                        </span>\n\n                        <Transition\n                          show={open}\n                          leave=\"transition ease-in duration-100\"\n                          leaveFrom=\"opacity-100\"\n                          leaveTo=\"opacity-0\"\n                          className=\"absolute mt-12 [width:300px] rounded-lg bg-white shadow-lg\">\n                          <Listbox.Options\n                            static\n                            className=\"max-h-60 rounded-md py-1 text-base leading-6 shadow-xs overflow-auto focus:outline-none sm:text-sm sm:leading-5\">\n                            {rolesList.map((rolesList) => (\n                              <Listbox.Option key={rolesList} value={rolesList}>\n                                {({ selected, active }) => (\n                                  <div\n                                    className={`${\n                                      active\n                                        ? \"  bg-blue-600 rounded-lg text-white\"\n                                        : \"text-gray-900\"\n                                    } cursor-default  select-none relative py-2 pl-8 pr-4`}>\n                                    <span\n                                      className={`${\n                                        selected\n                                          ? \"font-semibold\"\n                                          : \"font-normal\"\n                                      } block truncate`}>\n                                      {rolesList}\n                                    </span>\n                                    {selected && (\n                                      <span\n                                        className={`${\n                                          active ? \" \" : \"text-blue-600\"\n                                        } absolute inset-y-0 left-0 flex items-center pl-1.5`}>\n                                        <svg\n                                          className=\"h-5 w-5\"\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                          viewBox=\"0 0 20 20\"\n                                          fill=\"currentColor\">\n                                          <path\n                                            fillRule=\"evenodd\"\n                                            d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                                            clipRule=\"evenodd\"\n                                          />\n                                        </svg>\n                                      </span>\n                                    )}\n                                  </div>\n                                )}\n                              </Listbox.Option>\n                            ))}\n                          </Listbox.Options>\n                        </Transition>\n                      </div>\n                    </>\n                  )}\n                </Listbox>\n              </div>\n\n              {/* Name */}\n\n              <div>\n                <label className=\"label font-bold\">Name</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"name\"\n                  placeholder=\"Name\"\n                  value={name}\n                  required\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n\n              {/* Image */}\n\n              <div>\n                <label className=\"label  font-bold\">Photo Profile</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"file\"\n                  accept=\"image/*\" // Accept only image files\n                  onChange={(e) => setImage(e.target.files[0])}\n                />\n              </div>\n\n              {/* Email */}\n\n              <div>\n                <label className=\"label  font-bold\">Email</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  value={email}\n                  required\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n\n              {/* Age */}\n\n              <div>\n                <label className=\"label font-bold\">Age</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"number\"\n                  placeholder=\"Age\"\n                  value={age}\n                  required\n                  onChange={(e) => setAge(e.target.value)}\n                />\n              </div>\n\n              {/* Score */}\n\n              <div>\n                <label className=\"label font-bold\">Score</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"number\"\n                  placeholder=\"Score\"\n                  value={score}\n                  required\n                  onChange={(e) => setScore(e.target.value)}\n                />\n              </div>\n\n              {/* Point */}\n\n              <div>\n                <label className=\"label font-bold\">Point</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"number\"\n                  placeholder=\"Point\"\n                  value={point}\n                  required\n                  onChange={(e) => setPoint(e.target.value)}\n                />\n              </div>\n\n              {/* Guard */}\n\n              <div>\n                <label className=\"label font-bold\">Guard</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"number\"\n                  placeholder=\"Guard\"\n                  value={guard}\n                  required\n                  onChange={(e) => setGuard(e.target.value)}\n                />\n              </div>\n\n              {/* Password*/}\n\n              <div>\n                <label className=\"label font-bold \">Password</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type={passwordVisible ? \"text\" : \"password\"}\n                  placeholder={passwordVisible ? \"Password\" : \"********\"}\n                  value={password}\n                  required\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </div>\n\n              {/* Created At */}\n\n              <div>\n                <label className=\"label font-bold\">Created At</label>\n                <input\n                  className=\"py-2 [width:300px] text-slate-500 font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"text\"\n                  placeholder=\"Created At\"\n                  value={formatTimestamp(createdAt)}\n                  required\n                  onChange={(e) => setCreatedAt(e.target.value)}\n                  disabled\n                />\n              </div>\n\n              {/* Confirm Password*/}\n\n              <div>\n                <label className=\"label font-bold \">Confirm Password</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type={passwordVisible ? \"text\" : \"password\"}\n                  placeholder={\n                    passwordVisible ? \"Confirm Password\" : \"********\"\n                  }\n                  value={confirmpassword}\n                  required\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                />\n              </div>\n\n              {/* Updated At */}\n\n              <div>\n                <label className=\"label font-bold\">Updated At</label>\n                <input\n                  className=\"py-2 [width:300px] text-slate-500 font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"text\"\n                  placeholder=\"Updated At\"\n                  value={formatTimestamp(updatedAt)}\n                  onChange={(e) => setUpdatedAt(e.target.value)}\n                  disabled\n                />\n              </div>\n\n              <div className=\"col-span-2\">\n                <label\n                  htmlFor=\"toggle-password-visibility\"\n                  className=\"cursor-pointer text-start select-none text-gray-700\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"toggle-password-visibility\"\n                    onChange={() => setPasswordVisible(!passwordVisible)}\n                    className=\"bg-white mr-2 mt-5\"\n                  />\n                  <span className=\"pt-0.5 text-slate-400\">Show password</span>\n                </label>\n              </div>\n\n              {/* Button */}\n              <div className=\"col-span-2\">\n                <button className=\"btn-register [width:300px] py-3 rounded-full font-bold normal-case text-lg text-white hover:text-green-100\">\n                  Update User\n                </button>\n              </div>\n            </section>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\users\\addUser.jsx",["285","286","287","288","289","290","291","292","293","294","295","296","297","298"],[],"import { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Listbox, Transition } from \"@headlessui/react\";\nimport Sidebar from \"../../../components/SidebarLearning\";\n\nconst rolesList = [\"user\", \"admin\"];\n\nexport default function addUser() {\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(null); // Use null as initial state for image\n  const [email, setEmail] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [roles, setRoles] = useState(rolesList[0]);\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [score, setScore] = useState(\"\");\n  const [point, setPoint] = useState(\"\");\n  const [progresslevel, setProgressLevel] = useState(\"\");\n  const [guard, setGuard] = useState(\"\");\n  const navigate = useNavigate();\n\n  const saveUser = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"email\", email);\n    formData.append(\"age\", age);\n    formData.append(\"roles\", roles);\n    formData.append(\"password\", password);\n    formData.append(\"confirmpassword\", confirmpassword);\n    formData.append(\"score\", score);\n    formData.append(\"point\", point);\n    formData.append(\"progresslevel\", progresslevel);\n    formData.append(\"guard\", guard);\n    if (image) {\n      formData.append(\"image\", image);\n    }\n\n    try {\n      await axios.post(\n        `https://api2.isyaratlingo.cloud/user/create`,\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\", // Set the correct content type\n          },\n        }\n      );\n\n      let path = \"/admin/dashboard/user\";\n      navigate(path);\n      window.alert(\"Profile Created Successfully\");\n    } catch (error) {\n      console.error(\"Error Created Profile:\", error);\n      window.alert(\"Error Created Profile.\");\n    }\n  };\n\n  const [passwordVisible, setPasswordVisible] = useState(false);\n\n  return (\n    <div className=\"flex flex-col\">\n      <Sidebar />\n      <div className=\"flex flex-col items-center  justify-center min-w-max mt-7\">\n        <div className=\"py-5\">\n          <span className=\"text-xl font-bold\">Add User</span>\n        </div>\n        <form onSubmit={saveUser}>\n          <div>\n            <section className=\"grid grid-cols-2 gap-6\">\n              {/* Name */}\n\n              <div>\n                <label className=\"label font-bold\">Name</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  value={name}\n                  required\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n\n              {/* Image */}\n\n              <div>\n                <label className=\"label  font-bold\">Photo Profile</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"file\"\n                  accept=\"image/*\" // Accept only image files\n                  onChange={(e) => setImage(e.target.files[0])}\n                />\n              </div>\n\n              {/* Roles */}\n\n              <div className=\"pt-2\">\n                <Listbox\n                  as=\"div\"\n                  className=\"space-y-1\"\n                  value={roles}\n                  onChange={setRoles}>\n                  {({ open }) => (\n                    <>\n                      <Listbox.Label className=\"block font-bold text-start\">\n                        Roles\n                      </Listbox.Label>\n                      <div className=\"flex\">\n                        <span className=\"inline-block [width:300px]  rounded-md shadow-sm\">\n                          <Listbox.Button className=\"cursor-default h-11 relative w-full rounded-md border border-gray-300 bg-white pl-3 pr-10 py-2 text-left focus:outline-none focus:shadow-outline-blue focus:border-blue-300 transition ease-in-out duration-150 sm:text-sm sm:leading-5\">\n                            <span className=\"block truncate text-gray-900\">\n                              {roles}\n                            </span>\n                            <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                              <svg\n                                className=\"h-5 w-5 text-gray-700\"\n                                viewBox=\"0 0 20 20\"\n                                fill=\"none\"\n                                stroke=\"currentColor\">\n                                <path\n                                  d=\"M7 7l3-3 3 3m0 6l-3 3-3-3\"\n                                  strokeWidth=\"1.5\"\n                                  strokeLinecap=\"round\"\n                                  strokeLinejoin=\"round\"\n                                />\n                              </svg>\n                            </span>\n                          </Listbox.Button>\n                        </span>\n\n                        <Transition\n                          show={open}\n                          leave=\"transition ease-in duration-100\"\n                          leaveFrom=\"opacity-100\"\n                          leaveTo=\"opacity-0\"\n                          className=\"absolute mt-12 [width:300px] rounded-lg bg-white shadow-lg\">\n                          <Listbox.Options\n                            static\n                            className=\"max-h-60 rounded-md py-1 text-base leading-6 shadow-xs overflow-auto focus:outline-none sm:text-sm sm:leading-5\">\n                            {rolesList.map((rolesList) => (\n                              <Listbox.Option key={rolesList} value={rolesList}>\n                                {({ selected, active }) => (\n                                  <div\n                                    className={`${\n                                      active\n                                        ? \"  bg-blue-600 rounded-lg text-white\"\n                                        : \"text-gray-900\"\n                                    } cursor-default  select-none relative py-2 pl-8 pr-4`}>\n                                    <span\n                                      className={`${\n                                        selected\n                                          ? \"font-semibold\"\n                                          : \"font-normal\"\n                                      } block truncate`}>\n                                      {rolesList}\n                                    </span>\n                                    {selected && (\n                                      <span\n                                        className={`${\n                                          active ? \" \" : \"text-blue-600\"\n                                        } absolute inset-y-0 left-0 flex items-center pl-1.5`}>\n                                        <svg\n                                          className=\"h-5 w-5\"\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                          viewBox=\"0 0 20 20\"\n                                          fill=\"currentColor\">\n                                          <path\n                                            fillRule=\"evenodd\"\n                                            d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                                            clipRule=\"evenodd\"\n                                          />\n                                        </svg>\n                                      </span>\n                                    )}\n                                  </div>\n                                )}\n                              </Listbox.Option>\n                            ))}\n                          </Listbox.Options>\n                        </Transition>\n                      </div>\n                    </>\n                  )}\n                </Listbox>\n              </div>\n\n              {/* Email */}\n\n              <div>\n                <label className=\"label  font-bold\">Email</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  value={email}\n                  required\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n\n              {/* Age */}\n\n              <div>\n                <label className=\"label font-bold\">Age</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"number\"\n                  placeholder=\"Age\"\n                  value={age}\n                  required\n                  onChange={(e) => setAge(e.target.value)}\n                />\n              </div>\n\n              {/* Score */}\n\n              <div>\n                <label className=\"label font-bold\">Score</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"number\"\n                  placeholder=\"Score\"\n                  value={score}\n                  required\n                  onChange={(e) => setScore(e.target.value)}\n                />\n              </div>\n\n              {/* Point */}\n\n              <div>\n                <label className=\"label font-bold\">Point</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"number\"\n                  placeholder=\"Point\"\n                  value={point}\n                  required\n                  onChange={(e) => setPoint(e.target.value)}\n                />\n              </div>\n\n              {/* Password*/}\n\n              <div>\n                <label className=\"label font-bold \">Password</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type={passwordVisible ? \"text\" : \"password\"}\n                  placeholder={passwordVisible ? \"Password\" : \"********\"}\n                  value={password}\n                  required\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </div>\n\n              {/* Guard */}\n\n              <div>\n                <label className=\"label font-bold\">Guard</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"number\"\n                  placeholder=\"Guard\"\n                  value={guard}\n                  required\n                  onChange={(e) => setGuard(e.target.value)}\n                />\n              </div>\n\n              {/* Confirm Password*/}\n\n              <div>\n                <label className=\"label font-bold \">Confirm Password</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type={passwordVisible ? \"text\" : \"password\"}\n                  placeholder={\n                    passwordVisible ? \"Confirm Password\" : \"********\"\n                  }\n                  value={confirmpassword}\n                  required\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                />\n              </div>\n\n              <div className=\"col-span-2\">\n                <label\n                  htmlFor=\"toggle-password-visibility\"\n                  className=\"cursor-pointer text-start select-none text-gray-700\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"toggle-password-visibility\"\n                    onChange={() => setPasswordVisible(!passwordVisible)}\n                    className=\"bg-white mr-2 mt-5\"\n                  />\n                  <span className=\"pt-0.5 text-slate-400\">Show password</span>\n                </label>\n              </div>\n\n              {/* Button */}\n              <div className=\"col-span-2\">\n                <button className=\"btn-register [width:300px] py-3 rounded-full font-bold normal-case text-lg text-white hover:text-green-100\">\n                  Add User\n                </button>\n              </div>\n            </section>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\auth\\authSlice.js",[],[],"C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\components\\NavbarLogin.jsx",["299"],[],"import React from \"react\";\nimport Logo from \"../images/logo-blu.png\";\n\nexport default function () {\n  return (\n    <div className=\"pt-2 ml-10 mr-10\">\n      <div className=\"navbar rounded-xl p-2\">\n        <div className=\"navbar-start\">\n          <a href=\"/home\">\n            <img className=\"w-52\" src={Logo} alt=\"Logo\" />\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\components\\Navbar.jsx",["300","301"],[],"import React from \"react\";\nimport Logo from \"../images/logo-white.png\";\nimport { Link } from \"react-scroll\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\n\nexport default function () {\n  AOS.init();\n  return (\n    <div\n      data-aos=\"zoom-in-down\"\n      data-aos-offset=\"200\"\n      data-aos-delay=\"50\"\n      data-aos-duration=\"1000\"\n      className=\"pt-2 ml-10 mr-10\">\n      <div className=\"navbar p-2 \">\n        <div className=\"navbar-start\">\n          <a>\n            <img className=\"w-52\" src={Logo} alt=\"Logo\" />\n          </a>\n        </div>\n        <div className=\"navbar-center hidden lg:flex\">\n          <ul className=\"menu menu-horizontal gap-20 text-lg text-white px-1\">\n            <li>\n              <Link\n                to=\"hero\"\n                spy={true}\n                smooth={true}\n                duration={500}\n                offset={-100}\n                className=\"hover:text-[#daff49]\">\n                Home\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"about\"\n                spy={true}\n                smooth={true}\n                duration={500}\n                offset={-100}\n                className=\"hover:text-[#daff49]\">\n                About\n              </Link>\n            </li>\n            {/* <li>\n              <a className=\"hover:text-[#daff49]\">How it works</a>\n            </li> */}\n          </ul>\n        </div>\n        <div className=\"navbar-end\">\n          <div className=\"dropdown dropdown-end\">\n            <label tabIndex={0} className=\"btn btn-ghost lg:hidden\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"white\"\n                class=\"menus-bar w-6 h-6\">\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M3 6.75A.75.75 0 013.75 6h16.5a.75.75 0 010 1.5H3.75A.75.75 0 013 6.75zM3 12a.75.75 0 01.75-.75h16.5a.75.75 0 010 1.5H3.75A.75.75 0 013 12zm0 5.25a.75.75 0 01.75-.75h16.5a.75.75 0 010 1.5H3.75a.75.75 0 01-.75-.75z\"\n                  clip-rule=\"evenodd\"\n                />\n              </svg>\n            </label>\n            <ul\n              tabIndex={0}\n              className=\"menu menu-sm dropdown-content font-semibold mt-3 z-[1] gap-2 p-2 shadow bg-base-100 rounded-box w-52\">\n              <li>\n                <Link to=\"hero\" spy={true} smooth={true} duration={500}>\n                  Home\n                </Link>\n              </li>\n              <li>\n                <Link to=\"about\" spy={true} smooth={true} duration={500}>\n                  About\n                </Link>\n              </li>\n              {/* <li>\n                <a>How it works</a>\n              </li> */}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\components\\Footer.jsx",["302"],[],"import React from \"react\";\nimport Logo from \"../images/logo-white.png\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\n\nexport default function Footer() {\n  AOS.init();\n  return (\n    <footer className=\"footer [row-gap:1rem] footer-center p-5 bg-[#205AFC] text-white\">\n      <div>\n        <img className=\"w-60\" src={Logo} />\n        <p className=\"font-bold\">Providing reliable tech since 2023</p>\n        <p>Copyright © 2023 - All right reserved</p>\n      </div>\n    </footer>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\components\\SidebarLearning.jsx",["303"],[],"import React, { useState, useEffect } from \"react\";\nimport Logo from \"../images/logo-blu.png\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getMe, LogOut, reset } from \"../auth/authSlice\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function NavbarLearning() {\n  const sidebarItems = [\n    {\n      Icon: (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"#FFC800\"\n          class=\"w-8 h-8\">\n          <path d=\"M11.47 3.84a.75.75 0 011.06 0l8.69 8.69a.75.75 0 101.06-1.06l-8.689-8.69a2.25 2.25 0 00-3.182 0l-8.69 8.69a.75.75 0 001.061 1.06l8.69-8.69z\" />\n          <path d=\"M12 5.432l8.159 8.159c.03.03.06.058.091.086v6.198c0 1.035-.84 1.875-1.875 1.875H15a.75.75 0 01-.75-.75v-4.5a.75.75 0 00-.75-.75h-3a.75.75 0 00-.75.75V21a.75.75 0 01-.75.75H5.625a1.875 1.875 0 01-1.875-1.875v-6.198a2.29 2.29 0 00.091-.086L12 5.43z\" />\n        </svg>\n      ),\n      Title: \"LEARN\",\n      href: \"/learning\", // Add the href attribute for the first item\n    },\n    {\n      Icon: (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"#1CB0F6\"\n          class=\"w-8 h-8\">\n          <path d=\"M11.25 4.533A9.707 9.707 0 006 3a9.735 9.735 0 00-3.25.555.75.75 0 00-.5.707v14.25a.75.75 0 001 .707A8.237 8.237 0 016 18.75c1.995 0 3.823.707 5.25 1.886V4.533zM12.75 20.636A8.214 8.214 0 0118 18.75c.966 0 1.89.166 2.75.47a.75.75 0 001-.708V4.262a.75.75 0 00-.5-.707A9.735 9.735 0 0018 3a9.707 9.707 0 00-5.25 1.533v16.103z\" />\n        </svg>\n      ),\n      Title: \"DICTIONARY\",\n      href: \"/dictionary\", // Add the href attribute for the first item\n    },\n    {\n      Icon: (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"#FED84E\"\n          class=\"w-8 h-8\">\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M3 6a3 3 0 013-3h12a3 3 0 013 3v12a3 3 0 01-3 3H6a3 3 0 01-3-3V6zm4.5 7.5a.75.75 0 01.75.75v2.25a.75.75 0 01-1.5 0v-2.25a.75.75 0 01.75-.75zm3.75-1.5a.75.75 0 00-1.5 0v4.5a.75.75 0 001.5 0V12zm2.25-3a.75.75 0 01.75.75v6.75a.75.75 0 01-1.5 0V9.75A.75.75 0 0113.5 9zm3.75-1.5a.75.75 0 00-1.5 0v9a.75.75 0 001.5 0v-9z\"\n            clip-rule=\"evenodd\"\n          />\n        </svg>\n      ),\n      Title: \"LEADERBOARD\",\n      href: \"/leaderboard\", // Add the href attribute for the first item\n    },\n    {\n      Icon: (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"#A56644\"\n          class=\"w-8 h-8\">\n          <path d=\"M5.223 2.25c-.497 0-.974.198-1.325.55l-1.3 1.298A3.75 3.75 0 007.5 9.75c.627.47 1.406.75 2.25.75.844 0 1.624-.28 2.25-.75.626.47 1.406.75 2.25.75.844 0 1.623-.28 2.25-.75a3.75 3.75 0 004.902-5.652l-1.3-1.299a1.875 1.875 0 00-1.325-.549H5.223z\" />\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M3 20.25v-8.755c1.42.674 3.08.673 4.5 0A5.234 5.234 0 009.75 12c.804 0 1.568-.182 2.25-.506a5.234 5.234 0 002.25.506c.804 0 1.567-.182 2.25-.506 1.42.674 3.08.675 4.5.001v8.755h.75a.75.75 0 010 1.5H2.25a.75.75 0 010-1.5H3zm3-6a.75.75 0 01.75-.75h3a.75.75 0 01.75.75v3a.75.75 0 01-.75.75h-3a.75.75 0 01-.75-.75v-3zm8.25-.75a.75.75 0 00-.75.75v5.25c0 .414.336.75.75.75h3a.75.75 0 00.75-.75v-5.25a.75.75 0 00-.75-.75h-3z\"\n            clip-rule=\"evenodd\"\n          />\n        </svg>\n      ),\n      Title: \"SHOP\",\n      href: \"/shop\", // Add the href attribute for the first item\n    },\n    {\n      Icon: (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"#009946\"\n          class=\"w-8 h-8\">\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M18.685 19.097A9.723 9.723 0 0021.75 12c0-5.385-4.365-9.75-9.75-9.75S2.25 6.615 2.25 12a9.723 9.723 0 003.065 7.097A9.716 9.716 0 0012 21.75a9.716 9.716 0 006.685-2.653zm-12.54-1.285A7.486 7.486 0 0112 15a7.486 7.486 0 015.855 2.812A8.224 8.224 0 0112 20.25a8.224 8.224 0 01-5.855-2.438zM15.75 9a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z\"\n            clip-rule=\"evenodd\"\n          />\n        </svg>\n      ),\n      Title: \"PROFILE\",\n      href: \"/profile\", // Add the href attribute for the first item\n    },\n  ];\n\n  const adminSidebar = [\n    {\n      Icon: (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"#CE82FF\"\n          class=\"w-8 h-8\">\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M2.25 6a3 3 0 013-3h13.5a3 3 0 013 3v12a3 3 0 01-3 3H5.25a3 3 0 01-3-3V6zm3.97.97a.75.75 0 011.06 0l2.25 2.25a.75.75 0 010 1.06l-2.25 2.25a.75.75 0 01-1.06-1.06l1.72-1.72-1.72-1.72a.75.75 0 010-1.06zm4.28 4.28a.75.75 0 000 1.5h3a.75.75 0 000-1.5h-3z\"\n            clip-rule=\"evenodd\"\n          />\n        </svg>\n      ),\n      Title: \"ADMIN\",\n    },\n  ];\n\n  const adminContent = [\n    {\n      Icon: (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"currentColor\"\n          class=\"w-6 h-6\">\n          <path d=\"M11.47 3.84a.75.75 0 011.06 0l8.69 8.69a.75.75 0 101.06-1.06l-8.689-8.69a2.25 2.25 0 00-3.182 0l-8.69 8.69a.75.75 0 001.061 1.06l8.69-8.69z\" />\n          <path d=\"M12 5.432l8.159 8.159c.03.03.06.058.091.086v6.198c0 1.035-.84 1.875-1.875 1.875H15a.75.75 0 01-.75-.75v-4.5a.75.75 0 00-.75-.75h-3a.75.75 0 00-.75.75V21a.75.75 0 01-.75.75H5.625a1.875 1.875 0 01-1.875-1.875v-6.198a2.29 2.29 0 00.091-.086L12 5.43z\" />\n        </svg>\n      ),\n      Title: \"HOME\",\n      href: \"/admin/dashboard\", // Add the href attribute for the first item\n    },\n    {\n      Icon: (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"currentColor\"\n          class=\"w-6 h-6\">\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M11.078 2.25c-.917 0-1.699.663-1.85 1.567L9.05 4.889c-.02.12-.115.26-.297.348a7.493 7.493 0 00-.986.57c-.166.115-.334.126-.45.083L6.3 5.508a1.875 1.875 0 00-2.282.819l-.922 1.597a1.875 1.875 0 00.432 2.385l.84.692c.095.078.17.229.154.43a7.598 7.598 0 000 1.139c.015.2-.059.352-.153.43l-.841.692a1.875 1.875 0 00-.432 2.385l.922 1.597a1.875 1.875 0 002.282.818l1.019-.382c.115-.043.283-.031.45.082.312.214.641.405.985.57.182.088.277.228.297.35l.178 1.071c.151.904.933 1.567 1.85 1.567h1.844c.916 0 1.699-.663 1.85-1.567l.178-1.072c.02-.12.114-.26.297-.349.344-.165.673-.356.985-.57.167-.114.335-.125.45-.082l1.02.382a1.875 1.875 0 002.28-.819l.923-1.597a1.875 1.875 0 00-.432-2.385l-.84-.692c-.095-.078-.17-.229-.154-.43a7.614 7.614 0 000-1.139c-.016-.2.059-.352.153-.43l.84-.692c.708-.582.891-1.59.433-2.385l-.922-1.597a1.875 1.875 0 00-2.282-.818l-1.02.382c-.114.043-.282.031-.449-.083a7.49 7.49 0 00-.985-.57c-.183-.087-.277-.227-.297-.348l-.179-1.072a1.875 1.875 0 00-1.85-1.567h-1.843zM12 15.75a3.75 3.75 0 100-7.5 3.75 3.75 0 000 7.5z\"\n            clip-rule=\"evenodd\"\n          />\n        </svg>\n      ),\n      Title: \"USER\",\n      href: \"/admin/dashboard/user\", // Add the href attribute for the first item\n    },\n    {\n      Icon: (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"currentColor\"\n          class=\"w-6 h-6\">\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M11.078 2.25c-.917 0-1.699.663-1.85 1.567L9.05 4.889c-.02.12-.115.26-.297.348a7.493 7.493 0 00-.986.57c-.166.115-.334.126-.45.083L6.3 5.508a1.875 1.875 0 00-2.282.819l-.922 1.597a1.875 1.875 0 00.432 2.385l.84.692c.095.078.17.229.154.43a7.598 7.598 0 000 1.139c.015.2-.059.352-.153.43l-.841.692a1.875 1.875 0 00-.432 2.385l.922 1.597a1.875 1.875 0 002.282.818l1.019-.382c.115-.043.283-.031.45.082.312.214.641.405.985.57.182.088.277.228.297.35l.178 1.071c.151.904.933 1.567 1.85 1.567h1.844c.916 0 1.699-.663 1.85-1.567l.178-1.072c.02-.12.114-.26.297-.349.344-.165.673-.356.985-.57.167-.114.335-.125.45-.082l1.02.382a1.875 1.875 0 002.28-.819l.923-1.597a1.875 1.875 0 00-.432-2.385l-.84-.692c-.095-.078-.17-.229-.154-.43a7.614 7.614 0 000-1.139c-.016-.2.059-.352.153-.43l.84-.692c.708-.582.891-1.59.433-2.385l-.922-1.597a1.875 1.875 0 00-2.282-.818l-1.02.382c-.114.043-.282.031-.449-.083a7.49 7.49 0 00-.985-.57c-.183-.087-.277-.227-.297-.348l-.179-1.072a1.875 1.875 0 00-1.85-1.567h-1.843zM12 15.75a3.75 3.75 0 100-7.5 3.75 3.75 0 000 7.5z\"\n            clip-rule=\"evenodd\"\n          />\n        </svg>\n      ),\n      Title: \"SHOP\",\n      href: \"/admin/dashboard/shop\", // Add the href attribute for the first item\n    },\n    {\n      Icon: (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"currentColor\"\n          class=\"w-6 h-6\">\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M11.078 2.25c-.917 0-1.699.663-1.85 1.567L9.05 4.889c-.02.12-.115.26-.297.348a7.493 7.493 0 00-.986.57c-.166.115-.334.126-.45.083L6.3 5.508a1.875 1.875 0 00-2.282.819l-.922 1.597a1.875 1.875 0 00.432 2.385l.84.692c.095.078.17.229.154.43a7.598 7.598 0 000 1.139c.015.2-.059.352-.153.43l-.841.692a1.875 1.875 0 00-.432 2.385l.922 1.597a1.875 1.875 0 002.282.818l1.019-.382c.115-.043.283-.031.45.082.312.214.641.405.985.57.182.088.277.228.297.35l.178 1.071c.151.904.933 1.567 1.85 1.567h1.844c.916 0 1.699-.663 1.85-1.567l.178-1.072c.02-.12.114-.26.297-.349.344-.165.673-.356.985-.57.167-.114.335-.125.45-.082l1.02.382a1.875 1.875 0 002.28-.819l.923-1.597a1.875 1.875 0 00-.432-2.385l-.84-.692c-.095-.078-.17-.229-.154-.43a7.614 7.614 0 000-1.139c-.016-.2.059-.352.153-.43l.84-.692c.708-.582.891-1.59.433-2.385l-.922-1.597a1.875 1.875 0 00-2.282-.818l-1.02.382c-.114.043-.282.031-.449-.083a7.49 7.49 0 00-.985-.57c-.183-.087-.277-.227-.297-.348l-.179-1.072a1.875 1.875 0 00-1.85-1.567h-1.843zM12 15.75a3.75 3.75 0 100-7.5 3.75 3.75 0 000 7.5z\"\n            clip-rule=\"evenodd\"\n          />\n        </svg>\n      ),\n      Title: \"DICTIONARY\",\n      href: \"/admin/dashboard/dictionary\", // Add the href attribute for the first item\n    },\n  ];\n\n  const logoutButton = [\n    {\n      Icon: (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"#FF2B2B\"\n          class=\"w-8 h-8\">\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M7.5 3.75A1.5 1.5 0 006 5.25v13.5a1.5 1.5 0 001.5 1.5h6a1.5 1.5 0 001.5-1.5V15a.75.75 0 011.5 0v3.75a3 3 0 01-3 3h-6a3 3 0 01-3-3V5.25a3 3 0 013-3h6a3 3 0 013 3V9A.75.75 0 0115 9V5.25a1.5 1.5 0 00-1.5-1.5h-6zm5.03 4.72a.75.75 0 010 1.06l-1.72 1.72h10.94a.75.75 0 010 1.5H10.81l1.72 1.72a.75.75 0 11-1.06 1.06l-3-3a.75.75 0 010-1.06l3-3a.75.75 0 011.06 0z\"\n            clip-rule=\"evenodd\"\n          />\n        </svg>\n      ),\n      Title: \"LOGOUT\",\n    },\n  ];\n\n  const [selectedItem, setSelectedItem] = useState(\"\"); // Initialize the state with an empty string\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { user } = useSelector((state) => state.auth);\n\n  // Replace 'userRoles' with the actual roles of the logged-in user from your application\n  const { isError } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    // When the component mounts or the URL changes, update the selectedItem state\n    setSelectedItem(window.location.pathname);\n  }, []);\n\n  const handleItemClick = (href) => {\n    setSelectedItem(href);\n  };\n\n  useEffect(() => {\n    dispatch(getMe());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isError) {\n      navigate(\"/login\");\n    }\n  }, [isError, navigate]);\n\n  const logout = () => {\n    dispatch(LogOut());\n    dispatch(reset());\n    navigate(\"/\");\n  };\n\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n\n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n\n  return (\n    <div>\n      {/* Bottom Nav\n      <div className=\"lg:hidden\">\n        <div className=\"btm-nav\">\n          <ul className=\"flex flex-row gap-5 md:gap-12 bg-slate-50 mb-5\">\n            {sidebarItems.map((item, index) => (\n              <li key={index}>\n                <a\n                  href={item.href}\n                  data-tip={item.Title}\n                  className={`flex items-center tooltip-top px-4 py-2 rounded-lg group ${\n                    selectedItem === item.href ||\n                    (selectedItem === \"/admin/dashboard\" &&\n                      item.href === \"/admin/dashboard\")\n                      ? \"border-2 bg-[#dfeeff] border-[#84D8FF] text-[#268efe]\"\n                      : \"text-[#777777] hover:bg-[#e5f7ff]\"\n                  }`}\n                  onClick={() => handleItemClick(item.href)}>\n                  {item.Icon}\n                </a>\n              </li>\n            ))}\n\n            {logoutButton.map((item, index) => (\n              <li key={index}>\n                <button\n                  className=\"flex items-center px-4 py-2 rounded-lg group text-[#777777] hover:bg-[#e5f7ff]\"\n                  onClick={logout}>\n                  {item.Icon}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div> */}\n\n      {/* Sidebar */}\n      <div className=\"\">\n        <aside\n          id=\"default-sidebar\"\n          class=\"fixed top-0 left-0 z-40 w-64 h-screen transition-transform -translate-x-full lg:translate-x-0\"\n          aria-label=\"Sidebar\">\n          <div class=\"h-full px-3 py-4 overflow-y-auto bg-[#F3F0FB] border-2 border-r-slate-300\">\n            <a class=\"flex items-center pl-4 py-4 mb-5\">\n              <img src={Logo} class=\"h-10 mr-3\" alt=\"Isyaratlingo Logo\" />\n            </a>\n            <ul className=\"space-y-3 pl-2 font-bold\">\n              {sidebarItems.map((item, index) => (\n                <li key={index}>\n                  <a\n                    href={item.href}\n                    className={`flex items-center px-4 py-2 rounded-lg group ${\n                      selectedItem === item.href ||\n                      (selectedItem === \"/admin/dashboard\" &&\n                        item.href === \"/admin/dashboard\")\n                        ? \"border-2 bg-[#dfeeff] border-[#84D8FF] text-[#268efe]\"\n                        : \"text-[#777777] hover:bg-[#e5f7ff]\"\n                    }`}\n                    onClick={() => handleItemClick(item.href)}>\n                    {item.Icon}\n                    <span className=\"ml-3\">{item.Title}</span>\n                  </a>\n                </li>\n              ))}\n\n              {user && user.roles === \"admin\" && (\n                <ul className=\"space-y-3 font-bold\">\n                  {adminSidebar.map((item, index) => (\n                    <li key={index}>\n                      <button\n                        href={item.href}\n                        className={`flex px-4 py-2 items-center w-full text-base text-[#777777] transition duration-75 rounded-lg group hover:bg-gray-100 ${\n                          isDropdownOpen\n                            ? \"dark:hover:text-white dark:hover:bg-[#268efe]\"\n                            : \"dark:text-[#777777] dark:group-hover:text-white\"\n                        }`}\n                        onClick={toggleDropdown}>\n                        {item.Icon}\n                        <span className=\"flex-1 ml-3 text-left whitespace-nowrap\">\n                          {item.Title}\n                        </span>\n                        <svg\n                          className={`w-4 h-4 ml-2 ${\n                            isDropdownOpen ? \"rotate-180\" : \"\"\n                          } transition-transform`}\n                          aria-hidden=\"true\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          fill=\"none\"\n                          viewBox=\"0 0 8 4\">\n                          <path\n                            d=\"M1 1l2 2 2-2\"\n                            stroke=\"currentColor\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                          />\n                        </svg>\n                      </button>\n                    </li>\n                  ))}\n\n                  <ul\n                    className={`${\n                      isDropdownOpen\n                        ? \"block bg-[#f7f7fb]  rounded-lg\"\n                        : \"hidden\"\n                    } py-2 space-y-2`}>\n                    {adminContent.map((item, index) => (\n                      <li key={index}>\n                        <a\n                          href={item.href}\n                          className={`flex items-center px-4 py-2 rounded-lg group ${\n                            selectedItem === item.href ||\n                            (selectedItem === \"/admin/dashboard\" &&\n                              item.href === \"/admin/dashboard\")\n                              ? \"border-2 bg-[#dfeeff] border-[#84D8FF] text-[#268efe]\"\n                              : \"text-[#777777] hover:bg-[#e5f7ff]\"\n                          }`}\n                          onClick={() => handleItemClick(item.href)}>\n                          {item.Icon}\n                          <span className=\"ml-3\">{item.Title}</span>\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </ul>\n              )}\n\n              {logoutButton.map((item, index) => (\n                <li key={index}>\n                  <button\n                    className=\"flex items-center px-4 py-2 rounded-lg group text-[#777777] hover:bg-[#e5f7ff]\"\n                    onClick={logout}>\n                    {item.Icon}\n                    <span className=\"ml-3\">{item.Title}</span>\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </aside>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\components\\Pagination.jsx",[],[],"C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\users\\listUsers.jsx",["304","305","306","307","308"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Pagination from \"../../../components/Pagination\";\n\nexport default function listUsers() {\n  const [users, setUsers] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(5);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const getUsers = async () => {\n    const response = await axios.get(`https://api2.isyaratlingo.cloud/user`);\n    setUsers(response.data);\n  };\n\n  const deleteUser = async (uuid) => {\n    await axios.delete(`https://api2.isyaratlingo.cloud/user/${uuid}`);\n    getUsers();\n  };\n\n  const formatTimestamp = (timestamp) => {\n    const options = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      timeZone: \"Asia/Jakarta\",\n    };\n    return new Intl.DateTimeFormat(\"en-US\", options).format(\n      new Date(timestamp)\n    );\n  };\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"flex flex-col mt-7\">\n      <div className=\"flex flex-row pb-5\">\n        <div className=\"bg-[#58CC02] p-3 rounded-l-xl\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"white\"\n            class=\"w-6 h-6\">\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M10.5 3.75a6.75 6.75 0 100 13.5 6.75 6.75 0 000-13.5zM2.25 10.5a8.25 8.25 0 1114.59 5.28l4.69 4.69a.75.75 0 11-1.06 1.06l-4.69-4.69A8.25 8.25 0 012.25 10.5z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg>\n        </div>\n        <input\n          className=\"p-3 font-semibold px-3 rounded-r-xl round border bg-white border-[#B7B6B8]\"\n          type=\"text\"\n          placeholder=\"Search Users...\"\n          value={searchTerm}\n          onChange={(event) => setSearchTerm(event.target.value)}\n        />\n      </div>\n      <div className=\" overflow-x-auto\">\n        <table className=\"table w-11/12 bg-[#007bff] rounded-lg text-white\">\n          <thead className=\"text-white text-center\">\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Photo</th>\n              <th>Age</th>\n              <th>Email</th>\n              <th>Roles</th>\n              <th>Scores</th>\n              <th>Point</th>\n              <th>Progress Level</th>\n              <th>Guard</th>\n              <th>Created At</th>\n              <th>Update At</th>\n              <th></th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody className=\"text-center\">\n            {users\n              .filter(\n                (user) =>\n                  new RegExp(searchTerm, \"i\").test(user.id) ||\n                  new RegExp(searchTerm, \"i\").test(user.name) ||\n                  new RegExp(searchTerm, \"i\").test(user.age) ||\n                  new RegExp(searchTerm, \"i\").test(user.email) ||\n                  new RegExp(searchTerm, \"i\").test(user.roles) ||\n                  new RegExp(searchTerm, \"i\").test(user.score) ||\n                  new RegExp(searchTerm, \"i\").test(user.point) ||\n                  new RegExp(searchTerm, \"i\").test(user.progresslevel) ||\n                  new RegExp(searchTerm, \"i\").test(user.guard) ||\n                  new RegExp(searchTerm, \"i\").test(user.createdAt) ||\n                  new RegExp(searchTerm, \"i\").test(user.updatedAt)\n              )\n              .slice(\n                (currentPage - 1) * itemsPerPage,\n                currentPage * itemsPerPage\n              )\n              .map((user) => (\n                <tr key={user.id}>\n                  <td>{user.id}</td>\n                  <td>{user.name}</td>\n                  <td>\n                    {\" \"}\n                    {/* Display the image using the URL */}\n                    <img\n                      className=\"w-20\"\n                      src={`https://api2.isyaratlingo.cloud/${user.image}`}\n                      alt={user.name}\n                    />\n                  </td>\n                  <td>{user.age}</td>\n                  <td>{user.email}</td>\n                  <td>{user.roles}</td>\n                  <td>{user.score}</td>\n                  <td>{user.point}</td>\n                  <td>{user.progresslevel}</td>\n                  <td>{user.guard - 1}</td>\n                  <td>{formatTimestamp(user.createdAt)}</td>\n                  <td>{formatTimestamp(user.updatedAt)}</td>\n                  <td>\n                    <Link\n                      to={`/admin/dashboard/user/edit/${user.uuid}`}\n                      className=\"flex flex-row gap-2 items-center justify-center bg-green-500 p-2 rounded-lg text-white\">\n                      Edit\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"currentColor\"\n                        class=\"w-6 h-6\">\n                        <path d=\"M21.731 2.269a2.625 2.625 0 00-3.712 0l-1.157 1.157 3.712 3.712 1.157-1.157a2.625 2.625 0 000-3.712zM19.513 8.199l-3.712-3.712-8.4 8.4a5.25 5.25 0 00-1.32 2.214l-.8 2.685a.75.75 0 00.933.933l2.685-.8a5.25 5.25 0 002.214-1.32l8.4-8.4z\" />\n                        <path d=\"M5.25 5.25a3 3 0 00-3 3v10.5a3 3 0 003 3h10.5a3 3 0 003-3V13.5a.75.75 0 00-1.5 0v5.25a1.5 1.5 0 01-1.5 1.5H5.25a1.5 1.5 0 01-1.5-1.5V8.25a1.5 1.5 0 011.5-1.5h5.25a.75.75 0 000-1.5H5.25z\" />\n                      </svg>\n                    </Link>\n                  </td>\n                  <td>\n                    <button\n                      onClick={() => {\n                        if (\n                          window.confirm(\n                            \"Are you sure you wish to delete this item?\"\n                          )\n                        )\n                          deleteUser(user.uuid);\n                      }}\n                      className=\" flex flex-row gap-2 items-center justify-center bg-red-700 p-2 rounded-lg text-white\">\n                      Delete\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"currentColor\"\n                        class=\"w-6 h-6\">\n                        <path\n                          fill-rule=\"evenodd\"\n                          d=\"M16.5 4.478v.227a48.816 48.816 0 013.878.512.75.75 0 11-.256 1.478l-.209-.035-1.005 13.07a3 3 0 01-2.991 2.77H8.084a3 3 0 01-2.991-2.77L4.087 6.66l-.209.035a.75.75 0 01-.256-1.478A48.567 48.567 0 017.5 4.705v-.227c0-1.564 1.213-2.9 2.816-2.951a52.662 52.662 0 013.369 0c1.603.051 2.815 1.387 2.815 2.951zm-6.136-1.452a51.196 51.196 0 013.273 0C14.39 3.05 15 3.684 15 4.478v.113a49.488 49.488 0 00-6 0v-.113c0-.794.609-1.428 1.364-1.452zm-.355 5.945a.75.75 0 10-1.5.058l.347 9a.75.75 0 101.499-.058l-.346-9zm5.48.058a.75.75 0 10-1.498-.058l-.347 9a.75.75 0 001.5.058l.345-9z\"\n                          clip-rule=\"evenodd\"\n                        />\n                      </svg>\n                    </button>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n      </div>\n      <Pagination\n        currentPage={currentPage}\n        itemsPerPage={itemsPerPage}\n        totalItems={users.length}\n        handlePageChange={handlePageChange}\n      />\n    </div>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\dictionary\\listDictionary.jsx",["309","310","311","312","313","314"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Pagination from \"../../../components/Pagination\";\n\nexport default function listDictionary() {\n  const [vocabs, setVocabs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    getVocabs();\n  }, []);\n\n  const getVocabs = async () => {\n    const response = await axios.get(`http://localhost:5000/dictionary`);\n    setVocabs(response.data);\n  };\n\n  const deleteVocab = async (uuid) => {\n    await axios.delete(`http://localhost:5000/dictionary/${uuid}`);\n    getVocabs();\n  };\n\n  const formatTimestamp = (timestamp) => {\n    const options = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      timeZone: \"Asia/Jakarta\",\n    };\n    return new Intl.DateTimeFormat(\"en-US\", options).format(\n      new Date(timestamp)\n    );\n  };\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"flex flex-col mt-7\">\n      <div className=\"flex flex-row pb-5\">\n        <div className=\"bg-[#58CC02] p-3 rounded-l-xl\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"white\"\n            class=\"w-6 h-6\">\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M10.5 3.75a6.75 6.75 0 100 13.5 6.75 6.75 0 000-13.5zM2.25 10.5a8.25 8.25 0 1114.59 5.28l4.69 4.69a.75.75 0 11-1.06 1.06l-4.69-4.69A8.25 8.25 0 012.25 10.5z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg>\n        </div>\n        <input\n          className=\"p-3 font-semibold px-3 rounded-r-xl round border bg-white border-[#B7B6B8]\"\n          type=\"text\"\n          placeholder=\"Search Vocabs...\"\n          value={searchTerm}\n          onChange={(event) => setSearchTerm(event.target.value)}\n        />\n      </div>\n      <table className=\"table w-11/12 bg-[#007bff] rounded-lg text-white\">\n        <thead className=\"text-white text-center\">\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Image</th>\n            <th>Categories</th>\n            <th>Created At</th>\n            <th>Update At</th>\n            <th></th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody className=\"text-center\">\n          {vocabs\n            .filter(\n              (vocab) =>\n                new RegExp(searchTerm, \"i\").test(vocab.id) ||\n                new RegExp(searchTerm, \"i\").test(vocab.name) ||\n                new RegExp(searchTerm, \"i\").test(vocab.categories) ||\n                new RegExp(searchTerm, \"i\").test(vocab.createdAt) ||\n                new RegExp(searchTerm, \"i\").test(vocab.updatedAt)\n            )\n            .slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage)\n            .map((vocab) => (\n              <tr key={vocab.id}>\n                <td>{vocab.id}</td>\n                <td>{vocab.name}</td>\n                <td>\n                  {/* Display the image using the URL */}\n                  <img\n                    className=\"w-20\"\n                    src={`http://localhost:5000/${vocab.image}`}\n                    alt={vocab.name}\n                  />\n                </td>\n                <td>{vocab.categories}</td>\n                <td>{formatTimestamp(vocab.createdAt)}</td>\n                <td>{formatTimestamp(vocab.updatedAt)}</td>\n                <td>\n                  <Link\n                    to={`/admin/dashboard/dictionary/edit/${vocab.uuid}`}\n                    className=\"flex flex-row gap-2 items-center justify-center bg-green-500 p-2 rounded-lg text-white\">\n                    Edit\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"currentColor\"\n                      class=\"w-6 h-6\">\n                      <path d=\"M21.731 2.269a2.625 2.625 0 00-3.712 0l-1.157 1.157 3.712 3.712 1.157-1.157a2.625 2.625 0 000-3.712zM19.513 8.199l-3.712-3.712-8.4 8.4a5.25 5.25 0 00-1.32 2.214l-.8 2.685a.75.75 0 00.933.933l2.685-.8a5.25 5.25 0 002.214-1.32l8.4-8.4z\" />\n                      <path d=\"M5.25 5.25a3 3 0 00-3 3v10.5a3 3 0 003 3h10.5a3 3 0 003-3V13.5a.75.75 0 00-1.5 0v5.25a1.5 1.5 0 01-1.5 1.5H5.25a1.5 1.5 0 01-1.5-1.5V8.25a1.5 1.5 0 011.5-1.5h5.25a.75.75 0 000-1.5H5.25z\" />\n                    </svg>\n                  </Link>\n                </td>\n                <td>\n                  <button\n                    onClick={() => {\n                      if (\n                        window.confirm(\n                          \"Are you sure you wish to delete this item?\"\n                        )\n                      )\n                        deleteVocab(vocab.uuid);\n                    }}\n                    className=\" flex flex-row gap-2 items-center justify-center bg-red-700 p-2 rounded-lg text-white\">\n                    Delete\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"currentColor\"\n                      class=\"w-6 h-6\">\n                      <path\n                        fill-rule=\"evenodd\"\n                        d=\"M16.5 4.478v.227a48.816 48.816 0 013.878.512.75.75 0 11-.256 1.478l-.209-.035-1.005 13.07a3 3 0 01-2.991 2.77H8.084a3 3 0 01-2.991-2.77L4.087 6.66l-.209.035a.75.75 0 01-.256-1.478A48.567 48.567 0 017.5 4.705v-.227c0-1.564 1.213-2.9 2.816-2.951a52.662 52.662 0 013.369 0c1.603.051 2.815 1.387 2.815 2.951zm-6.136-1.452a51.196 51.196 0 013.273 0C14.39 3.05 15 3.684 15 4.478v.113a49.488 49.488 0 00-6 0v-.113c0-.794.609-1.428 1.364-1.452zm-.355 5.945a.75.75 0 10-1.5.058l.347 9a.75.75 0 101.499-.058l-.346-9zm5.48.058a.75.75 0 10-1.498-.058l-.347 9a.75.75 0 001.5.058l.345-9z\"\n                        clip-rule=\"evenodd\"\n                      />\n                    </svg>\n                  </button>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      <Pagination\n        currentPage={currentPage}\n        itemsPerPage={itemsPerPage}\n        totalItems={vocabs.length}\n        handlePageChange={handlePageChange}\n      />\n    </div>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\shop\\listShop.jsx",["315","316","317","318","319","320","321"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Pagination from \"../../../components/Pagination\";\n\nexport default function listShop() {\n  const [items, setItems] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    getItems();\n  }, []);\n\n  const getItems = async () => {\n    const response = await axios.get(`http://localhost:5000/shop`);\n    setItems(response.data);\n  };\n\n  const deleteItem = async (uuid) => {\n    await axios.delete(`http://localhost:5000/shop/${uuid}`);\n    getItems();\n  };\n\n  const formatTimestamp = (timestamp) => {\n    const options = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      timeZone: \"Asia/Jakarta\",\n    };\n    return new Intl.DateTimeFormat(\"en-US\", options).format(\n      new Date(timestamp)\n    );\n  };\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"flex flex-col mt-7\">\n      <div className=\"flex flex-row pb-5\">\n        <div className=\"bg-[#58CC02] p-3 rounded-l-xl\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"white\"\n            class=\"w-6 h-6\">\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M10.5 3.75a6.75 6.75 0 100 13.5 6.75 6.75 0 000-13.5zM2.25 10.5a8.25 8.25 0 1114.59 5.28l4.69 4.69a.75.75 0 11-1.06 1.06l-4.69-4.69A8.25 8.25 0 012.25 10.5z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg>\n        </div>\n        <input\n          className=\"p-3 font-semibold px-3 rounded-r-xl round border bg-white border-[#B7B6B8]\"\n          type=\"text\"\n          placeholder=\"Search Items...\"\n          value={searchTerm}\n          onChange={(event) => setSearchTerm(event.target.value)}\n        />\n      </div>\n      <table className=\"table w-11/12 bg-[#007bff] rounded-lg text-white\">\n        <thead className=\"text-white text-center\">\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Price</th>\n            <th>Image</th>\n            <th>Desciption</th>\n            <th>Created At</th>\n            <th>Update At</th>\n            <th></th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody className=\"text-center\">\n          {items\n            .filter(\n              (item) =>\n                new RegExp(searchTerm, \"i\").test(item.id) ||\n                new RegExp(searchTerm, \"i\").test(item.name) ||\n                new RegExp(searchTerm, \"i\").test(item.price) ||\n                item.image ||\n                new RegExp(searchTerm, \"i\").test(item.description) ||\n                new RegExp(searchTerm, \"i\").test(item.createdAt) ||\n                new RegExp(searchTerm, \"i\").test(item.updatedAt)\n            )\n            .slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage)\n            .map((item) => (\n              <tr key={item.id}>\n                <td>{item.id}</td>\n                <td>{item.name}</td>\n                <td>{item.price}</td>\n                <td>\n                  {/* Display the image using the URL */}\n                  <img\n                    className=\"w-20\"\n                    src={`http://localhost:5000/${item.image}`}\n                    alt={item.name}\n                  />\n                </td>\n                <td>{item.description}</td>\n                <td>{formatTimestamp(item.createdAt)}</td>\n                <td>{formatTimestamp(item.updatedAt)}</td>\n                <td>\n                  <Link\n                    to={`/admin/dashboard/shop/edit/${item.uuid}`}\n                    className=\"flex flex-row gap-2 items-center justify-center bg-green-500 p-2 rounded-lg text-white\">\n                    Edit\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"currentColor\"\n                      class=\"w-6 h-6\">\n                      <path d=\"M21.731 2.269a2.625 2.625 0 00-3.712 0l-1.157 1.157 3.712 3.712 1.157-1.157a2.625 2.625 0 000-3.712zM19.513 8.199l-3.712-3.712-8.4 8.4a5.25 5.25 0 00-1.32 2.214l-.8 2.685a.75.75 0 00.933.933l2.685-.8a5.25 5.25 0 002.214-1.32l8.4-8.4z\" />\n                      <path d=\"M5.25 5.25a3 3 0 00-3 3v10.5a3 3 0 003 3h10.5a3 3 0 003-3V13.5a.75.75 0 00-1.5 0v5.25a1.5 1.5 0 01-1.5 1.5H5.25a1.5 1.5 0 01-1.5-1.5V8.25a1.5 1.5 0 011.5-1.5h5.25a.75.75 0 000-1.5H5.25z\" />\n                    </svg>\n                  </Link>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n      <Pagination\n        currentPage={currentPage}\n        itemsPerPage={itemsPerPage}\n        totalItems={items.length}\n        handlePageChange={handlePageChange}\n      />\n    </div>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\dictionary\\editDictionary.jsx",["322","323","324","325","326","327","328","329","330","331"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Listbox, Transition } from \"@headlessui/react\";\nimport Sidebar from \"../../../components/SidebarLearning\";\n\nconst categoryList = [\n  \"Perkenalan\",\n  \"Keluarga\",\n  \"Kata Sifat\",\n  \"Buah\",\n  \"Hewan\",\n  \"Hari\",\n  \"Bulan\",\n  \"Warna\",\n  \"Abjad\",\n  \"Bilangan\",\n];\n\nexport default function editDictionary() {\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(null); // Use null as initial state for image\n  const [categories, setCategories] = useState(categoryList[0]);\n  const [src, setSRC] = useState(\"\");\n  const [createdAt, setCreatedAt] = useState(\"\");\n  const [updatedAt, setUpdatedAt] = useState(\"\");\n  const { uuid } = useParams();\n  const navigate = useNavigate();\n\n  const formatTimestamp = (timestamp) => {\n    if (!timestamp) {\n      return \"\"; // Return an empty string for undefined or empty timestamps\n    }\n    try {\n      const options = {\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\",\n        timeZone: \"Asia/Jakarta\",\n      };\n      // Use a console.log to inspect the timestamp before passing it to the Date constructor\n      console.log(\"Input timestamp:\", timestamp);\n\n      return new Intl.DateTimeFormat(\"en-US\", options).format(\n        new Date(timestamp)\n      );\n    } catch (error) {\n      console.error(\"Error formatting timestamp:\", error);\n      return \"\"; // Return an empty string for invalid timestamps\n    }\n  };\n\n  const updateVocab = async (e) => {\n    e.preventDefault();\n\n    // Create a FormData object to send form data including the image\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"categories\", categories);\n    formData.append(\"src\", src);\n    if (image) {\n      formData.append(\"image\", image);\n    }\n\n    try {\n      await axios.patch(`http://localhost:5000/dictionary/${uuid}`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\", // Set the correct content type\n        },\n      });\n\n      let path = \"/admin/dashboard/dictionary\";\n      navigate(path);\n      window.alert(\"Vocab Updated Successfully\");\n    } catch (error) {\n      console.error(\"Error updating Vocab:\", error);\n      window.alert(\"Error updating Vocab.\");\n    }\n  };\n\n  useEffect(() => {\n    getVocabById();\n  }, []);\n\n  const getVocabById = async () => {\n    const response = await axios.get(\n      `http://localhost:5000/dictionary/${uuid}`\n    );\n    setName(response.data.name);\n    setImage(response.data.image);\n    setCategories(response.data.categories);\n    setSRC(response.data.src);\n    setCreatedAt(response.data.createdAt);\n    setUpdatedAt(response.data.updatedAt);\n  };\n\n  return (\n    <div className=\"flex flex-col\">\n      <Sidebar />\n      <div className=\"flex flex-col items-center  justify-center min-w-max mt-7\">\n        <div className=\"py-5\">\n          <span className=\"text-xl font-bold\">Edit Vocab</span>\n        </div>\n        <form onSubmit={updateVocab}>\n          <div>\n            <section className=\"grid grid-cols-2 gap-6\">\n              {/* Name */}\n\n              <div>\n                <label className=\"label font-bold\">Name</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"name\"\n                  placeholder=\"Name\"\n                  value={name}\n                  required\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n\n              {/* Updated At */}\n\n              <div>\n                <label className=\"label font-bold\">Updated At</label>\n                <input\n                  className=\"py-2 [width:300px] text-slate-500 font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"text\"\n                  placeholder=\"Updated At\"\n                  value={formatTimestamp(updatedAt)}\n                  onChange={(e) => setUpdatedAt(e.target.value)}\n                  disabled\n                />\n              </div>\n\n              {/* Categories */}\n\n              <div className=\"pt-2\">\n                <Listbox\n                  as=\"div\"\n                  className=\"space-y-1\"\n                  value={categories}\n                  onChange={setCategories}>\n                  {({ open }) => (\n                    <>\n                      <Listbox.Label className=\"block font-bold text-start\">\n                        Categories\n                      </Listbox.Label>\n                      <div className=\"flex\">\n                        <span className=\"inline-block [width:300px]  rounded-md shadow-sm\">\n                          <Listbox.Button className=\"cursor-default h-11 relative w-full rounded-md border border-gray-300 bg-white pl-3 pr-10 py-2 text-left focus:outline-none focus:shadow-outline-blue focus:border-blue-300 transition ease-in-out duration-150 sm:text-sm sm:leading-5\">\n                            <span className=\"block truncate text-gray-900\">\n                              {categories}\n                            </span>\n                            <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                              <svg\n                                className=\"h-5 w-5 text-gray-700\"\n                                viewBox=\"0 0 20 20\"\n                                fill=\"none\"\n                                stroke=\"currentColor\">\n                                <path\n                                  d=\"M7 7l3-3 3 3m0 6l-3 3-3-3\"\n                                  strokeWidth=\"1.5\"\n                                  strokeLinecap=\"round\"\n                                  strokeLinejoin=\"round\"\n                                />\n                              </svg>\n                            </span>\n                          </Listbox.Button>\n                        </span>\n\n                        <Transition\n                          show={open}\n                          leave=\"transition ease-in duration-100\"\n                          leaveFrom=\"opacity-100\"\n                          leaveTo=\"opacity-0\"\n                          className=\"absolute mt-12 [width:300px] rounded-lg bg-white shadow-lg\">\n                          <Listbox.Options\n                            static\n                            className=\"max-h-60 rounded-md py-1 text-base leading-6 shadow-xs overflow-auto focus:outline-none sm:text-sm sm:leading-5\">\n                            {categoryList.map((rolesList) => (\n                              <Listbox.Option key={rolesList} value={rolesList}>\n                                {({ selected, active }) => (\n                                  <div\n                                    className={`${\n                                      active\n                                        ? \"  bg-blue-600 rounded-lg text-white\"\n                                        : \"text-gray-900\"\n                                    } cursor-default  select-none relative py-2 pl-8 pr-4`}>\n                                    <span\n                                      className={`${\n                                        selected\n                                          ? \"font-semibold\"\n                                          : \"font-normal\"\n                                      } block truncate`}>\n                                      {rolesList}\n                                    </span>\n                                    {selected && (\n                                      <span\n                                        className={`${\n                                          active ? \" \" : \"text-blue-600\"\n                                        } absolute inset-y-0 left-0 flex items-center pl-1.5`}>\n                                        <svg\n                                          className=\"h-5 w-5\"\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                          viewBox=\"0 0 20 20\"\n                                          fill=\"currentColor\">\n                                          <path\n                                            fillRule=\"evenodd\"\n                                            d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                                            clipRule=\"evenodd\"\n                                          />\n                                        </svg>\n                                      </span>\n                                    )}\n                                  </div>\n                                )}\n                              </Listbox.Option>\n                            ))}\n                          </Listbox.Options>\n                        </Transition>\n                      </div>\n                    </>\n                  )}\n                </Listbox>\n              </div>\n\n              {/* Created At */}\n\n              <div>\n                <label className=\"label font-bold\">Created At</label>\n                <input\n                  className=\"py-2 [width:300px] text-slate-500 font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"text\"\n                  placeholder=\"Created At\"\n                  value={formatTimestamp(createdAt)}\n                  required\n                  onChange={(e) => setCreatedAt(e.target.value)}\n                  disabled\n                />\n              </div>\n\n              {/* Source */}\n\n              <div>\n                <label className=\"label font-bold\">Source</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"text\"\n                  placeholder=\"Source Link\"\n                  value={src}\n                  required\n                  onChange={(e) => setSRC(e.target.value)}\n                />\n              </div>\n\n              {/* Image */}\n\n              <div>\n                <label className=\"label font-bold\">Image</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"file\"\n                  accept=\"image/*\" // Accept only image files\n                  onChange={(e) => setImage(e.target.files[0])}\n                />\n              </div>\n\n              {/* Button */}\n              <div className=\"col-span-2\">\n                <button className=\"btn-register [width:300px] py-3 rounded-full font-bold normal-case text-lg text-white hover:text-green-100\">\n                  Update Vocab\n                </button>\n              </div>\n            </section>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\dictionary\\addDictionary.jsx",["332","333","334","335","336"],[],"import { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Listbox, Transition } from \"@headlessui/react\";\nimport Sidebar from \"../../../components/SidebarLearning\";\n\nconst categoryList = [\n  \"Perkenalan\",\n  \"Keluarga\",\n  \"Kata Sifat\",\n  \"Buah\",\n  \"Hewan\",\n  \"Hari\",\n  \"Bulan\",\n  \"Warna\",\n  \"Abjad\",\n  \"Bilangan\",\n];\n\nexport default function addDictionary() {\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(null); // Use null as initial state for image\n  const [categories, setCategories] = useState(categoryList[0]);\n  const [src, setSRC] = useState(\"\");\n  const navigate = useNavigate();\n\n  const saveVocab = async (e) => {\n    e.preventDefault();\n\n    // Create a FormData object to send form data including the image\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"categories\", categories);\n    formData.append(\"src\", src);\n    if (image) {\n      formData.append(\"image\", image);\n    }\n\n    try {\n      await axios.post(`http://localhost:5000/dictionary/`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\", // Set the correct content type\n        },\n      });\n\n      let path = \"/admin/dashboard/dictionary\";\n      navigate(path);\n      window.alert(\"Vocab Created Successfully\");\n    } catch (error) {\n      console.error(\"Error Created Vocab:\", error);\n      window.alert(\"Error Created Vocab.\");\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col\">\n      <Sidebar />\n      <div className=\"flex flex-col items-center  justify-center min-w-max mt-7\">\n        <div className=\"py-5\">\n          <span className=\"text-xl font-bold\">Add Vocab</span>\n        </div>\n        <form onSubmit={saveVocab}>\n          <div>\n            <section className=\"grid grid-cols-2 gap-6\">\n              {/* Name */}\n\n              <div>\n                <label className=\"label font-bold\">Name</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"name\"\n                  placeholder=\"Name\"\n                  value={name}\n                  required\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n\n              {/* Image */}\n\n              <div>\n                <label className=\"label  font-bold\">Image</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"file\"\n                  accept=\"image/*\" // Accept only image files\n                  onChange={(e) => setImage(e.target.files[0])}\n                />\n              </div>\n\n              {/* Source */}\n\n              <div>\n                <label className=\"label font-bold\">Source</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"text\"\n                  placeholder=\"Source Link\"\n                  value={src}\n                  required\n                  onChange={(e) => setSRC(e.target.value)}\n                />\n              </div>\n\n              {/* Categories */}\n\n              <div className=\"pt-2\">\n                <Listbox\n                  as=\"div\"\n                  className=\"space-y-1\"\n                  value={categories}\n                  onChange={setCategories}>\n                  {({ open }) => (\n                    <>\n                      <Listbox.Label className=\"block font-bold text-start\">\n                        Categories\n                      </Listbox.Label>\n                      <div className=\"flex\">\n                        <span className=\"inline-block [width:300px]  rounded-md shadow-sm\">\n                          <Listbox.Button className=\"cursor-default h-11 relative w-full rounded-md border border-gray-300 bg-white pl-3 pr-10 py-2 text-left focus:outline-none focus:shadow-outline-blue focus:border-blue-300 transition ease-in-out duration-150 sm:text-sm sm:leading-5\">\n                            <span className=\"block truncate text-gray-900\">\n                              {categories}\n                            </span>\n                            <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                              <svg\n                                className=\"h-5 w-5 text-gray-700\"\n                                viewBox=\"0 0 20 20\"\n                                fill=\"none\"\n                                stroke=\"currentColor\">\n                                <path\n                                  d=\"M7 7l3-3 3 3m0 6l-3 3-3-3\"\n                                  strokeWidth=\"1.5\"\n                                  strokeLinecap=\"round\"\n                                  strokeLinejoin=\"round\"\n                                />\n                              </svg>\n                            </span>\n                          </Listbox.Button>\n                        </span>\n\n                        <Transition\n                          show={open}\n                          leave=\"transition ease-in duration-100\"\n                          leaveFrom=\"opacity-100\"\n                          leaveTo=\"opacity-0\"\n                          className=\"absolute mt-12 [width:300px] rounded-lg bg-white shadow-lg\">\n                          <Listbox.Options\n                            static\n                            className=\"max-h-60 rounded-md py-1 text-base leading-6 shadow-xs overflow-auto focus:outline-none sm:text-sm sm:leading-5\">\n                            {categoryList.map((categoryList) => (\n                              <Listbox.Option\n                                key={categoryList}\n                                value={categoryList}>\n                                {({ selected, active }) => (\n                                  <div\n                                    className={`${\n                                      active\n                                        ? \"  bg-blue-600 rounded-lg text-white\"\n                                        : \"text-gray-900\"\n                                    } cursor-default  select-none relative py-2 pl-8 pr-4`}>\n                                    <span\n                                      className={`${\n                                        selected\n                                          ? \"font-semibold\"\n                                          : \"font-normal\"\n                                      } block truncate`}>\n                                      {categoryList}\n                                    </span>\n                                    {selected && (\n                                      <span\n                                        className={`${\n                                          active ? \" \" : \"text-blue-600\"\n                                        } absolute inset-y-0 left-0 flex items-center pl-1.5`}>\n                                        <svg\n                                          className=\"h-5 w-5\"\n                                          xmlns=\"http://www.w3.org/2000/svg\"\n                                          viewBox=\"0 0 20 20\"\n                                          fill=\"currentColor\">\n                                          <path\n                                            fillRule=\"evenodd\"\n                                            d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                                            clipRule=\"evenodd\"\n                                          />\n                                        </svg>\n                                      </span>\n                                    )}\n                                  </div>\n                                )}\n                              </Listbox.Option>\n                            ))}\n                          </Listbox.Options>\n                        </Transition>\n                      </div>\n                    </>\n                  )}\n                </Listbox>\n              </div>\n\n              {/* Button */}\n              <div className=\"col-span-2\">\n                <button className=\"btn-register [width:300px] py-3 rounded-full font-bold normal-case text-lg text-white hover:text-green-100\">\n                  Add Vocab\n                </button>\n              </div>\n            </section>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\shop\\editShop.jsx",["337","338","339","340","341","342","343","344","345","346","347"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Sidebar from \"../../../components/SidebarLearning\";\n\nexport default function editShop() {\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [image, setImage] = useState(null); // Use null as initial state for image\n  const [description, setDescription] = useState(\"\");\n  const [createdAt, setCreatedAt] = useState(\"\");\n  const [updatedAt, setUpdatedAt] = useState(\"\");\n  const { uuid } = useParams();\n  const navigate = useNavigate();\n\n  const baseUrl = \"../../../backend\";\n\n  const formatTimestamp = (timestamp) => {\n    if (!timestamp) {\n      return \"\"; // Return an empty string for undefined or empty timestamps\n    }\n    try {\n      const options = {\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\",\n        timeZone: \"Asia/Jakarta\",\n      };\n      // Use a console.log to inspect the timestamp before passing it to the Date constructor\n      console.log(\"Input timestamp:\", timestamp);\n\n      return new Intl.DateTimeFormat(\"en-US\", options).format(\n        new Date(timestamp)\n      );\n    } catch (error) {\n      console.error(\"Error formatting timestamp:\", error);\n      return \"\"; // Return an empty string for invalid timestamps\n    }\n  };\n\n  const updateItem = async (e) => {\n    e.preventDefault();\n\n    // Create a FormData object to send form data including the image\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"price\", price);\n    formData.append(\"description\", description);\n    if (image) {\n      formData.append(\"image\", image);\n    }\n\n    try {\n      await axios.patch(`http://localhost:5000/shop/${uuid}`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\", // Set the correct content type\n        },\n      });\n\n      let path = \"/admin/dashboard/shop\";\n      navigate(path);\n      window.alert(\"Item Updated Successfully\");\n    } catch (error) {\n      console.error(\"Error updating item:\", error);\n      window.alert(\"Error updating item.\");\n    }\n  };\n\n  useEffect(() => {\n    getItemById();\n  }, []);\n\n  const getItemById = async () => {\n    const response = await axios.get(`http://localhost:5000/shop/${uuid}`);\n    setName(response.data.name);\n    setPrice(response.data.price);\n    setImage(response.data.image);\n    setDescription(response.data.description);\n    setCreatedAt(response.data.createdAt);\n    setUpdatedAt(response.data.updatedAt);\n  };\n\n  return (\n    <div className=\"flex flex-col\">\n      <Sidebar />\n      <div className=\"flex flex-col items-center  justify-center min-w-max mt-7\">\n        <div className=\"py-5\">\n          <span className=\"text-xl font-bold\">Edit Item</span>\n        </div>\n        <form onSubmit={updateItem}>\n          <div>\n            <section className=\"grid grid-cols-2 gap-6\">\n              {/* Name */}\n\n              <div>\n                <label className=\"label font-bold\">Name</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"name\"\n                  placeholder=\"Name\"\n                  value={name}\n                  required\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n\n              {/* Price */}\n\n              <div>\n                <label className=\"label font-bold\">Price</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"text\"\n                  placeholder=\"Price\"\n                  value={price}\n                  required\n                  onChange={(e) => setPrice(e.target.value)}\n                />\n              </div>\n\n              {/* Image */}\n\n              <div>\n                <label className=\"label  font-bold\">Image</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"file\"\n                  accept=\"image/*\" // Accept only image files\n                  onChange={(e) => setImage(e.target.files[0])}\n                />\n              </div>\n\n              {/* Description */}\n\n              <div>\n                <label className=\"label font-bold\">Description</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"text\"\n                  placeholder=\"Description\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </div>\n\n              {/* Created At */}\n\n              <div>\n                <label className=\"label font-bold\">Created At</label>\n                <input\n                  className=\"py-2 [width:300px] text-slate-500 font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"text\"\n                  placeholder=\"Created At\"\n                  value={formatTimestamp(createdAt)}\n                  required\n                  onChange={(e) => setCreatedAt(e.target.value)}\n                  disabled\n                />\n              </div>\n\n              {/* Updated At */}\n\n              <div>\n                <label className=\"label font-bold\">Updated At</label>\n                <input\n                  className=\"py-2 [width:300px] text-slate-500 font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"text\"\n                  placeholder=\"Updated At\"\n                  value={formatTimestamp(updatedAt)}\n                  onChange={(e) => setUpdatedAt(e.target.value)}\n                  disabled\n                />\n              </div>\n\n              {/* Button */}\n              <div className=\"col-span-2\">\n                <button className=\"btn-register [width:300px] py-3 rounded-full font-bold normal-case text-lg text-white hover:text-green-100\">\n                  Update Vocab\n                </button>\n              </div>\n            </section>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\admin\\shop\\addShop.jsx",["348","349","350","351","352"],[],"import { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport Sidebar from \"../../../components/SidebarLearning\";\n\nexport default function addShop() {\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const navigate = useNavigate();\n\n  const saveItem = async (e) => {\n    e.preventDefault();\n    await axios.post(\"http://localhost:5000/shop\", {\n      name: name,\n      price: price,\n      image: image,\n      description: description,\n    });\n    let path = \"/admin/dashboard/shop\";\n    navigate(path);\n    window.alert(\"User Added Successfully\");\n  };\n\n  return (\n    <div className=\"flex flex-col\">\n      <Sidebar />\n      <div className=\"flex flex-col items-center  justify-center min-w-max mt-7\">\n        <div className=\"py-5\">\n          <span className=\"text-xl font-bold\">Add Item</span>\n        </div>\n        <form onSubmit={saveItem}>\n          <div>\n            <section className=\"grid grid-cols-2 gap-6\">\n              {/* Name */}\n\n              <div>\n                <label className=\"label font-bold\">Name</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"name\"\n                  placeholder=\"Name\"\n                  value={name}\n                  required\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n\n              {/* Price */}\n\n              <div>\n                <label className=\"label  font-bold\">Price</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"text\"\n                  placeholder=\"Price\"\n                  value={price}\n                  required\n                  onChange={(e) => setPrice(e.target.value)}\n                />\n              </div>\n\n              {/* Image */}\n\n              <div>\n                <label className=\"label  font-bold\">Image</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"file\"\n                  placeholder=\"Image\"\n                  value={image}\n                  required\n                  onChange={(e) => setImage(e.target.value)}\n                />\n              </div>\n\n              {/* Description */}\n\n              <div>\n                <label className=\"label font-bold\">Description</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"text\"\n                  placeholder=\"Description\"\n                  value={description}\n                  required\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </div>\n\n              {/* Button */}\n              <div className=\"col-span-2\">\n                <button className=\"btn-register [width:300px] py-3 rounded-full font-bold normal-case text-lg text-white hover:text-green-100\">\n                  Add User\n                </button>\n              </div>\n            </section>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\ResetPassword.jsx",["353"],[],"import Navbar from \"../components/NavbarLogin\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\n\nexport default function ResetPassword() {\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n  const history = useNavigate();\n  const navigate = useNavigate();\n  const { token } = useParams();\n\n  const Reset = async (e) => {\n    e.preventDefault();\n    try {\n      if (password === confirmpassword) {\n        await axios.patch(`http://localhost:5000/user/resetpassword/${token}`, {\n          password: password,\n          confirmpassword: confirmpassword,\n        });\n        let path = \"/\";\n        navigate(path);\n        window.alert(\"Password Changed Successfully\");\n        history.push(\"/resetpassword\");\n      } else {\n        setMsg(\"Password do not match !\");\n      }\n    } catch (error) {\n      if (error.response) {\n        setMsg(error.response.data.msg);\n      }\n    }\n  };\n\n  useEffect(() => {\n    AOS.init();\n  }, []);\n\n  return (\n    <>\n      <div className=\"min-h-screen\">\n        <Navbar />\n        {msg}\n        <h1\n          data-aos=\"fade-down\"\n          data-aos-offset=\"200\"\n          data-aos-delay=\"50\"\n          data-aos-duration=\"1000\"\n          className=\"text-black font-bold text-3xl py-5\">\n          Reset Password\n        </h1>\n        <div className=\"pb-5\">\n          <a\n            data-aos=\"zoom-in\"\n            data-aos-offset=\"50\"\n            data-aos-delay=\"50\"\n            data-aos-duration=\"1000\"\n            className=\"text-[#B5BECA] font-bold text-sm\">\n            Insert your new password\n          </a>\n        </div>\n        <form\n          data-aos=\"zoom-in\"\n          data-aos-offset=\"200\"\n          data-aos-delay=\"50\"\n          data-aos-duration=\"1000\"\n          onSubmit={Reset}>\n          <div className=\"flex flex-col justify-center items-center gap-2\">\n            {/* Password */}\n            <div className=\"flex flex-row justify-right items-center gap-3\">\n              <input\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                value={password}\n                className=\"py-2 [width:400px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                onChange={(event) => setPassword(event.target.value)}\n                required\n                autoComplete=\"current-password\"\n              />\n            </div>\n\n            {/* Confirm Passowrd */}\n            <div className=\"flex flex-row justify-right items-center gap-3\">\n              <input\n                id=\"confirmpassword\"\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                value={confirmpassword}\n                className=\"py-2 [width:400px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                onChange={(event) => setConfirmPassword(event.target.value)}\n                required\n                autoComplete=\"current-password\"\n              />\n            </div>\n          </div>\n          <div className=\"mt-10\">\n            <button className=\"btn-register [width:400px] py-3 rounded-full font-bold normal-case text-lg text-white hover:text-green-100\">\n              CONFRIM\n            </button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\Leaderboard.jsx",[],[],"C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\Profile.jsx",["354","355","356","357"],[],"import React from \"react\";\nimport Sidebar from \"../../components/SidebarLearning\";\nimport RightDetail from \"../../components/RightDetail\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\n\nexport default function Profile() {\n  const { user } = useSelector((state) => state.auth);\n  const navigate = useNavigate();\n\n  const formatTimestamp = (timestamp) => {\n    const options = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      timeZone: \"Asia/Jakarta\",\n    };\n    return new Intl.DateTimeFormat(\"en-US\", options).format(\n      new Date(timestamp)\n    );\n  };\n\n  const gotoEditProfile = async () => {\n    let path = `/profile/edit/${user && user.uuid}`;\n    navigate(path);\n  };\n\n  const gotoChangePassword = async () => {\n    let path = `/profile/change-password/${user && user.uuid}`;\n    navigate(path);\n  };\n\n  return (\n    <div>\n      <Sidebar />\n      <div className=\" flex flex-row gap-10 text-start p-2 mt-7 ml-[275px]\">\n        <section>\n          <div className=\"flex flex-col text-white btn-login rounded-3xl px-7 py-4 mb-5 h-[75px] w-[750px]\">\n            <h1 className=\"flex flex-row items-center gap-2 font-bold text-3xl\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"#009946\"\n                class=\"w-10 h-10\">\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M18.685 19.097A9.723 9.723 0 0021.75 12c0-5.385-4.365-9.75-9.75-9.75S2.25 6.615 2.25 12a9.723 9.723 0 003.065 7.097A9.716 9.716 0 0012 21.75a9.716 9.716 0 006.685-2.653zm-12.54-1.285A7.486 7.486 0 0112 15a7.486 7.486 0 015.855 2.812A8.224 8.224 0 0112 20.25a8.224 8.224 0 01-5.855-2.438zM15.75 9a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z\"\n                  clip-rule=\"evenodd\"\n                />\n              </svg>\n              Profile\n            </h1>\n          </div>\n\n          <div className=\"flex items-center justify-center\">\n            <img\n              src={`http://localhost:5000/${user && user.image}`}\n              className=\" rounded-full w-[200px] h-[200px]\"\n            />\n          </div>\n\n          {/* Profile Detail */}\n\n          <h2 className=\"font-bold text-2xl underline-title w-[300px] my-5\">\n            Profile Detail\n          </h2>\n\n          <div className=\"flex flex-col gap-5 px-5 pb-10\">\n            {/* Name */}\n            <div>\n              <label className=\"label font-bold\">Name</label>\n              <input\n                className=\"text-slate-500 py-2 [width:650px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                type=\"text\"\n                placeholder=\"Name\"\n                value={user && user.name}\n                disabled\n              />\n            </div>\n\n            {/* Email */}\n            <div>\n              <label className=\"label font-bold\">Email</label>\n              <input\n                className=\"text-slate-500 py-2 [width:650px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                type=\"text\"\n                placeholder=\"Email\"\n                value={user && user.email}\n                disabled\n              />\n            </div>\n\n            {/* Age */}\n            <div>\n              <label className=\"label font-bold\">Age</label>\n              <input\n                className=\"text-slate-500 py-2 [width:650px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                type=\"text\"\n                placeholder=\"Age\"\n                value={user && user.age}\n                disabled\n              />\n            </div>\n\n            {/* Password */}\n            <div>\n              <label className=\"label font-bold\">Password</label>\n              <input\n                className=\"text-slate-500 py-2 [width:650px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                type=\"text\"\n                placeholder=\"Password\"\n                value=\"*****\"\n                disabled\n              />\n            </div>\n\n            <div className=\"flex flex-row items-center gap-5 w-650\">\n              {/* Created At */}\n              <div>\n                <label className=\"label font-bold\">Created At</label>\n                <input\n                  className=\"text-slate-500 py-2 w-[315px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"text\"\n                  placeholder=\"Created At\"\n                  value={user && formatTimestamp(user.createdAt)}\n                  disabled\n                />\n              </div>\n\n              {/* Updated At */}\n              <div>\n                <label className=\"label font-bold\">Updated At</label>\n                <input\n                  className=\"text-slate-500 py-2 w-[315px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"text\"\n                  placeholder=\"Updated At\"\n                  value={user && formatTimestamp(user.updatedAt)}\n                  disabled\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex flex-row gap-5 mb-10\">\n            <button\n              onClick={gotoEditProfile}\n              className=\"flex flex-row gap-2 btn-login hover:bg-blue-500 px-8 py-4 rounded-3xl font-bold text-white\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"currentColor\"\n                class=\"w-6 h-6\">\n                <path d=\"M21.731 2.269a2.625 2.625 0 00-3.712 0l-1.157 1.157 3.712 3.712 1.157-1.157a2.625 2.625 0 000-3.712zM19.513 8.199l-3.712-3.712-8.4 8.4a5.25 5.25 0 00-1.32 2.214l-.8 2.685a.75.75 0 00.933.933l2.685-.8a5.25 5.25 0 002.214-1.32l8.4-8.4z\" />\n                <path d=\"M5.25 5.25a3 3 0 00-3 3v10.5a3 3 0 003 3h10.5a3 3 0 003-3V13.5a.75.75 0 00-1.5 0v5.25a1.5 1.5 0 01-1.5 1.5H5.25a1.5 1.5 0 01-1.5-1.5V8.25a1.5 1.5 0 011.5-1.5h5.25a.75.75 0 000-1.5H5.25z\" />\n              </svg>\n              Edit Profile\n            </button>\n            <button\n              onClick={gotoChangePassword}\n              className=\"flex flex-row gap-2 btn-register hover:bg-green-500 px-8 py-4 rounded-3xl font-bold text-white\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke-width=\"1.5\"\n                stroke=\"currentColor\"\n                class=\"w-6 h-6\">\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  d=\"M13.5 10.5V6.75a4.5 4.5 0 119 0v3.75M3.75 21.75h10.5a2.25 2.25 0 002.25-2.25v-6.75a2.25 2.25 0 00-2.25-2.25H3.75a2.25 2.25 0 00-2.25 2.25v6.75a2.25 2.25 0 002.25 2.25z\"\n                />\n              </svg>\n              Change Password\n            </button>\n          </div>\n        </section>\n        <RightDetail />\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\Shop.jsx",[],[],"C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\Dictionary.jsx",["358","359","360"],[],"import React from \"react\";\nimport Sidebar from \"../../components/SidebarLearning\";\nimport RightDetail from \"../../components/RightDetail\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function Dictionary() {\n  const Categories = [\n    {\n      Icon: (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"white\"\n          class=\"w-10 h-10\">\n          <path d=\"M18.75 12.75h1.5a.75.75 0 000-1.5h-1.5a.75.75 0 000 1.5zM12 6a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5A.75.75 0 0112 6zM12 18a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5A.75.75 0 0112 18zM3.75 6.75h1.5a.75.75 0 100-1.5h-1.5a.75.75 0 000 1.5zM5.25 18.75h-1.5a.75.75 0 010-1.5h1.5a.75.75 0 010 1.5zM3 12a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5A.75.75 0 013 12zM9 3.75a2.25 2.25 0 100 4.5 2.25 2.25 0 000-4.5zM12.75 12a2.25 2.25 0 114.5 0 2.25 2.25 0 01-4.5 0zM9 15.75a2.25 2.25 0 100 4.5 2.25 2.25 0 000-4.5z\" />\n        </svg>\n      ),\n      Title: \"All\",\n    },\n    {\n      Icon: (\n        <svg\n          width=\"40px\"\n          height=\"40px\"\n          viewBox=\"0 0 24 24\"\n          fill=\"white\"\n          xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M8.78355 21.9999C7.09836 21.2478 5.70641 20.0758 4.7915 18.5068\"\n            stroke=\"#white\"\n            stroke-width=\"1.5\"\n            stroke-linecap=\"round\"\n          />\n          <path\n            d=\"M14.8252 2.18595C16.5021 1.70882 18.2333 2.16305 19.4417 3.39724\"\n            stroke=\"#white\"\n            stroke-width=\"1.5\"\n            stroke-linecap=\"round\"\n          />\n          <path\n            d=\"M4.0106 8.36655L3.63846 7.71539L4.0106 8.36655ZM6.50218 8.86743L7.15007 8.48962L6.50218 8.86743ZM3.2028 10.7531L2.55491 11.1309H2.55491L3.2028 10.7531ZM7.69685 3.37253L8.34474 2.99472V2.99472L7.69685 3.37253ZM8.53873 4.81624L7.89085 5.19405L8.53873 4.81624ZM10.4165 9.52517C10.6252 9.88299 11.0844 10.0039 11.4422 9.79524C11.8 9.58659 11.9209 9.12736 11.7123 8.76955L10.4165 9.52517ZM7.53806 12.1327C7.74672 12.4905 8.20594 12.6114 8.56376 12.4027C8.92158 12.1941 9.0425 11.7349 8.83384 11.377L7.53806 12.1327ZM4.39747 5.25817L3.74958 5.63598L4.39747 5.25817ZM11.8381 2.9306L12.486 2.55279V2.55279L11.8381 2.9306ZM14.3638 7.26172L15.0117 6.88391L14.3638 7.26172ZM16.0475 10.1491L16.4197 10.8003C16.5934 10.701 16.7202 10.5365 16.772 10.3433C16.8238 10.15 16.7962 9.94413 16.6954 9.77132L16.0475 10.1491ZM17.6632 5.37608L17.0153 5.75389L17.6632 5.37608ZM20.1888 9.7072L20.8367 9.32939V9.32939L20.1888 9.7072ZM6.99128 17.2497L7.63917 16.8719L6.99128 17.2497ZM16.9576 19.2533L16.5854 18.6021L16.9576 19.2533ZM13.784 15.3C13.9927 15.6578 14.4519 15.7787 14.8097 15.5701C15.1676 15.3614 15.2885 14.9022 15.0798 14.5444L13.784 15.3ZM4.38275 9.0177C5.01642 8.65555 5.64023 8.87817 5.85429 9.24524L7.15007 8.48962C6.4342 7.26202 4.82698 7.03613 3.63846 7.71539L4.38275 9.0177ZM3.63846 7.71539C2.44761 8.39597 1.83532 9.8969 2.55491 11.1309L3.85068 10.3753C3.64035 10.0146 3.75139 9.37853 4.38275 9.0177L3.63846 7.71539ZM7.04896 3.75034L7.89085 5.19405L9.18662 4.43843L8.34474 2.99472L7.04896 3.75034ZM7.89085 5.19405L10.4165 9.52517L11.7123 8.76955L9.18662 4.43843L7.89085 5.19405ZM8.83384 11.377L7.15007 8.48962L5.85429 9.24524L7.53806 12.1327L8.83384 11.377ZM7.15007 8.48962L5.04535 4.88036L3.74958 5.63598L5.85429 9.24524L7.15007 8.48962ZM5.57742 3.5228C6.21109 3.16065 6.8349 3.38327 7.04896 3.75034L8.34474 2.99472C7.62887 1.76712 6.02165 1.54123 4.83313 2.22048L5.57742 3.5228ZM4.83313 2.22048C3.64228 2.90107 3.02999 4.40199 3.74958 5.63598L5.04535 4.88036C4.83502 4.51967 4.94606 3.88363 5.57742 3.5228L4.83313 2.22048ZM11.1902 3.30841L13.7159 7.63953L15.0117 6.88391L12.486 2.55279L11.1902 3.30841ZM13.7159 7.63953L15.3997 10.5269L16.6954 9.77132L15.0117 6.88391L13.7159 7.63953ZM9.71869 3.08087C10.3524 2.71872 10.9762 2.94134 11.1902 3.30841L12.486 2.55279C11.7701 1.32519 10.1629 1.0993 8.9744 1.77855L9.71869 3.08087ZM8.9744 1.77855C7.78355 2.45914 7.17126 3.96006 7.89085 5.19405L9.18662 4.43843C8.97629 4.07774 9.08733 3.4417 9.71869 3.08087L8.9744 1.77855ZM17.0153 5.75389L19.5409 10.085L20.8367 9.32939L18.311 4.99827L17.0153 5.75389ZM15.5437 5.52635C16.1774 5.1642 16.8012 5.38682 17.0153 5.75389L18.311 4.99827C17.5952 3.77068 15.988 3.54478 14.7994 4.22404L15.5437 5.52635ZM14.7994 4.22404C13.6086 4.90462 12.9963 6.40555 13.7159 7.63953L15.0117 6.88391C14.8013 6.52322 14.9124 5.88718 15.5437 5.52635L14.7994 4.22404ZM2.55491 11.1309L6.34339 17.6276L7.63917 16.8719L3.85068 10.3753L2.55491 11.1309ZM16.5854 18.6021C13.2185 20.5264 9.24811 19.631 7.63917 16.8719L6.34339 17.6276C8.45414 21.2472 13.4079 22.1458 17.3297 19.9045L16.5854 18.6021ZM19.5409 10.085C21.1461 12.8377 19.9501 16.6792 16.5854 18.6021L17.3297 19.9045C21.2539 17.6618 22.9512 12.9554 20.8367 9.32939L19.5409 10.085ZM15.0798 14.5444C14.4045 13.3863 14.8772 11.6818 16.4197 10.8003L15.6754 9.49797C13.5735 10.6993 12.5995 13.2687 13.784 15.3L15.0798 14.5444Z\"\n            fill=\"#white\"\n          />\n        </svg>\n      ),\n      Title: \"Perkenalan\",\n    },\n    {\n      Icon: (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke-width=\"1.5\"\n          stroke=\"white\"\n          class=\"w-10 h-10\">\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            d=\"M2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25\"\n          />\n        </svg>\n      ),\n      Title: \"Keluarga\",\n    },\n    {\n      Icon: (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke-width=\"1.5\"\n          stroke=\"white\"\n          class=\"w-10 h-10\">\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            d=\"M8.625 12a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H8.25m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H12m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0h-.375M21 12c0 4.556-4.03 8.25-9 8.25a9.764 9.764 0 01-2.555-.337A5.972 5.972 0 015.41 20.97a5.969 5.969 0 01-.474-.065 4.48 4.48 0 00.978-2.025c.09-.457-.133-.901-.467-1.226C3.93 16.178 3 14.189 3 12c0-4.556 4.03-8.25 9-8.25s9 3.694 9 8.25z\"\n          />\n        </svg>\n      ),\n      Title: \"Kata Sifat\",\n    },\n    {\n      Icon: (\n        <svg\n          fill=\"white\"\n          width=\"40px\"\n          height=\"40px\"\n          viewBox=\"-5.5 0 32 32\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M12.16 28.24c-0.64 0-1.2-0.080-1.64-0.28-0.48 0.2-1.040 0.28-1.64 0.28-1.72 0-3.6-0.72-5.080-2-1.88-1.6-3.12-4.040-3.64-7.040-0.52-3.12 0.4-4.96 1.24-5.92 1.080-1.24 2.64-1.96 4.48-1.96 1.76 0 3.48 0.68 4.64 1.8 1.16-1.12 2.88-1.8 4.64-1.8 1.84 0 3.44 0.68 4.48 1.96 0.84 1 1.72 2.84 1.24 5.92-0.48 3-1.76 5.44-3.64 7.040-1.48 1.24-3.32 2-5.080 2zM10.52 26.16c0.16 0 0.32 0.040 0.44 0.12 0.24 0.16 0.68 0.24 1.2 0.24 2 0 6.040-1.6 7.040-7.68 0.32-1.96 0.040-3.52-0.84-4.56-0.76-0.88-1.88-1.36-3.2-1.36-1.64 0-3.2 0.72-3.96 1.88-0.16 0.24-0.4 0.36-0.68 0.36v0c-0.28 0-0.56-0.16-0.68-0.36-0.76-1.12-2.32-1.88-3.96-1.88-1.32 0-2.48 0.48-3.2 1.36-0.88 1.040-1.16 2.6-0.84 4.56 0.44 2.64 2.48 7.68 7.040 7.68 0.52 0 0.96-0.080 1.2-0.24 0.12-0.080 0.28-0.12 0.44-0.12zM7.88 9.92c-0.56 0-1.96-0.12-2.92-1.4-1.12-1.48-1-3.72-0.96-4 0-0.24 0.12-0.48 0.32-0.6 0.2-0.16 0.44-0.2 0.68-0.16s2.44 0.52 3.56 2.040c1.24 1.68 0.44 3.52 0.4 3.6-0.12 0.24-0.36 0.44-0.64 0.48-0.040 0.040-0.2 0.040-0.44 0.040zM5.68 5.76c0.080 0.6 0.24 1.28 0.6 1.76s0.88 0.64 1.24 0.72c0.040-0.36 0.040-0.92-0.32-1.4-0.36-0.52-0.96-0.84-1.52-1.080zM10.52 11.36c-0.080 0-0.16 0-0.24-0.040-0.44-0.12-0.68-0.6-0.56-1.040l1.2-3.96c0.12-0.44 0.6-0.68 1.040-0.56s0.68 0.6 0.56 1.040l-1.2 3.96c-0.12 0.36-0.44 0.6-0.8 0.6z\"></path>\n        </svg>\n      ),\n      Title: \"Buah\",\n    },\n    {\n      Icon: (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"white\"\n          width=\"40px\"\n          height=\"40px\"\n          viewBox=\"0 0 512 512\"\n          enable-background=\"new 0 0 512 512\">\n          <g>\n            <path\n              d=\"M256-0.5C114.333-0.5-0.5,114.333-0.5,256S114.333,512.5,256,512.5S512.5,397.667,512.5,256S397.667-0.5,256-0.5z\n\t\t M256,472.422C136.47,472.422,39.578,375.53,39.578,256C39.578,136.47,136.47,39.578,256,39.578\n\t\tc119.53,0,216.422,96.892,216.422,216.422C472.422,375.53,375.53,472.422,256,472.422z\"\n            />\n            <path\n              d=\"M133.48,236.619c-9.394,8.673-6.982,27.397,5.385,41.863c12.368,14.45,29.996,19.131,39.374,10.427\n\t\tc9.378-8.643,6.967-27.397-5.401-41.832C160.47,232.642,142.842,227.945,133.48,236.619z\"\n            />\n            <path\n              d=\"M338.833,243.757c-11.006,15.625-11.694,34.52-1.55,42.223c10.129,7.671,27.257,1.314,38.247-14.325\n\t\tc10.99-15.593,11.679-34.473,1.55-42.191C366.95,221.777,349.808,228.18,338.833,243.757z\"\n            />\n            <path\n              d=\"M226.129,240.125c16.517-3.977,25.111-28.65,19.179-55.107c-5.887-26.458-24.078-44.681-40.595-40.705\n\t\tc-16.501,4.008-25.08,28.681-19.194,55.139C191.452,225.879,209.628,244.102,226.129,240.125z\"\n            />\n            <path\n              d=\"M309.057,144.313c-16.501-3.977-34.677,14.247-40.595,40.705c-5.918,26.458,2.661,51.131,19.193,55.107\n\t\tc16.485,3.976,34.677-14.247,40.595-40.673C334.184,172.995,325.558,148.321,309.057,144.313z\"\n            />\n            <path\n              d=\"M256,262.513c-39.374,0-68.932,62.7-68.932,83.444c0,51.005,29.558-1.613,68.932-1.613c39.39,0,68.932,52.618,68.932,1.613\n\t\tC324.932,325.213,295.39,262.513,256,262.513z\"\n            />\n          </g>\n        </svg>\n      ),\n      Title: \"Hewan\",\n    },\n\n    {\n      Icon: (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke-width=\"1.5\"\n          stroke=\"white\"\n          class=\"w-10 h-10\">\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            d=\"M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5\"\n          />\n        </svg>\n      ),\n      Title: \"Hari\",\n    },\n    {\n      Icon: (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"white\"\n          class=\"w-10 h-10\">\n          <path d=\"M12.75 12.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM7.5 15.75a.75.75 0 100-1.5.75.75 0 000 1.5zM8.25 17.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM9.75 15.75a.75.75 0 100-1.5.75.75 0 000 1.5zM10.5 17.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM12 15.75a.75.75 0 100-1.5.75.75 0 000 1.5zM12.75 17.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM14.25 15.75a.75.75 0 100-1.5.75.75 0 000 1.5zM15 17.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM16.5 15.75a.75.75 0 100-1.5.75.75 0 000 1.5zM15 12.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM16.5 13.5a.75.75 0 100-1.5.75.75 0 000 1.5z\" />\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M6.75 2.25A.75.75 0 017.5 3v1.5h9V3A.75.75 0 0118 3v1.5h.75a3 3 0 013 3v11.25a3 3 0 01-3 3H5.25a3 3 0 01-3-3V7.5a3 3 0 013-3H6V3a.75.75 0 01.75-.75zm13.5 9a1.5 1.5 0 00-1.5-1.5H5.25a1.5 1.5 0 00-1.5 1.5v7.5a1.5 1.5 0 001.5 1.5h13.5a1.5 1.5 0 001.5-1.5v-7.5z\"\n            clip-rule=\"evenodd\"\n          />\n        </svg>\n      ),\n      Title: \"Bulan\",\n    },\n    {\n      Icon: (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"white\"\n          class=\"w-10 h-10\">\n          <path d=\"M12 15a3 3 0 100-6 3 3 0 000 6z\" />\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M1.323 11.447C2.811 6.976 7.028 3.75 12.001 3.75c4.97 0 9.185 3.223 10.675 7.69.12.362.12.752 0 1.113-1.487 4.471-5.705 7.697-10.677 7.697-4.97 0-9.186-3.223-10.675-7.69a1.762 1.762 0 010-1.113zM17.25 12a5.25 5.25 0 11-10.5 0 5.25 5.25 0 0110.5 0z\"\n            clip-rule=\"evenodd\"\n          />\n        </svg>\n      ),\n      Title: \"Warna\",\n    },\n    {\n      Icon: (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"white\"\n          class=\"w-10 h-10\">\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M9 2.25a.75.75 0 01.75.75v1.506a49.38 49.38 0 015.343.371.75.75 0 11-.186 1.489c-.66-.083-1.323-.151-1.99-.206a18.67 18.67 0 01-2.969 6.323c.317.384.65.753.998 1.107a.75.75 0 11-1.07 1.052A18.902 18.902 0 019 13.687a18.823 18.823 0 01-5.656 4.482.75.75 0 11-.688-1.333 17.323 17.323 0 005.396-4.353A18.72 18.72 0 015.89 8.598a.75.75 0 011.388-.568A17.21 17.21 0 009 11.224a17.17 17.17 0 002.391-5.165 48.038 48.038 0 00-8.298.307.75.75 0 01-.186-1.489 49.159 49.159 0 015.343-.371V3A.75.75 0 019 2.25zM15.75 9a.75.75 0 01.68.433l5.25 11.25a.75.75 0 01-1.36.634l-1.198-2.567h-6.744l-1.198 2.567a.75.75 0 01-1.36-.634l5.25-11.25A.75.75 0 0115.75 9zm-2.672 8.25h5.344l-2.672-5.726-2.672 5.726z\"\n            clip-rule=\"evenodd\"\n          />\n        </svg>\n      ),\n      Title: \"Abjad\",\n    },\n    {\n      Icon: (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"white\"\n          class=\"w-10 h-10\">\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M6.32 1.827a49.255 49.255 0 0111.36 0c1.497.174 2.57 1.46 2.57 2.93V19.5a3 3 0 01-3 3H6.75a3 3 0 01-3-3V4.757c0-1.47 1.073-2.756 2.57-2.93zM7.5 11.25a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75H8.25a.75.75 0 01-.75-.75v-.008zm.75 1.5a.75.75 0 00-.75.75v.008c0 .414.336.75.75.75h.008a.75.75 0 00.75-.75V13.5a.75.75 0 00-.75-.75H8.25zm-.75 3a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75H8.25a.75.75 0 01-.75-.75v-.008zm.75 1.5a.75.75 0 00-.75.75v.008c0 .414.336.75.75.75h.008a.75.75 0 00.75-.75V18a.75.75 0 00-.75-.75H8.25zm1.748-6a.75.75 0 01.75-.75h.007a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75h-.007a.75.75 0 01-.75-.75v-.008zm.75 1.5a.75.75 0 00-.75.75v.008c0 .414.335.75.75.75h.007a.75.75 0 00.75-.75V13.5a.75.75 0 00-.75-.75h-.007zm-.75 3a.75.75 0 01.75-.75h.007a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75h-.007a.75.75 0 01-.75-.75v-.008zm.75 1.5a.75.75 0 00-.75.75v.008c0 .414.335.75.75.75h.007a.75.75 0 00.75-.75V18a.75.75 0 00-.75-.75h-.007zm1.754-6a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75h-.008a.75.75 0 01-.75-.75v-.008zm.75 1.5a.75.75 0 00-.75.75v.008c0 .414.336.75.75.75h.008a.75.75 0 00.75-.75V13.5a.75.75 0 00-.75-.75h-.008zm-.75 3a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75h-.008a.75.75 0 01-.75-.75v-.008zm.75 1.5a.75.75 0 00-.75.75v.008c0 .414.336.75.75.75h.008a.75.75 0 00.75-.75V18a.75.75 0 00-.75-.75h-.008zm1.748-6a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75h-.008a.75.75 0 01-.75-.75v-.008zm.75 1.5a.75.75 0 00-.75.75v.008c0 .414.336.75.75.75h.008a.75.75 0 00.75-.75V13.5a.75.75 0 00-.75-.75h-.008zm-8.25-6A.75.75 0 018.25 6h7.5a.75.75 0 01.75.75v.75a.75.75 0 01-.75.75h-7.5a.75.75 0 01-.75-.75v-.75zm9 9a.75.75 0 00-1.5 0V18a.75.75 0 001.5 0v-2.25z\"\n            clip-rule=\"evenodd\"\n          />\n        </svg>\n      ),\n      Title: \"Bilangan\",\n    },\n  ];\n\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\n  const [vocabs, setVocabs] = useState([]);\n\n  useEffect(() => {\n    getVocabs(selectedCategory);\n  }, [selectedCategory]);\n\n  const getVocabs = async () => {\n    try {\n      const response = await axios.get(\n        `http://localhost:5000/dictionary?categories=${selectedCategory}`\n      );\n      setVocabs(response.data);\n    } catch (error) {\n      console.error(\"Error fetching vocabulary items:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <Sidebar />\n      <div className=\" flex flex-row gap-10 text-start p-2 mt-7 ml-[275px]\">\n        <section>\n          <div className=\"flex flex-col text-white btn-login rounded-3xl px-7 py-4 mb-5 h-[75px] w-[750px]\">\n            <h1 className=\"flex flex-row items-center gap-2 font-bold text-3xl\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"white\"\n                class=\"w-10 h-10\">\n                <path d=\"M11.25 4.533A9.707 9.707 0 006 3a9.735 9.735 0 00-3.25.555.75.75 0 00-.5.707v14.25a.75.75 0 001 .707A8.237 8.237 0 016 18.75c1.995 0 3.823.707 5.25 1.886V4.533zM12.75 20.636A8.214 8.214 0 0118 18.75c.966 0 1.89.166 2.75.47a.75.75 0 001-.708V4.262a.75.75 0 00-.5-.707A9.735 9.735 0 0018 3a9.707 9.707 0 00-5.25 1.533v16.103z\" />\n              </svg>\n              Dictionary\n            </h1>\n          </div>\n\n          <h1 className=\"flex flex-row items-center gap-2 text-2xl font-bold text-[#205AFC] w-[200px] underline-title my-5\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"currentColor\"\n              class=\"w-8 h-8\">\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M6.32 2.577a49.255 49.255 0 0111.36 0c1.497.174 2.57 1.46 2.57 2.93V21a.75.75 0 01-1.085.67L12 18.089l-7.165 3.583A.75.75 0 013.75 21V5.507c0-1.47 1.073-2.756 2.57-2.93z\"\n                clip-rule=\"evenodd\"\n              />\n            </svg>\n            Categories\n          </h1>\n          <div>\n            {/* Categories Selector */}\n            <div className=\"grid grid-cols-6 gap-5\">\n              {Categories.map((item) => (\n                <div\n                  key={item.Title}\n                  className={`flex flex-col btn-login w-[100px] h-[100px] rounded-3xl items-center justify-center ${\n                    selectedCategory === item.Title ? \"bg-blue-500\" : \"\"\n                  }`}\n                  onClick={() => setSelectedCategory(item.Title)}>\n                  {item.Icon}\n                  <a\n                    className={`font-bold text-white text-sm ${\n                      selectedCategory === item.Title ? \"text-yellow-200\" : \"\"\n                    }`}>\n                    {item.Title}\n                  </a>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Divider */}\n          <h1 className=\"flex flex-row items-center gap-2 text-2xl font-bold text-[#205AFC] w-[750px] underline-title my-10 \" />\n          {/* Container */}\n          <div className=\"grid grid-cols-3 gap-12\">\n            {vocabs\n              .filter(\n                (vocab) =>\n                  selectedCategory === \"All\" ||\n                  vocab.categories === selectedCategory\n              ) // Filter by category\n              .map((vocab) => (\n                <div\n                  key={vocab.name}\n                  className=\"flex w-[220px] h-[275px] btn-register rounded-3xl items-center justify-center\">\n                  <div className=\"flex items-center justify-center flex-col gap-2\">\n                    <img\n                      className=\"rounded-lg w-[250px]\"\n                      src={`http://localhost:5000/${vocab.image}`}\n                      alt={vocab.name}\n                    />\n                    <div className=\"font-bold text-lg text-white\">\n                      {vocab.name}\n                    </div>\n                    <a\n                      href={vocab.src}\n                      className=\"font-normal underline hover:text-blue-200 hover:font-bold text-sm text-white pb-5\">\n                      Source\n                    </a>\n                  </div>\n                </div>\n              ))}\n          </div>\n        </section>\n        <RightDetail />\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\components\\RightDetail.jsx",["361","362","363","364","365","366","367","368","369","370"],[],"import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\n\nexport default function RightDetail() {\n  const { user } = useSelector((state) => state.auth);\n  const [users, setUsers] = useState([]);\n\n  const getUsers = async () => {\n    const response = await axios.get(\n      `http://localhost:5000/user/all-leaderboard`\n    );\n    setUsers(response.data);\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const top5Users = users\n    .filter((user) => user.id || user.name || user.score)\n    .sort((a, b) => b.score - a.score)\n    .slice(0, 5);\n\n  return (\n    <section className=\"flex flex-col gap-10\">\n      {/* User Detail */}\n      <div className=\"flex flex-col gap-2 text-lg font-semibold w-[375px] outline outline-[1.5] rounded-xl outline-slate-300 p-3\">\n        <a className=\"flex flex-row items-center gap-2\">\n          <img\n            src={`http://localhost:5000/${user && user.image}`}\n            className=\" rounded-full w-[64px] h-[64px]\"\n          />\n\n          <a>{user && user.name}</a>\n        </a>\n        <a className=\"flex flex-row items-center text-slate-500 gap-2\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"yellow\"\n            class=\"w-8 h-8\">\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg>\n          {user && user.point}\n          <a>Points</a>\n        </a>\n\n        <a className=\"flex flex-row items-center text-slate-500 gap-2\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"#1CB0F6\"\n            class=\"w-8 h-8\">\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M12.516 2.17a.75.75 0 00-1.032 0 11.209 11.209 0 01-7.877 3.08.75.75 0 00-.722.515A12.74 12.74 0 002.25 9.75c0 5.942 4.064 10.933 9.563 12.348a.749.749 0 00.374 0c5.499-1.415 9.563-6.406 9.563-12.348 0-1.39-.223-2.73-.635-3.985a.75.75 0 00-.722-.516l-.143.001c-2.996 0-5.717-1.17-7.734-3.08zm3.094 8.016a.75.75 0 10-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.14-.094l3.75-5.25z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg>\n          {user && user.guard - 1}\n          <a>Guards</a>\n        </a>\n\n        {/* <a className=\"flex flex-row items-center text-slate-500 gap-2\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"red\"\n            class=\"w-8 h-8\">\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M12.963 2.286a.75.75 0 00-1.071-.136 9.742 9.742 0 00-3.539 6.177A7.547 7.547 0 016.648 6.61a.75.75 0 00-1.152-.082A9 9 0 1015.68 4.534a7.46 7.46 0 01-2.717-2.248zM15.75 14.25a3.75 3.75 0 11-7.313-1.172c.628.465 1.35.81 2.133 1a5.99 5.99 0 011.925-3.545 3.75 3.75 0 013.255 3.717z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg>\n          {user && user.winstreak}\n          <a>Winstreak</a>\n        </a> */}\n      </div>\n\n      {/* Leaderboard */}\n      <div className=\"flex flex-col gap-2  w-[375px] outline outline-[1.5] rounded-xl outline-slate-300 p-3\">\n        <a className=\"flex flex-row text-lg font-semibold items-center gap-2\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"#FED84E\"\n            class=\"w-8 h-8\">\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M3 6a3 3 0 013-3h12a3 3 0 013 3v12a3 3 0 01-3 3H6a3 3 0 01-3-3V6zm4.5 7.5a.75.75 0 01.75.75v2.25a.75.75 0 01-1.5 0v-2.25a.75.75 0 01.75-.75zm3.75-1.5a.75.75 0 00-1.5 0v4.5a.75.75 0 001.5 0V12zm2.25-3a.75.75 0 01.75.75v6.75a.75.75 0 01-1.5 0V9.75A.75.75 0 0113.5 9zm3.75-1.5a.75.75 0 00-1.5 0v9a.75.75 0 001.5 0v-9z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg>\n\n          <a className=\"font-bold\">Top 5 Leaderboard</a>\n        </a>\n        <a className=\"text-md font-medium text-slate-500\">\n          Tingkatkan performa pembelajaran Anda, Raih kemenangan berturut-turut\n          untuk mencapai Leaderboard!\n        </a>\n        <table className=\"table py-2 bg-[#1CB0F6]  rounded-lg text-white\">\n          <thead className=\"text-white\">\n            <tr className=\"bg-[#58CC02] rounded-lg\">\n              <th>No</th>\n              <th>Name</th>\n              <th>Scores</th>\n            </tr>\n          </thead>\n          <tbody>\n            {top5Users.map((user, index) => (\n              <tr key={user.id}>\n                <td>{index + 1}</td>\n                <td>{user.name}</td>\n                <td>{user.score}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </section>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\ChangePassword.jsx",["371"],[],"import React from \"react\";\nimport Sidebar from \"../../components/SidebarLearning\";\nimport RightDetail from \"../../components/RightDetail\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function ChangePassword() {\n  const { user } = useSelector((state) => state.auth);\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const { uuid } = useParams();\n  const navigate = useNavigate();\n\n  const changePasswordUser = async (e) => {\n    e.preventDefault();\n    await axios.patch(`http://localhost:5000/user/password/${uuid}`, {\n      password: password,\n      confirmpassword: confirmPassword,\n    });\n    let path = \"/profile\";\n    navigate(path);\n    window.alert(\"Profile Updated Successfully\");\n  };\n\n  const getUserByUUID = async () => {\n    const response = await axios.get(`http://localhost:5000/me`);\n    setPassword(response.data.password);\n  };\n\n  useEffect(() => {\n    getUserByUUID();\n  }, []);\n\n  return (\n    <div>\n      <Sidebar />\n      <div className=\" flex flex-row gap-10 text-start p-2 mt-7 ml-[275px]\">\n        <section>\n          <div className=\"flex flex-col text-white btn-login rounded-3xl px-7 py-4 mb-5 h-[75px] w-[750px]\">\n            <h1 className=\"flex flex-row items-center gap-2 font-bold text-3xl\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"#009946\"\n                class=\"w-10 h-10\">\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M18.685 19.097A9.723 9.723 0 0021.75 12c0-5.385-4.365-9.75-9.75-9.75S2.25 6.615 2.25 12a9.723 9.723 0 003.065 7.097A9.716 9.716 0 0012 21.75a9.716 9.716 0 006.685-2.653zm-12.54-1.285A7.486 7.486 0 0112 15a7.486 7.486 0 015.855 2.812A8.224 8.224 0 0112 20.25a8.224 8.224 0 01-5.855-2.438zM15.75 9a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z\"\n                  clip-rule=\"evenodd\"\n                />\n              </svg>\n              Profile\n            </h1>\n          </div>\n\n          <div className=\"flex items-center justify-center\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"#009946\"\n              class=\"w-[150px] h-[150px]\">\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M18.685 19.097A9.723 9.723 0 0021.75 12c0-5.385-4.365-9.75-9.75-9.75S2.25 6.615 2.25 12a9.723 9.723 0 003.065 7.097A9.716 9.716 0 0012 21.75a9.716 9.716 0 006.685-2.653zm-12.54-1.285A7.486 7.486 0 0112 15a7.486 7.486 0 015.855 2.812A8.224 8.224 0 0112 20.25a8.224 8.224 0 01-5.855-2.438zM15.75 9a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z\"\n                clip-rule=\"evenodd\"\n              />\n            </svg>\n          </div>\n\n          {/* Profile Detail */}\n\n          <h2 className=\"font-bold text-2xl underline-title w-[300px] my-5\">\n            Change Password\n          </h2>\n\n          <form onSubmit={changePasswordUser}>\n            <div className=\"flex flex-col gap-5 px-5 pb-10\">\n              {/* Password */}\n              <div>\n                <label className=\"label font-bold\">New Password</label>\n                <input\n                  className=\"text-slate-500 py-2 [width:650px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={(event) => setPassword(event.target.value)}\n                  required\n                />\n              </div>\n\n              {/* Confirm Password */}\n              <div>\n                <label className=\"label font-bold\">Confirm New Password</label>\n                <input\n                  className=\"text-slate-500 py-2 [width:650px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChange={(event) => setConfirmPassword(event.target.value)}\n                  required\n                />\n              </div>\n            </div>\n\n            <button className=\"flex flex-row gap-2 btn-register hover:bg-green-500 px-8 py-4 rounded-3xl font-bold text-white\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"currentColor\"\n                class=\"w-6 h-6\">\n                <path d=\"M21.731 2.269a2.625 2.625 0 00-3.712 0l-1.157 1.157 3.712 3.712 1.157-1.157a2.625 2.625 0 000-3.712zM19.513 8.199l-3.712-3.712-8.4 8.4a5.25 5.25 0 00-1.32 2.214l-.8 2.685a.75.75 0 00.933.933l2.685-.8a5.25 5.25 0 002.214-1.32l8.4-8.4z\" />\n                <path d=\"M5.25 5.25a3 3 0 00-3 3v10.5a3 3 0 003 3h10.5a3 3 0 003-3V13.5a.75.75 0 00-1.5 0v5.25a1.5 1.5 0 01-1.5 1.5H5.25a1.5 1.5 0 01-1.5-1.5V8.25a1.5 1.5 0 011.5-1.5h5.25a.75.75 0 000-1.5H5.25z\" />\n              </svg>\n              CONFIRM\n            </button>\n          </form>\n        </section>\n        <RightDetail />\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\EditProfile.jsx",["372"],[],"import React from \"react\";\nimport Sidebar from \"../../components/SidebarLearning\";\nimport RightDetail from \"../../components/RightDetail\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function EditProfile() {\n  const { user } = useSelector((state) => state.auth);\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(null); // Use null as initial state for image\n  const [email, setEmail] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const { uuid } = useParams();\n  const navigate = useNavigate();\n\n  const updateUser = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"email\", email);\n    formData.append(\"age\", age);\n    if (image) {\n      formData.append(\"image\", image);\n    }\n\n    try {\n      await axios.patch(\n        `http://localhost:5000/user/profile/${uuid}`,\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\", // Set the correct content type\n          },\n        }\n      );\n\n      let path = \"/profile\";\n      navigate(path);\n      window.alert(\"Profile Updated Successfully\");\n    } catch (error) {\n      console.error(\"Error updating Profile:\", error);\n      window.alert(\"Error updating Profile.\");\n    }\n  };\n\n  const getUserByUUID = async () => {\n    const response = await axios.get(`http://localhost:5000/me`);\n    setName(response.data.name);\n    setEmail(response.data.email);\n    setAge(response.data.age);\n  };\n\n  useEffect(() => {\n    getUserByUUID();\n  }, []);\n\n  return (\n    <div>\n      <Sidebar />\n      <div className=\" flex flex-row gap-10 text-start p-2 mt-7 ml-[275px]\">\n        <section>\n          <div className=\"flex flex-col text-white btn-login rounded-3xl px-7 py-4 mb-5 h-[75px] w-[750px]\">\n            <h1 className=\"flex flex-row items-center gap-2 font-bold text-3xl\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"#009946\"\n                class=\"w-10 h-10\">\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M18.685 19.097A9.723 9.723 0 0021.75 12c0-5.385-4.365-9.75-9.75-9.75S2.25 6.615 2.25 12a9.723 9.723 0 003.065 7.097A9.716 9.716 0 0012 21.75a9.716 9.716 0 006.685-2.653zm-12.54-1.285A7.486 7.486 0 0112 15a7.486 7.486 0 015.855 2.812A8.224 8.224 0 0112 20.25a8.224 8.224 0 01-5.855-2.438zM15.75 9a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z\"\n                  clip-rule=\"evenodd\"\n                />\n              </svg>\n              Profile\n            </h1>\n          </div>\n\n          <div className=\"flex items-center justify-center\">\n            <img\n              src={`http://localhost:5000/${user && user.image}`}\n              className=\" rounded-full w-[200px] h-[200px]\"\n            />\n          </div>\n\n          {/* Profile Detail */}\n\n          <h2 className=\"font-bold text-2xl underline-title w-[300px] my-5\">\n            Edit Profile\n          </h2>\n\n          <form onSubmit={updateUser}>\n            <div className=\"flex flex-col gap-5 px-5 pb-10\">\n              {/* Image */}\n\n              <div>\n                <label className=\"label  font-bold\">Photo Profile</label>\n                <input\n                  className=\"py-2 [width:300px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"file\"\n                  accept=\"image/*\" // Accept only image files\n                  onChange={(e) => setImage(e.target.files[0])}\n                />\n              </div>\n\n              {/* Name */}\n              <div>\n                <label className=\"label font-bold\">Name</label>\n                <input\n                  className=\"text-slate-500 py-2 [width:650px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"text\"\n                  placeholder={user && user.name}\n                  value={name}\n                  onChange={(event) => setName(event.target.value)}\n                />\n              </div>\n\n              {/* Email */}\n              <div>\n                <label className=\"label font-bold\">Email</label>\n                <input\n                  className=\"text-slate-500 py-2 [width:650px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"text\"\n                  placeholder={user && user.email}\n                  value={email}\n                  onChange={(event) => setEmail(event.target.value)}\n                />\n              </div>\n\n              {/* Age */}\n              <div>\n                <label className=\"label font-bold\">Age</label>\n                <input\n                  className=\"text-slate-500 py-2 [width:650px] font-semibold px-3 rounded-lg border bg-white border-[#B7B6B8]\"\n                  type=\"text\"\n                  placeholder={user && user.age}\n                  value={age}\n                  onChange={(event) => setAge(event.target.value)}\n                />\n              </div>\n            </div>\n\n            <button className=\"flex flex-row gap-2 btn-register hover:bg-green-500 px-8 py-4 rounded-3xl font-bold text-white\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                fill=\"currentColor\"\n                class=\"w-6 h-6\">\n                <path d=\"M21.731 2.269a2.625 2.625 0 00-3.712 0l-1.157 1.157 3.712 3.712 1.157-1.157a2.625 2.625 0 000-3.712zM19.513 8.199l-3.712-3.712-8.4 8.4a5.25 5.25 0 00-1.32 2.214l-.8 2.685a.75.75 0 00.933.933l2.685-.8a5.25 5.25 0 002.214-1.32l8.4-8.4z\" />\n                <path d=\"M5.25 5.25a3 3 0 00-3 3v10.5a3 3 0 003 3h10.5a3 3 0 003-3V13.5a.75.75 0 00-1.5 0v5.25a1.5 1.5 0 01-1.5 1.5H5.25a1.5 1.5 0 01-1.5-1.5V8.25a1.5 1.5 0 011.5-1.5h5.25a.75.75 0 000-1.5H5.25z\" />\n              </svg>\n              CONFIRM\n            </button>\n          </form>\n        </section>\n        <RightDetail />\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\LearningInstruction.jsx",["373","374","375"],[],"import Navbar from \"../../components/NavbarLogin\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { getMe } from \"../../auth/authSlice\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\n\nexport default function LearningInstruction() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { user } = useSelector((state) => state.auth);\n\n  // Replace 'userRoles' with the actual roles of the logged-in user from your application\n  const { isError } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    dispatch(getMe());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isError) {\n      navigate(\"/login\");\n    }\n  }, [isError, navigate]);\n\n  useEffect(() => {\n    AOS.init();\n  }, []);\n\n  const [learn, setLearn] = useState([]);\n\n  useEffect(() => {\n    getLearns();\n  }, []);\n\n  const getLearns = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/learn`);\n      if (Array.isArray(response.data)) {\n        setLearn(response.data);\n      } else {\n        setLearn([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching learns:\", error);\n    }\n  };\n\n  const gotoLesson = async () => {\n    let path = `/learn-task/${user.lessons[0].uuid}`;\n    navigate(path);\n  };\n\n  const getSmallestLearnNumber = () => {\n    const smallestNumber = Math.min(\n      ...user.learns.map((learn) => parseInt(learn.number, 10))\n    );\n    return smallestNumber;\n  };\n\n  const getLargestLearnNumber = () => {\n    const largestNumber = Math.max(\n      ...user.learns.map((learn) => parseInt(learn.number, 10))\n    );\n    return largestNumber;\n  };\n\n  const minimumProgress =\n    user.progresslearn.uuid === user.learns[0].uuid\n      ? getSmallestLearnNumber()\n      : 0;\n\n  const maximumProgress =\n    user.progresslearn.uuid === user.learns[0].uuid\n      ? getLargestLearnNumber()\n      : 10;\n\n  const postNextLearn = async () => {\n    const url = `http://localhost:5000/level/nextlearn/${user.uuid}`;\n\n    try {\n      const response = await axios.post(url);\n      if (response.data.message === \"Next learn session retrieved.\") {\n        let path = `/migrate-learn`;\n        navigate(path);\n      } else if (\n        response.data.message ===\n        \"No more sessions found for the current level.\"\n      ) {\n        // Navigate to the lesson page\n        gotoLesson();\n      }\n    } catch (error) {\n      console.error(\"Error getting next learn session:\", error);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"min-h-screen\">\n        <Navbar />\n        {/* Home Button */}\n        <div className=\"flex items-center mx-10 mt-5\">\n          <a\n            data-tip=\"Back\"\n            href=\"/learning\"\n            className=\"flex flex-row items-center pointer-events-none group tooltip tooltip-right\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              strokeWidth=\"2\"\n              stroke=\"#B7B6B8\"\n              className=\"w-12 h-12 border-[3px] border-[#B7B6B8] rounded-full mr-2 hover:border-[#205AFC] pointer-events-auto group-hover:stroke-[#205AFC]\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                d=\"M15.75 19.5L8.25 12l7.5-7.5\"\n              />\n            </svg>\n          </a>\n        </div>\n\n        <div\n          data-aos=\"fade-down\"\n          data-aos-offset=\"200\"\n          data-aos-delay=\"125\"\n          data-aos-duration=\"1000\"\n          className=\"flex flex-col items-center gap-2\">\n          <div className=\"flex flex-row font-semibold items-center gap-2 mb-5\">\n            <p>{minimumProgress}</p>\n            <progress\n              className=\"progress progress-primary w-[500px] h-4\"\n              value={user.learns[0].number}\n              max={maximumProgress}\n            />\n            <p>{maximumProgress}</p>\n          </div>\n          <div className=\"text-black\">\n            <h1 className=\" font-bold text-3xl\">Pembelajaran</h1>\n            <h2 className=\"font-semibold text-xl\">{user.learns[0].name}</h2>\n          </div>\n          <img\n            data-aos=\"fade-down\"\n            data-aos-duration=\"500\"\n            src={`http://localhost:5000/${user.learns[0].image}`}\n            className=\"w-[250px] rounded-2xl shadow-lg\"\n          />\n          <p className=\" text-justify w-[500px] py-5\">\n            {user.learns[0].description}\n          </p>\n          <div className=\"flex justify-end w-[500px]\">\n            <button\n              onClick={\n                parseInt(user.learns[0].number) === maximumProgress\n                  ? gotoLesson\n                  : postNextLearn\n              }\n              className=\"flex justify-center items-center btn-register w-[100px] h-[50px] rounded-3xl text-white text-xl font-bold\">\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\LearningPage.jsx",["376","377","378"],[],"import Navbar from \"../../components/NavbarLogin\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { getMe } from \"../../auth/authSlice\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\n\nexport default function LearningPage() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { user } = useSelector((state) => state.auth);\n\n  // Replace 'userRoles' with the actual roles of the logged-in user from your application\n  const { isError } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    dispatch(getMe());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isError) {\n      navigate(\"/login\");\n    }\n  }, [isError, navigate]);\n\n  useEffect(() => {\n    AOS.init();\n  }, []);\n\n  const [lesson, setLesson] = useState([]);\n\n  useEffect(() => {\n    getLessons();\n  }, []);\n\n  const getLessons = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/lesson`);\n      if (Array.isArray(response.data)) {\n        setLesson(response.data);\n      } else {\n        setLesson([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching lessons:\", error);\n    }\n  };\n\n  const postNextLesson = async () => {\n    const url = `http://localhost:5000/level/nextlesson/${user.uuid}`;\n\n    try {\n      const response = await axios.post(url);\n      if (response.data.message === \"Next lesson session retrieved.\") {\n        if (parseInt(user.lessons[0].number) === maximumProgress) {\n          let path = `/learning`;\n          navigate(path);\n        } else {\n          let path = `/migrate-lesson`;\n          navigate(path);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error getting next lesson session:\", error);\n    }\n  };\n\n  const validateAnswer = async (selectedAnswer) => {\n    // Assuming the user has a current lesson object available\n    const userGuards = user.guard;\n\n    if (selectedAnswer === user.lessons[0].right_answer || userGuards > 1) {\n      const userPoints = parseInt(user.point, 10);\n      const userScores = parseInt(user.score, 10);\n\n      try {\n        // Update the user's points and scores\n        const updatedUser = await axios.patch(\n          `http://localhost:5000/user/${user.uuid}`,\n          {\n            point: userPoints + 50,\n            score: userScores + 50,\n          }\n        );\n\n        if (userGuards > 0) {\n          // If a guard was used, decrement the number of guards\n          await axios.patch(`http://localhost:5000/user/${user.uuid}`, {\n            guard: userGuards - 1,\n          });\n        }\n\n        postNextLesson(); // Proceed to the next lesson\n\n        if (updatedUser.data.message === \"User updated successfully\") {\n          postNextLesson(); // Proceed to the next lesson\n        } else {\n          console.error(\"Error updating user's points and scores\");\n        }\n      } catch (error) {\n        console.error(\"Error updating user's points and scores:\", error);\n      }\n    } else {\n      postNextLesson(); // Proceed to the next lesson\n    }\n  };\n\n  const getSmallestLessonNumber = () => {\n    const smallestNumber = Math.min(\n      ...user.lessons.map((learn) => parseInt(learn.number, 10))\n    );\n    return smallestNumber;\n  };\n\n  const getLargestLessonNumber = () => {\n    const largestNumber = Math.max(\n      ...user.lessons.map((learn) => parseInt(learn.number, 10))\n    );\n    return largestNumber;\n  };\n\n  const minimumProgress =\n    user.progresslearn.uuid === user.learns[0].uuid\n      ? getSmallestLessonNumber()\n      : 0;\n\n  const maximumProgress =\n    user.progresslearn.uuid === user.learns[0].uuid\n      ? getLargestLessonNumber()\n      : 10;\n\n  const gotoLearn = async () => {\n    let path = `/learn-instruction/${user.learns[0].uuid}`;\n    navigate(path);\n  };\n\n  return (\n    <>\n      <div className=\"min-h-screen\">\n        <Navbar />\n        {/* Home Button */}\n        <div className=\"flex items-center mx-10 mt-5\">\n          <button\n            data-tip=\"Back\"\n            onClick={gotoLearn}\n            className=\"flex flex-row items-center pointer-events-none group tooltip tooltip-right\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              strokeWidth=\"2\"\n              stroke=\"#B7B6B8\"\n              className=\"w-12 h-12 border-[3px] border-[#B7B6B8] rounded-full mr-2 hover:border-[#205AFC] pointer-events-auto group-hover:stroke-[#205AFC]\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                d=\"M15.75 19.5L8.25 12l7.5-7.5\"\n              />\n            </svg>\n          </button>\n        </div>\n\n        <div\n          data-aos=\"fade-down\"\n          data-aos-offset=\"200\"\n          data-aos-delay=\"125\"\n          data-aos-duration=\"1000\"\n          className=\"flex flex-col items-center gap-2\">\n          <div className=\"flex flex-row font-semibold items-center gap-2 mb-5\">\n            <p>{minimumProgress}</p>\n            <progress\n              className=\"progress progress-primary w-[500px] h-4\"\n              value={user.lessons[0].number}\n              max={maximumProgress}\n            />\n            <p>{maximumProgress}</p>\n          </div>\n          <div className=\"text-black\">\n            <h1 className=\" font-bold text-3xl\">Tugas</h1>\n            <h2 className=\"font-semibold text-xl\">{user.lessons[0].name}</h2>\n          </div>\n          <img\n            data-aos=\"fade-down\"\n            data-aos-duration=\"500\"\n            src={`http://localhost:5000/${user.lessons[0].image}`}\n            className=\"w-[250px] rounded-2xl shadow-lg\"\n          />\n          <p className=\" text-justify w-[500px] py-5\">\n            {user.lessons[0].description}\n          </p>\n          <div className=\"flex flex-row gap-3 justify-center w-[500px]\">\n            <button\n              className=\"flex justify-center items-center btn-login px-6 py-3 rounded-3xl text-white text-xl font-bold\"\n              onClick={() => validateAnswer(user.lessons[0].question_1)}>\n              {user.lessons[0].question_1}\n            </button>\n            <button\n              className=\"flex justify-center items-center btn-login px-6 py-3 rounded-3xl text-white text-xl font-bold\"\n              onClick={() => validateAnswer(user.lessons[0].question_2)}>\n              {user.lessons[0].question_2}\n            </button>\n            <button\n              className=\"flex justify-center items-center btn-login px-6 py-3 rounded-3xl text-white text-xl font-bold\"\n              onClick={() => validateAnswer(user.lessons[0].question_3)}>\n              {user.lessons[0].question_3}\n            </button>\n            <button\n              className=\"flex justify-center items-center btn-login px-6 py-3 rounded-3xl text-white text-xl font-bold\"\n              onClick={() => validateAnswer(user.lessons[0].question_4)}>\n              {user.lessons[0].question_4}\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\components\\ChartsUser.jsx",[],[],"C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\MigrateLearn.jsx",["379","380","381","382","383","384","385"],[],"import Navbar from \"../../components/NavbarLogin\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { getMe } from \"../../auth/authSlice\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\n\r\nexport default function LearningInstruction() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  // Replace 'userRoles' with the actual roles of the logged-in user from your application\r\n  const { isError } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(getMe());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (isError) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [isError, navigate]);\r\n\r\n  useEffect(() => {\r\n    AOS.init();\r\n  }, []);\r\n\r\n  const [learn, setLearn] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getLearns();\r\n    let path = `/learn-instruction/${user.learns[0].uuid}`;\r\n    navigate(path);\r\n  }, []);\r\n\r\n  const getLearns = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/learn`);\r\n      if (Array.isArray(response.data)) {\r\n        setLearn(response.data);\r\n      } else {\r\n        setLearn([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching learns:\", error);\r\n    }\r\n  };\r\n\r\n  const gotoLesson = async () => {\r\n    let path = `/learn-task/${user.lessons[0].uuid}`;\r\n    navigate(path);\r\n  };\r\n\r\n  // Assuming user.learns[0].number represents the current progress level\r\n  const minimumProgress =\r\n    user.progresslearn.uuid === user.learns[0].uuid\r\n      ? user.progresslearn.minimum\r\n      : 0;\r\n\r\n  const maximumProgress =\r\n    user.progresslearn.uuid === user.learns[0].uuid\r\n      ? user.progresslearn.maximum\r\n      : 10; // Assuming the maximum level is 10 as a default value\r\n\r\n  const postNextLearn = async () => {\r\n    const url = `http://localhost:5000/level/nextlearn/${user.uuid}`;\r\n\r\n    try {\r\n      const response = await axios.post(url);\r\n      if (response.data.message === \"Next learn session retrieved.\") {\r\n        getUpdatedUserInformation(); // Fetch the updated user information\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error getting next learn session:\", error);\r\n    }\r\n  };\r\n\r\n  const getUpdatedUserInformation = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/auth/me`);\r\n      if (response.data) {\r\n        const updatedUser = response.data;\r\n        if (updatedUser.progresslearn) {\r\n          navigate(`/learn-instruction/${updatedUser.progresslearn}`);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching updated user information:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"min-h-screen\">\r\n        <Navbar />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\MigrateLesson.jsx",["386","387","388"],[],"import Navbar from \"../../components/NavbarLogin\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { getMe } from \"../../auth/authSlice\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\n\r\nexport default function LearningInstruction() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  // Replace 'userRoles' with the actual roles of the logged-in user from your application\r\n  const { isError } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(getMe());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (isError) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [isError, navigate]);\r\n\r\n  useEffect(() => {\r\n    AOS.init();\r\n  }, []);\r\n\r\n  const [learn, setLearn] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getLearns();\r\n    let path = `/learn-task/${user.lessons[0].uuid}`;\r\n    navigate(path);\r\n  }, []);\r\n\r\n  const getLearns = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/learn`);\r\n      if (Array.isArray(response.data)) {\r\n        setLearn(response.data);\r\n      } else {\r\n        setLearn([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching learns:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"min-h-screen\">\r\n        <Navbar />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\LearningTemp.jsx",["389","390","391","392"],[],"C:\\Users\\Maste\\Documents\\Codes\\Websites\\web-isyaratlingo\\frontend\\src\\pages\\learning\\LessonTemp.jsx",["393","394","395","396","397"],[],{"ruleId":"398","severity":1,"message":"399","line":3,"column":23,"nodeType":"400","messageId":"401","endLine":3,"endColumn":27},{"ruleId":"398","severity":1,"message":"402","line":13,"column":9,"nodeType":"400","messageId":"401","endLine":13,"endColumn":16},{"ruleId":"403","severity":1,"message":"404","line":197,"column":9,"nodeType":"405","endLine":202,"endColumn":46},{"ruleId":"398","severity":1,"message":"406","line":4,"column":8,"nodeType":"400","messageId":"401","endLine":4,"endColumn":12},{"ruleId":"407","severity":1,"message":"408","line":12,"column":1,"nodeType":"409","endLine":192,"endColumn":2},{"ruleId":"410","severity":1,"message":"411","line":48,"column":13,"nodeType":"405","endLine":52,"endColumn":15},{"ruleId":"410","severity":1,"message":"411","line":124,"column":13,"nodeType":"405","endLine":128,"endColumn":15},{"ruleId":"410","severity":1,"message":"411","line":149,"column":15,"nodeType":"405","endLine":153,"endColumn":17},{"ruleId":"403","severity":1,"message":"404","line":27,"column":13,"nodeType":"405","endLine":27,"endColumn":16,"suppressions":"412"},{"ruleId":"398","severity":1,"message":"399","line":3,"column":23,"nodeType":"400","messageId":"401","endLine":3,"endColumn":27},{"ruleId":"403","severity":1,"message":"404","line":199,"column":9,"nodeType":"405","endLine":204,"endColumn":46},{"ruleId":"398","severity":1,"message":"413","line":1,"column":31,"nodeType":"400","messageId":"401","endLine":1,"endColumn":37},{"ruleId":"398","severity":1,"message":"414","line":34,"column":9,"nodeType":"400","messageId":"401","endLine":34,"endColumn":16},{"ruleId":"398","severity":1,"message":"415","line":32,"column":10,"nodeType":"400","messageId":"401","endLine":32,"endColumn":17},{"ruleId":"416","severity":2,"message":"417","line":10,"column":25,"nodeType":"400","endLine":10,"endColumn":33},{"ruleId":"416","severity":2,"message":"417","line":11,"column":27,"nodeType":"400","endLine":11,"endColumn":35},{"ruleId":"416","severity":2,"message":"417","line":12,"column":29,"nodeType":"400","endLine":12,"endColumn":37},{"ruleId":"416","severity":2,"message":"417","line":13,"column":29,"nodeType":"400","endLine":13,"endColumn":37},{"ruleId":"416","severity":2,"message":"417","line":14,"column":25,"nodeType":"400","endLine":14,"endColumn":33},{"ruleId":"416","severity":2,"message":"417","line":15,"column":29,"nodeType":"400","endLine":15,"endColumn":37},{"ruleId":"416","severity":2,"message":"417","line":16,"column":35,"nodeType":"400","endLine":16,"endColumn":43},{"ruleId":"416","severity":2,"message":"417","line":17,"column":49,"nodeType":"400","endLine":17,"endColumn":57},{"ruleId":"416","severity":2,"message":"417","line":18,"column":29,"nodeType":"400","endLine":18,"endColumn":37},{"ruleId":"416","severity":2,"message":"417","line":19,"column":29,"nodeType":"400","endLine":19,"endColumn":37},{"ruleId":"416","severity":2,"message":"417","line":20,"column":45,"nodeType":"400","endLine":20,"endColumn":53},{"ruleId":"416","severity":2,"message":"417","line":21,"column":29,"nodeType":"400","endLine":21,"endColumn":37},{"ruleId":"416","severity":2,"message":"417","line":22,"column":37,"nodeType":"400","endLine":22,"endColumn":45},{"ruleId":"416","severity":2,"message":"417","line":23,"column":37,"nodeType":"400","endLine":23,"endColumn":45},{"ruleId":"416","severity":2,"message":"418","line":24,"column":20,"nodeType":"400","endLine":24,"endColumn":29},{"ruleId":"416","severity":2,"message":"419","line":25,"column":20,"nodeType":"400","endLine":25,"endColumn":31},{"ruleId":"416","severity":2,"message":"420","line":85,"column":3,"nodeType":"400","endLine":85,"endColumn":12},{"ruleId":"421","severity":1,"message":"422","line":87,"column":6,"nodeType":"423","endLine":87,"endColumn":8,"suggestions":"424"},{"ruleId":"416","severity":2,"message":"417","line":105,"column":49,"nodeType":"400","endLine":105,"endColumn":57},{"ruleId":"416","severity":2,"message":"425","line":10,"column":27,"nodeType":"400","endLine":10,"endColumn":35},{"ruleId":"416","severity":2,"message":"425","line":11,"column":29,"nodeType":"400","endLine":11,"endColumn":37},{"ruleId":"416","severity":2,"message":"425","line":12,"column":29,"nodeType":"400","endLine":12,"endColumn":37},{"ruleId":"416","severity":2,"message":"425","line":13,"column":25,"nodeType":"400","endLine":13,"endColumn":33},{"ruleId":"416","severity":2,"message":"425","line":14,"column":29,"nodeType":"400","endLine":14,"endColumn":37},{"ruleId":"416","severity":2,"message":"425","line":15,"column":35,"nodeType":"400","endLine":15,"endColumn":43},{"ruleId":"416","severity":2,"message":"425","line":16,"column":49,"nodeType":"400","endLine":16,"endColumn":57},{"ruleId":"416","severity":2,"message":"425","line":17,"column":29,"nodeType":"400","endLine":17,"endColumn":37},{"ruleId":"416","severity":2,"message":"425","line":18,"column":29,"nodeType":"400","endLine":18,"endColumn":37},{"ruleId":"398","severity":1,"message":"426","line":19,"column":25,"nodeType":"400","messageId":"401","endLine":19,"endColumn":41},{"ruleId":"416","severity":2,"message":"425","line":19,"column":45,"nodeType":"400","endLine":19,"endColumn":53},{"ruleId":"416","severity":2,"message":"425","line":20,"column":29,"nodeType":"400","endLine":20,"endColumn":37},{"ruleId":"416","severity":2,"message":"427","line":21,"column":20,"nodeType":"400","endLine":21,"endColumn":31},{"ruleId":"416","severity":2,"message":"425","line":57,"column":49,"nodeType":"400","endLine":57,"endColumn":57},{"ruleId":"407","severity":1,"message":"408","line":4,"column":1,"nodeType":"409","endLine":16,"endColumn":2},{"ruleId":"407","severity":1,"message":"408","line":7,"column":1,"nodeType":"409","endLine":88,"endColumn":2},{"ruleId":"403","severity":1,"message":"404","line":18,"column":11,"nodeType":"405","endLine":18,"endColumn":14},{"ruleId":"428","severity":1,"message":"429","line":11,"column":9,"nodeType":"405","endLine":11,"endColumn":44},{"ruleId":"403","severity":1,"message":"404","line":279,"column":13,"nodeType":"405","endLine":279,"endColumn":57},{"ruleId":"416","severity":2,"message":"430","line":7,"column":29,"nodeType":"400","endLine":7,"endColumn":37},{"ruleId":"416","severity":2,"message":"430","line":8,"column":41,"nodeType":"400","endLine":8,"endColumn":49},{"ruleId":"416","severity":2,"message":"430","line":9,"column":26,"nodeType":"400","endLine":9,"endColumn":34},{"ruleId":"416","severity":2,"message":"430","line":10,"column":39,"nodeType":"400","endLine":10,"endColumn":47},{"ruleId":"416","severity":2,"message":"431","line":12,"column":3,"nodeType":"400","endLine":12,"endColumn":12},{"ruleId":"398","severity":1,"message":"432","line":3,"column":16,"nodeType":"400","messageId":"401","endLine":3,"endColumn":27},{"ruleId":"416","severity":2,"message":"433","line":7,"column":31,"nodeType":"400","endLine":7,"endColumn":39},{"ruleId":"416","severity":2,"message":"433","line":8,"column":41,"nodeType":"400","endLine":8,"endColumn":49},{"ruleId":"416","severity":2,"message":"433","line":9,"column":26,"nodeType":"400","endLine":9,"endColumn":34},{"ruleId":"416","severity":2,"message":"433","line":10,"column":39,"nodeType":"400","endLine":10,"endColumn":47},{"ruleId":"416","severity":2,"message":"434","line":12,"column":3,"nodeType":"400","endLine":12,"endColumn":12},{"ruleId":"398","severity":1,"message":"432","line":3,"column":16,"nodeType":"400","messageId":"401","endLine":3,"endColumn":27},{"ruleId":"416","severity":2,"message":"435","line":7,"column":29,"nodeType":"400","endLine":7,"endColumn":37},{"ruleId":"416","severity":2,"message":"435","line":8,"column":41,"nodeType":"400","endLine":8,"endColumn":49},{"ruleId":"416","severity":2,"message":"435","line":9,"column":26,"nodeType":"400","endLine":9,"endColumn":34},{"ruleId":"416","severity":2,"message":"435","line":10,"column":39,"nodeType":"400","endLine":10,"endColumn":47},{"ruleId":"416","severity":2,"message":"436","line":12,"column":3,"nodeType":"400","endLine":12,"endColumn":12},{"ruleId":"398","severity":1,"message":"437","line":21,"column":9,"nodeType":"400","messageId":"401","endLine":21,"endColumn":19},{"ruleId":"416","severity":2,"message":"438","line":21,"column":27,"nodeType":"400","endLine":21,"endColumn":35},{"ruleId":"416","severity":2,"message":"438","line":22,"column":29,"nodeType":"400","endLine":22,"endColumn":37},{"ruleId":"416","severity":2,"message":"438","line":23,"column":39,"nodeType":"400","endLine":23,"endColumn":47},{"ruleId":"416","severity":2,"message":"438","line":24,"column":25,"nodeType":"400","endLine":24,"endColumn":33},{"ruleId":"416","severity":2,"message":"438","line":25,"column":37,"nodeType":"400","endLine":25,"endColumn":45},{"ruleId":"416","severity":2,"message":"438","line":26,"column":37,"nodeType":"400","endLine":26,"endColumn":45},{"ruleId":"416","severity":2,"message":"439","line":27,"column":20,"nodeType":"400","endLine":27,"endColumn":29},{"ruleId":"416","severity":2,"message":"440","line":28,"column":20,"nodeType":"400","endLine":28,"endColumn":31},{"ruleId":"416","severity":2,"message":"441","line":85,"column":3,"nodeType":"400","endLine":85,"endColumn":12},{"ruleId":"421","severity":1,"message":"442","line":87,"column":6,"nodeType":"423","endLine":87,"endColumn":8,"suggestions":"443"},{"ruleId":"416","severity":2,"message":"444","line":21,"column":27,"nodeType":"400","endLine":21,"endColumn":35},{"ruleId":"416","severity":2,"message":"444","line":22,"column":29,"nodeType":"400","endLine":22,"endColumn":37},{"ruleId":"416","severity":2,"message":"444","line":23,"column":39,"nodeType":"400","endLine":23,"endColumn":47},{"ruleId":"416","severity":2,"message":"444","line":24,"column":25,"nodeType":"400","endLine":24,"endColumn":33},{"ruleId":"416","severity":2,"message":"445","line":25,"column":20,"nodeType":"400","endLine":25,"endColumn":31},{"ruleId":"416","severity":2,"message":"446","line":7,"column":27,"nodeType":"400","endLine":7,"endColumn":35},{"ruleId":"416","severity":2,"message":"446","line":8,"column":29,"nodeType":"400","endLine":8,"endColumn":37},{"ruleId":"416","severity":2,"message":"446","line":9,"column":29,"nodeType":"400","endLine":9,"endColumn":37},{"ruleId":"416","severity":2,"message":"446","line":10,"column":41,"nodeType":"400","endLine":10,"endColumn":49},{"ruleId":"416","severity":2,"message":"446","line":11,"column":37,"nodeType":"400","endLine":11,"endColumn":45},{"ruleId":"416","severity":2,"message":"446","line":12,"column":37,"nodeType":"400","endLine":12,"endColumn":45},{"ruleId":"416","severity":2,"message":"447","line":13,"column":20,"nodeType":"400","endLine":13,"endColumn":29},{"ruleId":"416","severity":2,"message":"448","line":14,"column":20,"nodeType":"400","endLine":14,"endColumn":31},{"ruleId":"398","severity":1,"message":"449","line":16,"column":9,"nodeType":"400","messageId":"401","endLine":16,"endColumn":16},{"ruleId":"416","severity":2,"message":"450","line":73,"column":3,"nodeType":"400","endLine":73,"endColumn":12},{"ruleId":"421","severity":1,"message":"451","line":75,"column":6,"nodeType":"423","endLine":75,"endColumn":8,"suggestions":"452"},{"ruleId":"416","severity":2,"message":"453","line":7,"column":27,"nodeType":"400","endLine":7,"endColumn":35},{"ruleId":"416","severity":2,"message":"453","line":8,"column":29,"nodeType":"400","endLine":8,"endColumn":37},{"ruleId":"416","severity":2,"message":"453","line":9,"column":29,"nodeType":"400","endLine":9,"endColumn":37},{"ruleId":"416","severity":2,"message":"453","line":10,"column":41,"nodeType":"400","endLine":10,"endColumn":49},{"ruleId":"416","severity":2,"message":"454","line":11,"column":20,"nodeType":"400","endLine":11,"endColumn":31},{"ruleId":"403","severity":1,"message":"404","line":56,"column":11,"nodeType":"405","endLine":61,"endColumn":58},{"ruleId":"398","severity":1,"message":"455","line":5,"column":10,"nodeType":"400","messageId":"401","endLine":5,"endColumn":18},{"ruleId":"398","severity":1,"message":"456","line":5,"column":20,"nodeType":"400","messageId":"401","endLine":5,"endColumn":29},{"ruleId":"398","severity":1,"message":"457","line":7,"column":8,"nodeType":"400","messageId":"401","endLine":7,"endColumn":13},{"ruleId":"428","severity":1,"message":"429","line":58,"column":13,"nodeType":"405","endLine":61,"endColumn":15},{"ruleId":"421","severity":1,"message":"458","line":231,"column":6,"nodeType":"423","endLine":231,"endColumn":24,"suggestions":"459"},{"ruleId":"403","severity":1,"message":"404","line":287,"column":19,"nodeType":"405","endLine":290,"endColumn":25},{"ruleId":"460","severity":1,"message":"461","line":299,"column":11,"nodeType":"405","endLine":299,"endColumn":129},{"ruleId":"403","severity":1,"message":"404","line":29,"column":9,"nodeType":"405","endLine":29,"endColumn":57},{"ruleId":"428","severity":1,"message":"429","line":30,"column":11,"nodeType":"405","endLine":33,"endColumn":13},{"ruleId":"403","severity":1,"message":"404","line":35,"column":11,"nodeType":"405","endLine":35,"endColumn":14},{"ruleId":"403","severity":1,"message":"404","line":37,"column":9,"nodeType":"405","endLine":37,"endColumn":72},{"ruleId":"403","severity":1,"message":"404","line":50,"column":11,"nodeType":"405","endLine":50,"endColumn":14},{"ruleId":"403","severity":1,"message":"404","line":53,"column":9,"nodeType":"405","endLine":53,"endColumn":72},{"ruleId":"403","severity":1,"message":"404","line":66,"column":11,"nodeType":"405","endLine":66,"endColumn":14},{"ruleId":"403","severity":1,"message":"404","line":88,"column":9,"nodeType":"405","endLine":88,"endColumn":79},{"ruleId":"403","severity":1,"message":"404","line":101,"column":11,"nodeType":"405","endLine":101,"endColumn":36},{"ruleId":"403","severity":1,"message":"404","line":103,"column":9,"nodeType":"405","endLine":103,"endColumn":59},{"ruleId":"398","severity":1,"message":"462","line":10,"column":11,"nodeType":"400","messageId":"401","endLine":10,"endColumn":15},{"ruleId":"428","severity":1,"message":"429","line":83,"column":13,"nodeType":"405","endLine":86,"endColumn":15},{"ruleId":"398","severity":1,"message":"399","line":3,"column":23,"nodeType":"400","messageId":"401","endLine":3,"endColumn":27},{"ruleId":"398","severity":1,"message":"463","line":32,"column":10,"nodeType":"400","messageId":"401","endLine":32,"endColumn":15},{"ruleId":"428","severity":1,"message":"429","line":145,"column":11,"nodeType":"405","endLine":150,"endColumn":13},{"ruleId":"398","severity":1,"message":"399","line":4,"column":23,"nodeType":"400","messageId":"401","endLine":4,"endColumn":27},{"ruleId":"398","severity":1,"message":"464","line":32,"column":10,"nodeType":"400","messageId":"401","endLine":32,"endColumn":16},{"ruleId":"428","severity":1,"message":"429","line":189,"column":11,"nodeType":"405","endLine":194,"endColumn":13},{"ruleId":"398","severity":1,"message":"399","line":3,"column":23,"nodeType":"400","messageId":"401","endLine":3,"endColumn":27},{"ruleId":"398","severity":1,"message":"463","line":32,"column":10,"nodeType":"400","messageId":"401","endLine":32,"endColumn":15},{"ruleId":"421","severity":1,"message":"465","line":38,"column":6,"nodeType":"423","endLine":38,"endColumn":8,"suggestions":"466"},{"ruleId":"398","severity":1,"message":"467","line":53,"column":9,"nodeType":"400","messageId":"401","endLine":53,"endColumn":19},{"ruleId":"398","severity":1,"message":"468","line":59,"column":9,"nodeType":"400","messageId":"401","endLine":59,"endColumn":24},{"ruleId":"398","severity":1,"message":"469","line":64,"column":9,"nodeType":"400","messageId":"401","endLine":64,"endColumn":24},{"ruleId":"398","severity":1,"message":"470","line":69,"column":9,"nodeType":"400","messageId":"401","endLine":69,"endColumn":22},{"ruleId":"398","severity":1,"message":"399","line":3,"column":23,"nodeType":"400","messageId":"401","endLine":3,"endColumn":27},{"ruleId":"398","severity":1,"message":"463","line":32,"column":10,"nodeType":"400","messageId":"401","endLine":32,"endColumn":15},{"ruleId":"421","severity":1,"message":"471","line":38,"column":6,"nodeType":"423","endLine":38,"endColumn":8,"suggestions":"472"},{"ruleId":"398","severity":1,"message":"399","line":3,"column":23,"nodeType":"400","messageId":"401","endLine":3,"endColumn":27},{"ruleId":"398","severity":1,"message":"463","line":32,"column":10,"nodeType":"400","messageId":"401","endLine":32,"endColumn":15},{"ruleId":"398","severity":1,"message":"470","line":57,"column":9,"nodeType":"400","messageId":"401","endLine":57,"endColumn":22},{"ruleId":"428","severity":1,"message":"429","line":122,"column":11,"nodeType":"405","endLine":127,"endColumn":13},{"ruleId":"398","severity":1,"message":"399","line":4,"column":23,"nodeType":"400","messageId":"401","endLine":4,"endColumn":27},{"ruleId":"398","severity":1,"message":"464","line":32,"column":10,"nodeType":"400","messageId":"401","endLine":32,"endColumn":16},{"ruleId":"473","severity":2,"message":"474","line":57,"column":50,"nodeType":"400","messageId":"475","endLine":57,"endColumn":65},{"ruleId":"398","severity":1,"message":"476","line":70,"column":9,"nodeType":"400","messageId":"401","endLine":70,"endColumn":23},{"ruleId":"428","severity":1,"message":"429","line":160,"column":11,"nodeType":"405","endLine":165,"endColumn":13},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Logo' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["477"],"'useRef' is defined but never used.","'addItem' is assigned a value but never used.","'clicked' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"editUser\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useParams\" is called in function \"editUser\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useNavigate\" is called in function \"editUser\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useEffect\" is called in function \"editUser\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserById'. Either include it or remove the dependency array.","ArrayExpression",["478"],"React Hook \"useState\" is called in function \"addUser\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","'setProgressLevel' is assigned a value but never used.","React Hook \"useNavigate\" is called in function \"addUser\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook \"useState\" is called in function \"listUsers\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useEffect\" is called in function \"listUsers\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","'useNavigate' is defined but never used.","React Hook \"useState\" is called in function \"listDictionary\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useEffect\" is called in function \"listDictionary\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useState\" is called in function \"listShop\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useEffect\" is called in function \"listShop\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","'deleteItem' is assigned a value but never used.","React Hook \"useState\" is called in function \"editDictionary\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useParams\" is called in function \"editDictionary\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useNavigate\" is called in function \"editDictionary\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useEffect\" is called in function \"editDictionary\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook useEffect has a missing dependency: 'getVocabById'. Either include it or remove the dependency array.",["479"],"React Hook \"useState\" is called in function \"addDictionary\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useNavigate\" is called in function \"addDictionary\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useState\" is called in function \"editShop\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useParams\" is called in function \"editShop\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useNavigate\" is called in function \"editShop\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","'baseUrl' is assigned a value but never used.","React Hook \"useEffect\" is called in function \"editShop\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook useEffect has a missing dependency: 'getItemById'. Either include it or remove the dependency array.",["480"],"React Hook \"useState\" is called in function \"addShop\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useNavigate\" is called in function \"addShop\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'getVocabs'. Either include it or remove the dependency array.",["481"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'user' is assigned a value but never used.","'learn' is assigned a value but never used.","'lesson' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'navigate' and 'user.learns'. Either include them or remove the dependency array.",["482"],"'gotoLesson' is assigned a value but never used.","'minimumProgress' is assigned a value but never used.","'maximumProgress' is assigned a value but never used.","'postNextLearn' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'navigate' and 'user.lessons'. Either include them or remove the dependency array.",["483"],"no-undef","'maximumProgress' is not defined.","undef","'validateAnswer' is assigned a value but never used.",{"kind":"484","justification":"485"},{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"desc":"490","fix":"491"},{"desc":"492","fix":"493"},{"desc":"494","fix":"495"},{"desc":"496","fix":"497"},"directive","","Update the dependencies array to be: [getUserById]",{"range":"498","text":"499"},"Update the dependencies array to be: [getVocabById]",{"range":"500","text":"501"},"Update the dependencies array to be: [getItemById]",{"range":"502","text":"503"},"Update the dependencies array to be: [getVocabs, selectedCategory]",{"range":"504","text":"505"},"Update the dependencies array to be: [navigate, user.learns]",{"range":"506","text":"507"},"Update the dependencies array to be: [navigate, user.lessons]",{"range":"508","text":"509"},[2937,2939],"[getUserById]",[2445,2447],"[getVocabById]",[2252,2254],"[getItemById]",[15558,15576],"[getVocabs, selectedCategory]",[1069,1071],"[navigate, user.learns]",[1063,1065],"[navigate, user.lessons]"]