{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maste\\\\Documents\\\\Codes\\\\Websites\\\\web-isyaratlingo\\\\frontend\\\\src\\\\pages\\\\learning\\\\MigrateLearn.jsx\",\n  _s = $RefreshSig$();\nimport Navbar from \"../../components/NavbarLogin\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { getMe } from \"../../auth/authSlice\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LearningInstruction() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useSelector(state => state.auth);\n\n  // Replace 'userRoles' with the actual roles of the logged-in user from your application\n  const {\n    isError\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    dispatch(getMe());\n  }, [dispatch]);\n  useEffect(() => {\n    if (isError) {\n      navigate(\"/login\");\n    }\n  }, [isError, navigate]);\n  useEffect(() => {\n    AOS.init();\n  }, []);\n  const [learn, setLearn] = useState([]);\n  useEffect(() => {\n    getLearns();\n    let path = `/learn-instruction/${user.learns[0].uuid}`;\n    navigate(path);\n  }, []);\n  const getLearns = async () => {\n    try {\n      const response = await axios.get(`https://api2.isyaratlingo.cloud/learn`);\n      if (Array.isArray(response.data)) {\n        setLearn(response.data);\n      } else {\n        setLearn([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching learns:\", error);\n    }\n  };\n  const gotoLesson = async () => {\n    let path = `/learn-task/${user.lessons[0].uuid}`;\n    navigate(path);\n  };\n\n  // Assuming user.learns[0].number represents the current progress level\n  const minimumProgress = user.progresslearn.uuid === user.learns[0].uuid ? user.progresslearn.minimum : 0;\n  const maximumProgress = user.progresslearn.uuid === user.learns[0].uuid ? user.progresslearn.maximum : 10; // Assuming the maximum level is 10 as a default value\n\n  const postNextLearn = async () => {\n    const url = `https://api2.isyaratlingo.cloud/level/nextlearn/${user.uuid}`;\n    try {\n      const response = await axios.post(url);\n      if (response.data.message === \"Next learn session retrieved.\") {\n        getUpdatedUserInformation(); // Fetch the updated user information\n      }\n    } catch (error) {\n      console.error(\"Error getting next learn session:\", error);\n    }\n  };\n  const getUpdatedUserInformation = async () => {\n    try {\n      const response = await axios.get(`https://api2.isyaratlingo.cloud/auth/me`);\n      if (response.data) {\n        const updatedUser = response.data;\n        if (updatedUser.progresslearn) {\n          navigate(`/learn-instruction/${updatedUser.progresslearn}`);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error fetching updated user information:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(LearningInstruction, \"v35m2iJ965IavnCiBq4NeLGKy1U=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = LearningInstruction;\nvar _c;\n$RefreshReg$(_c, \"LearningInstruction\");","map":{"version":3,"names":["Navbar","React","useState","useEffect","useNavigate","Link","useSelector","useDispatch","axios","getMe","AOS","jsxDEV","_jsxDEV","Fragment","_Fragment","LearningInstruction","_s","dispatch","navigate","user","state","auth","isError","init","learn","setLearn","getLearns","path","learns","uuid","response","get","Array","isArray","data","error","console","gotoLesson","lessons","minimumProgress","progresslearn","minimum","maximumProgress","maximum","postNextLearn","url","post","message","getUpdatedUserInformation","updatedUser","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Maste/Documents/Codes/Websites/web-isyaratlingo/frontend/src/pages/learning/MigrateLearn.jsx"],"sourcesContent":["import Navbar from \"../../components/NavbarLogin\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { getMe } from \"../../auth/authSlice\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\n\r\nexport default function LearningInstruction() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { user } = useSelector((state) => state.auth);\r\n\r\n  // Replace 'userRoles' with the actual roles of the logged-in user from your application\r\n  const { isError } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(getMe());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (isError) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [isError, navigate]);\r\n\r\n  useEffect(() => {\r\n    AOS.init();\r\n  }, []);\r\n\r\n  const [learn, setLearn] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getLearns();\r\n    let path = `/learn-instruction/${user.learns[0].uuid}`;\r\n    navigate(path);\r\n  }, []);\r\n\r\n  const getLearns = async () => {\r\n    try {\r\n      const response = await axios.get(`https://api2.isyaratlingo.cloud/learn`);\r\n      if (Array.isArray(response.data)) {\r\n        setLearn(response.data);\r\n      } else {\r\n        setLearn([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching learns:\", error);\r\n    }\r\n  };\r\n\r\n  const gotoLesson = async () => {\r\n    let path = `/learn-task/${user.lessons[0].uuid}`;\r\n    navigate(path);\r\n  };\r\n\r\n  // Assuming user.learns[0].number represents the current progress level\r\n  const minimumProgress =\r\n    user.progresslearn.uuid === user.learns[0].uuid\r\n      ? user.progresslearn.minimum\r\n      : 0;\r\n\r\n  const maximumProgress =\r\n    user.progresslearn.uuid === user.learns[0].uuid\r\n      ? user.progresslearn.maximum\r\n      : 10; // Assuming the maximum level is 10 as a default value\r\n\r\n  const postNextLearn = async () => {\r\n    const url = `https://api2.isyaratlingo.cloud/level/nextlearn/${user.uuid}`;\r\n\r\n    try {\r\n      const response = await axios.post(url);\r\n      if (response.data.message === \"Next learn session retrieved.\") {\r\n        getUpdatedUserInformation(); // Fetch the updated user information\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error getting next learn session:\", error);\r\n    }\r\n  };\r\n\r\n  const getUpdatedUserInformation = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api2.isyaratlingo.cloud/auth/me`\r\n      );\r\n      if (response.data) {\r\n        const updatedUser = response.data;\r\n        if (updatedUser.progresslearn) {\r\n          navigate(`/learn-instruction/${updatedUser.progresslearn}`);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching updated user information:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"min-h-screen\">\r\n        <Navbar />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}