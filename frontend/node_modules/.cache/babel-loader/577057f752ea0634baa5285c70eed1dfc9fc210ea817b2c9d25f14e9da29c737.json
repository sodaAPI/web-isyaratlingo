{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maste\\\\Documents\\\\Codes\\\\Websites\\\\web-isyaratlingo\\\\frontend\\\\src\\\\components\\\\ChartsUser.jsx\",\n  _s = $RefreshSig$();\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport default function ChartsUser() {\n  _s();\n  const [userCounts, setUserCounts] = useState({});\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/user\");\n        const users = response.data;\n        const counts = {};\n        users.forEach(user => {\n          const createdDate = new Date(user.created_at.replace(\" \", \"T\"));\n          if (!isNaN(createdDate.getTime())) {\n            const monthYear = createdDate.toLocaleDateString(\"en-US\", {\n              year: \"numeric\",\n              month: \"long\"\n            });\n            if (!counts[monthYear]) {\n              counts[monthYear] = 1;\n            } else {\n              counts[monthYear]++;\n            }\n          } else {\n            console.error(\"Invalid date format:\", user.created_at);\n          }\n        });\n        setUserCounts(counts);\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n    fetchUsers();\n  }, []);\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: \"User Registration by Month\"\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Month\"\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: \"Number of Users\"\n        }\n      }\n    }\n  };\n  const labels = Object.keys(userCounts);\n  const data = {\n    labels,\n    datasets: [{\n      label: \"Users\",\n      data: Object.values(userCounts),\n      backgroundColor: \"rgba(53, 162, 235, 0.5)\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    options: options,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 10\n  }, this);\n}\n_s(ChartsUser, \"lyHQuAHjQKyZp7f6UZJWDcTRyus=\");\n_c = ChartsUser;\nfunction parseDate(dateStr) {\n  return new Date(dateStr);\n}\nvar _c;\n$RefreshReg$(_c, \"ChartsUser\");","map":{"version":3,"names":["Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","useState","useEffect","axios","jsxDEV","_jsxDEV","register","ChartsUser","_s","userCounts","setUserCounts","fetchUsers","response","get","users","data","counts","forEach","user","createdDate","Date","created_at","replace","isNaN","getTime","monthYear","toLocaleDateString","year","month","console","error","options","responsive","plugins","legend","display","title","text","scales","x","y","beginAtZero","labels","Object","keys","datasets","label","values","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","parseDate","dateStr","$RefreshReg$"],"sources":["C:/Users/Maste/Documents/Codes/Websites/web-isyaratlingo/frontend/src/components/ChartsUser.jsx"],"sourcesContent":["import {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport default function ChartsUser() {\r\n  const [userCounts, setUserCounts] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/user\");\r\n        const users = response.data;\r\n\r\n        const counts = {};\r\n\r\n        users.forEach((user) => {\r\n          const createdDate = new Date(user.created_at.replace(\" \", \"T\"));\r\n\r\n          if (!isNaN(createdDate.getTime())) {\r\n            const monthYear = createdDate.toLocaleDateString(\"en-US\", {\r\n              year: \"numeric\",\r\n              month: \"long\",\r\n            });\r\n\r\n            if (!counts[monthYear]) {\r\n              counts[monthYear] = 1;\r\n            } else {\r\n              counts[monthYear]++;\r\n            }\r\n          } else {\r\n            console.error(\"Invalid date format:\", user.created_at);\r\n          }\r\n        });\r\n\r\n        setUserCounts(counts);\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"User Registration by Month\",\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: \"Month\",\r\n        },\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: \"Number of Users\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const labels = Object.keys(userCounts);\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Users\",\r\n        data: Object.values(userCounts),\r\n        backgroundColor: \"rgba(53, 162, 235, 0.5)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <Bar options={options} data={data} />;\r\n}\r\n\r\nfunction parseDate(dateStr) {\r\n  return new Date(dateStr);\r\n}\r\n"],"mappings":";;AAAA,SACEA,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1BZ,OAAO,CAACa,QAAQ,CACdZ,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,eAAe,SAASQ,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,4BAA4B,CAAC;QAC9D,MAAMC,KAAK,GAAGF,QAAQ,CAACG,IAAI;QAE3B,MAAMC,MAAM,GAAG,CAAC,CAAC;QAEjBF,KAAK,CAACG,OAAO,CAAEC,IAAI,IAAK;UACtB,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAACF,IAAI,CAACG,UAAU,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;UAE/D,IAAI,CAACC,KAAK,CAACJ,WAAW,CAACK,OAAO,CAAC,CAAC,CAAC,EAAE;YACjC,MAAMC,SAAS,GAAGN,WAAW,CAACO,kBAAkB,CAAC,OAAO,EAAE;cACxDC,IAAI,EAAE,SAAS;cACfC,KAAK,EAAE;YACT,CAAC,CAAC;YAEF,IAAI,CAACZ,MAAM,CAACS,SAAS,CAAC,EAAE;cACtBT,MAAM,CAACS,SAAS,CAAC,GAAG,CAAC;YACvB,CAAC,MAAM;cACLT,MAAM,CAACS,SAAS,CAAC,EAAE;YACrB;UACF,CAAC,MAAM;YACLI,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEZ,IAAI,CAACG,UAAU,CAAC;UACxD;QACF,CAAC,CAAC;QAEFX,aAAa,CAACM,MAAM,CAAC;MACvB,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDnB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMoB,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,OAAO,EAAE;MACX,CAAC;MACDC,KAAK,EAAE;QACLD,OAAO,EAAE,IAAI;QACbE,IAAI,EAAE;MACR;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDH,KAAK,EAAE;UACLD,OAAO,EAAE,IAAI;UACbE,IAAI,EAAE;QACR;MACF,CAAC;MACDG,CAAC,EAAE;QACDC,WAAW,EAAE,IAAI;QACjBL,KAAK,EAAE;UACLD,OAAO,EAAE,IAAI;UACbE,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAED,MAAMK,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACnC,UAAU,CAAC;EACtC,MAAMM,IAAI,GAAG;IACX2B,MAAM;IACNG,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,OAAO;MACd/B,IAAI,EAAE4B,MAAM,CAACI,MAAM,CAACtC,UAAU,CAAC;MAC/BuC,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,oBAAO3C,OAAA,CAACL,GAAG;IAAC+B,OAAO,EAAEA,OAAQ;IAAChB,IAAI,EAAEA;EAAK;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9C;AAAC5C,EAAA,CAhFuBD,UAAU;AAAA8C,EAAA,GAAV9C,UAAU;AAkFlC,SAAS+C,SAASA,CAACC,OAAO,EAAE;EAC1B,OAAO,IAAInC,IAAI,CAACmC,OAAO,CAAC;AAC1B;AAAC,IAAAF,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}