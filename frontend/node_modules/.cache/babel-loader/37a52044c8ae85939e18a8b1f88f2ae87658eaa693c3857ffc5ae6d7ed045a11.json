{"ast":null,"code":"import cloneObject from 'date-fns/_lib/cloneObject/index.js';\nimport format from '../format/index.js';\nimport utcToZonedTime from '../utcToZonedTime/index.js';\n\n/**\n * @name formatInTimeZone\n * @category Time Zone Helpers\n * @summary Gets the offset in milliseconds between the time zone and Universal Coordinated Time (UTC)\n *\n * @param {Date|String|Number} date - the date representing the local time / real UTC time\n * @param {String} timeZone - the time zone this date should be formatted for; can be an offset or IANA time zone\n * @param {String} formatStr - the string of tokens\n * @param {OptionsWithTZ} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link\n *   https://date-fns.org/docs/toDate}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See\n *   [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:\n *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).\n *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens\n *   (`yy`, `yyyy`). See: https://git.io/fxCyr\n * @param {String} [options.timeZone=''] - used to specify the IANA time zone offset of a date String.\n * @returns {String} the formatted date string\n */\nexport default function formatInTimeZone(date, timeZone, formatStr, options) {\n  var extendedOptions = cloneObject(options);\n  extendedOptions.timeZone = timeZone;\n  return format(utcToZonedTime(date, timeZone), formatStr, extendedOptions);\n}","map":{"version":3,"names":["cloneObject","format","utcToZonedTime","formatInTimeZone","date","timeZone","formatStr","options","extendedOptions"],"sources":["C:/Users/Maste/Documents/Codes/Websites/web-isyaratlingo/frontend/node_modules/date-fns-tz/esm/formatInTimeZone/index.js"],"sourcesContent":["import cloneObject from 'date-fns/_lib/cloneObject/index.js'\nimport format from '../format/index.js'\nimport utcToZonedTime from '../utcToZonedTime/index.js'\n\n/**\n * @name formatInTimeZone\n * @category Time Zone Helpers\n * @summary Gets the offset in milliseconds between the time zone and Universal Coordinated Time (UTC)\n *\n * @param {Date|String|Number} date - the date representing the local time / real UTC time\n * @param {String} timeZone - the time zone this date should be formatted for; can be an offset or IANA time zone\n * @param {String} formatStr - the string of tokens\n * @param {OptionsWithTZ} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link\n *   https://date-fns.org/docs/toDate}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See\n *   [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:\n *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).\n *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens\n *   (`yy`, `yyyy`). See: https://git.io/fxCyr\n * @param {String} [options.timeZone=''] - used to specify the IANA time zone offset of a date String.\n * @returns {String} the formatted date string\n */\nexport default function formatInTimeZone(date, timeZone, formatStr, options) {\n  var extendedOptions = cloneObject(options)\n  extendedOptions.timeZone = timeZone\n  return format(utcToZonedTime(date, timeZone), formatStr, extendedOptions)\n}\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,oCAAoC;AAC5D,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,cAAc,MAAM,4BAA4B;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,gBAAgBA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAE;EAC3E,IAAIC,eAAe,GAAGR,WAAW,CAACO,OAAO,CAAC;EAC1CC,eAAe,CAACH,QAAQ,GAAGA,QAAQ;EACnC,OAAOJ,MAAM,CAACC,cAAc,CAACE,IAAI,EAAEC,QAAQ,CAAC,EAAEC,SAAS,EAAEE,eAAe,CAAC;AAC3E"},"metadata":{},"sourceType":"module","externalDependencies":[]}