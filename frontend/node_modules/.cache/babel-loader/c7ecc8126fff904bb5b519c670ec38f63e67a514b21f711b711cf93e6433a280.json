{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maste\\\\Documents\\\\Codes\\\\Websites\\\\web-isyaratlingo\\\\frontend\\\\src\\\\components\\\\ChartsUser.jsx\",\n  _s = $RefreshSig$();\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { faker } from \"@faker-js/faker\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getMe } from \"../../auth/authSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport default function ChartsUser() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const getUsers = async () => {\n    const response = await axios.get(`http://localhost:5000/user`);\n    setUsers(response.data);\n  };\n  const formatTimestamp = timestamp => {\n    const options = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      timeZone: \"Asia/Jakarta\"\n    };\n    return new Intl.DateTimeFormat(\"en-US\", options).format(new Date(timestamp));\n  };\n  useEffect(() => {\n    getUsers();\n  }, []);\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\"\n      },\n      title: {\n        display: true,\n        text: \"Chart.js Bar Chart\"\n      }\n    }\n  };\n  const labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\n  const data = {\n    labels,\n    datasets: [{\n      label: \"Dataset 1\",\n      data: labels.map(() => faker.datatype.number({\n        min: 0,\n        max: 10\n      })),\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n    }, {\n      label: \"Dataset 2\",\n      data: labels.map(() => faker.datatype.number({\n        min: 0,\n        max: 10\n      })),\n      backgroundColor: \"rgba(53, 162, 235, 0.5)\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    options: options,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 12\n  }, this);\n}\n_s(ChartsUser, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = ChartsUser;\nvar _c;\n$RefreshReg$(_c, \"ChartsUser\");","map":{"version":3,"names":["Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","faker","useState","useEffect","useRef","useNavigate","getMe","useDispatch","useSelector","axios","jsxDEV","_jsxDEV","register","ChartsUser","_s","users","setUsers","getUsers","response","get","data","formatTimestamp","timestamp","options","year","month","day","timeZone","Intl","DateTimeFormat","format","Date","responsive","plugins","legend","position","title","display","text","labels","datasets","label","map","datatype","number","min","max","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Maste/Documents/Codes/Websites/web-isyaratlingo/frontend/src/components/ChartsUser.jsx"],"sourcesContent":["import {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n  } from \"chart.js\";\r\n  import { Bar } from \"react-chartjs-2\";\r\n  import { faker } from \"@faker-js/faker\";\r\n  import { useState, useEffect, useRef } from \"react\";\r\n  import { useNavigate } from \"react-router-dom\";\r\n  import { getMe } from \"../../auth/authSlice\";\r\n  import { useDispatch, useSelector } from \"react-redux\";\r\n  import axios from \"axios\";\r\n  \r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n  );\r\n  \r\n  export default function ChartsUser() {\r\n    const [users, setUsers] = useState([]);\r\n  \r\n    const getUsers = async () => {\r\n      const response = await axios.get(`http://localhost:5000/user`);\r\n      setUsers(response.data);\r\n    };\r\n  \r\n    const formatTimestamp = (timestamp) => {\r\n      const options = {\r\n        year: \"numeric\",\r\n        month: \"2-digit\",\r\n        day: \"2-digit\",\r\n        timeZone: \"Asia/Jakarta\",\r\n      };\r\n      return new Intl.DateTimeFormat(\"en-US\", options).format(\r\n        new Date(timestamp)\r\n      );\r\n    };\r\n  \r\n    useEffect(() => {\r\n      getUsers();\r\n    }, []);\r\n  \r\n    const options = {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          position: \"top\",\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: \"Chart.js Bar Chart\",\r\n        },\r\n      },\r\n    };\r\n  \r\n    const labels = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n    ];\r\n  \r\n    const data = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: \"Dataset 1\",\r\n          data: labels.map(() => faker.datatype.number({ min: 0, max: 10 })),\r\n          backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n        },\r\n        {\r\n          label: \"Dataset 2\",\r\n          data: labels.map(() => faker.datatype.number({ min: 0, max: 10 })),\r\n          backgroundColor: \"rgba(53, 162, 235, 0.5)\",\r\n        },\r\n      ],\r\n    };\r\n  \r\n    return <Bar options={options} data={data} />;\r\n  }\r\n  "],"mappings":";;AAAA,SACIA,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,sBAAsB;AAC5C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1BlB,OAAO,CAACmB,QAAQ,CACdlB,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,eAAe,SAASc,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMe,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,4BAA2B,CAAC;IAC9DH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;EACzB,CAAC;EAED,MAAMC,eAAe,GAAIC,SAAS,IAAK;IACrC,MAAMC,OAAO,GAAG;MACdC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,SAAS;MAChBC,GAAG,EAAE,SAAS;MACdC,QAAQ,EAAE;IACZ,CAAC;IACD,OAAO,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAEN,OAAO,CAAC,CAACO,MAAM,CACrD,IAAIC,IAAI,CAACT,SAAS,CACpB,CAAC;EACH,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACdc,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,OAAO,GAAG;IACdS,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,MAAMC,MAAM,GAAG,CACb,SAAS,EACT,UAAU,EACV,OAAO,EACP,OAAO,EACP,KAAK,EACL,MAAM,EACN,MAAM,CACP;EAED,MAAMnB,IAAI,GAAG;IACXmB,MAAM;IACNC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,WAAW;MAClBrB,IAAI,EAAEmB,MAAM,CAACG,GAAG,CAAC,MAAMzC,KAAK,CAAC0C,QAAQ,CAACC,MAAM,CAAC;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAG,CAAC,CAAC,CAAC;MAClEC,eAAe,EAAE;IACnB,CAAC,EACD;MACEN,KAAK,EAAE,WAAW;MAClBrB,IAAI,EAAEmB,MAAM,CAACG,GAAG,CAAC,MAAMzC,KAAK,CAAC0C,QAAQ,CAACC,MAAM,CAAC;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAG,CAAC,CAAC,CAAC;MAClEC,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,oBAAOpC,OAAA,CAACX,GAAG;IAACuB,OAAO,EAAEA,OAAQ;IAACH,IAAI,EAAEA;EAAK;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9C;AAACrC,EAAA,CAhEuBD,UAAU;AAAAuC,EAAA,GAAVvC,UAAU;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}