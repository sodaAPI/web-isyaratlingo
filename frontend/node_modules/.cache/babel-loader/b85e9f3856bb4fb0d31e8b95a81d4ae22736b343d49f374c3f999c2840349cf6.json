{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maste\\\\Documents\\\\Codes\\\\Websites\\\\web-isyaratlingo\\\\frontend\\\\src\\\\components\\\\ChartsUser.jsx\",\n  _s = $RefreshSig$();\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport default function ChartsUser() {\n  _s();\n  const [userCounts, setUserCounts] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await axios.get(\"http://localhost:5000/user\");\n        const users = response.data;\n        const counts = {};\n        users.forEach(user => {\n          const createdDate = new Date(user.createdAt);\n          const monthYear = createdDate.toLocaleString(\"default\", {\n            year: \"numeric\",\n            month: \"long\"\n          });\n          if (!counts[monthYear]) {\n            counts[monthYear] = 1;\n          } else {\n            counts[monthYear]++;\n          }\n        });\n        setUserCounts(counts);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, []);\n  const data = {\n    labels: Object.keys(userCounts),\n    datasets: [{\n      label: \"User Registrations\",\n      data: Object.values(userCounts),\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\"\n      },\n      title: {\n        display: true,\n        text: \"User Registrations by Month\"\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"loading loading-spinner text-primary loading-lg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: data,\n    options: options,\n    width: 2,\n    height: 3\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 7\n  }, this);\n}\n_s(ChartsUser, \"ndNjv2o2CnsC1Pj4TG2TqJ1bS6E=\");\n_c = ChartsUser;\nvar _c;\n$RefreshReg$(_c, \"ChartsUser\");","map":{"version":3,"names":["Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","useState","useEffect","axios","jsxDEV","_jsxDEV","register","ChartsUser","_s","userCounts","setUserCounts","loading","setLoading","fetchData","response","get","users","data","counts","forEach","user","createdDate","Date","createdAt","monthYear","toLocaleString","year","month","error","console","labels","Object","keys","datasets","label","values","backgroundColor","options","responsive","plugins","legend","position","title","display","text","className","fileName","_jsxFileName","lineNumber","columnNumber","width","height","_c","$RefreshReg$"],"sources":["C:/Users/Maste/Documents/Codes/Websites/web-isyaratlingo/frontend/src/components/ChartsUser.jsx"],"sourcesContent":["import {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n  } from \"chart.js\";\r\n  import { Bar } from \"react-chartjs-2\";\r\n  import { useState, useEffect } from \"react\";\r\n  import axios from \"axios\";\r\n  \r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n  );\r\n  \r\n  export default function ChartsUser() {\r\n    const [userCounts, setUserCounts] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n  \r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        try {\r\n          const response = await axios.get(\"http://localhost:5000/user\");\r\n          const users = response.data;\r\n  \r\n          const counts = {};\r\n  \r\n          users.forEach((user) => {\r\n            const createdDate = new Date(user.createdAt);\r\n  \r\n            const monthYear = createdDate.toLocaleString(\"default\", {\r\n              year: \"numeric\",\r\n              month: \"long\",\r\n            });\r\n  \r\n            if (!counts[monthYear]) {\r\n              counts[monthYear] = 1;\r\n            } else {\r\n              counts[monthYear]++;\r\n            }\r\n          });\r\n  \r\n          setUserCounts(counts);\r\n          setLoading(false);\r\n        } catch (error) {\r\n          console.error(\"Error fetching user data:\", error);\r\n          setLoading(false);\r\n        }\r\n      }\r\n  \r\n      fetchData();\r\n    }, []);\r\n  \r\n    const data = {\r\n      labels: Object.keys(userCounts),\r\n      datasets: [\r\n        {\r\n          label: \"User Registrations\",\r\n          data: Object.values(userCounts),\r\n          backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n        },\r\n      ],\r\n    };\r\n  \r\n    const options = {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          position: \"top\",\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: \"User Registrations by Month\",\r\n        },\r\n      },\r\n    };\r\n  \r\n    if (loading) {\r\n      return <span className=\"loading loading-spinner text-primary loading-lg\"></span>;\r\n    }\r\n  \r\n    return (\r\n      <Bar\r\n        data={data}\r\n        options={options}\r\n        width={2}\r\n        height={3}\r\n      />\r\n    );\r\n  }\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}